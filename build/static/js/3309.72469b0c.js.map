{"version":3,"file":"static/js/3309.72469b0c.js","mappings":"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","sources":["../node_modules/echarts/lib/label/LabelManager.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO: move labels out of viewport.\nimport { BoundingRect, updateProps, initProps, isElementRemoved } from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { parsePercent } from '../util/number.js';\nimport Transformable from 'zrender/lib/core/Transformable.js';\nimport { updateLabelLinePoints, setLabelLineStyle, getLabelLineStatesModels } from './labelGuideHelper.js';\nimport { makeInner } from '../util/model.js';\nimport { retrieve2, each, keys, isFunction, filter, indexOf } from 'zrender/lib/core/util.js';\nimport { prepareLayoutList, hideOverlap, shiftLayoutOnX, shiftLayoutOnY } from './labelLayoutHelper.js';\nimport { labelInner, animateLabelValue } from './labelStyle.js';\n\nfunction cloneArr(points) {\n  if (points) {\n    var newPoints = [];\n\n    for (var i = 0; i < points.length; i++) {\n      newPoints.push(points[i].slice());\n    }\n\n    return newPoints;\n  }\n}\n\nfunction prepareLayoutCallbackParams(labelItem, hostEl) {\n  var label = labelItem.label;\n  var labelLine = hostEl && hostEl.getTextGuideLine();\n  return {\n    dataIndex: labelItem.dataIndex,\n    dataType: labelItem.dataType,\n    seriesIndex: labelItem.seriesModel.seriesIndex,\n    text: labelItem.label.style.text,\n    rect: labelItem.hostRect,\n    labelRect: labelItem.rect,\n    // x: labelAttr.x,\n    // y: labelAttr.y,\n    align: label.style.align,\n    verticalAlign: label.style.verticalAlign,\n    labelLinePoints: cloneArr(labelLine && labelLine.shape.points)\n  };\n}\n\nvar LABEL_OPTION_TO_STYLE_KEYS = ['align', 'verticalAlign', 'width', 'height', 'fontSize'];\nvar dummyTransformable = new Transformable();\nvar labelLayoutInnerStore = makeInner();\nvar labelLineAnimationStore = makeInner();\n\nfunction extendWithKeys(target, source, keys) {\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (source[key] != null) {\n      target[key] = source[key];\n    }\n  }\n}\n\nvar LABEL_LAYOUT_PROPS = ['x', 'y', 'rotation'];\n\nvar LabelManager =\n/** @class */\nfunction () {\n  function LabelManager() {\n    this._labelList = [];\n    this._chartViewList = [];\n  }\n\n  LabelManager.prototype.clearLabels = function () {\n    this._labelList = [];\n    this._chartViewList = [];\n  };\n  /**\n   * Add label to manager\n   */\n\n\n  LabelManager.prototype._addLabel = function (dataIndex, dataType, seriesModel, label, layoutOption) {\n    var labelStyle = label.style;\n    var hostEl = label.__hostTarget;\n    var textConfig = hostEl.textConfig || {}; // TODO: If label is in other state.\n\n    var labelTransform = label.getComputedTransform();\n    var labelRect = label.getBoundingRect().plain();\n    BoundingRect.applyTransform(labelRect, labelRect, labelTransform);\n\n    if (labelTransform) {\n      dummyTransformable.setLocalTransform(labelTransform);\n    } else {\n      // Identity transform.\n      dummyTransformable.x = dummyTransformable.y = dummyTransformable.rotation = dummyTransformable.originX = dummyTransformable.originY = 0;\n      dummyTransformable.scaleX = dummyTransformable.scaleY = 1;\n    }\n\n    var host = label.__hostTarget;\n    var hostRect;\n\n    if (host) {\n      hostRect = host.getBoundingRect().plain();\n      var transform = host.getComputedTransform();\n      BoundingRect.applyTransform(hostRect, hostRect, transform);\n    }\n\n    var labelGuide = hostRect && host.getTextGuideLine();\n\n    this._labelList.push({\n      label: label,\n      labelLine: labelGuide,\n      seriesModel: seriesModel,\n      dataIndex: dataIndex,\n      dataType: dataType,\n      layoutOption: layoutOption,\n      computedLayoutOption: null,\n      rect: labelRect,\n      hostRect: hostRect,\n      // Label with lower priority will be hidden when overlapped\n      // Use rect size as default priority\n      priority: hostRect ? hostRect.width * hostRect.height : 0,\n      // Save default label attributes.\n      // For restore if developers want get back to default value in callback.\n      defaultAttr: {\n        ignore: label.ignore,\n        labelGuideIgnore: labelGuide && labelGuide.ignore,\n        x: dummyTransformable.x,\n        y: dummyTransformable.y,\n        scaleX: dummyTransformable.scaleX,\n        scaleY: dummyTransformable.scaleY,\n        rotation: dummyTransformable.rotation,\n        style: {\n          x: labelStyle.x,\n          y: labelStyle.y,\n          align: labelStyle.align,\n          verticalAlign: labelStyle.verticalAlign,\n          width: labelStyle.width,\n          height: labelStyle.height,\n          fontSize: labelStyle.fontSize\n        },\n        cursor: label.cursor,\n        attachedPos: textConfig.position,\n        attachedRot: textConfig.rotation\n      }\n    });\n  };\n\n  LabelManager.prototype.addLabelsOfSeries = function (chartView) {\n    var _this = this;\n\n    this._chartViewList.push(chartView);\n\n    var seriesModel = chartView.__model;\n    var layoutOption = seriesModel.get('labelLayout');\n    /**\n     * Ignore layouting if it's not specified anything.\n     */\n\n    if (!(isFunction(layoutOption) || keys(layoutOption).length)) {\n      return;\n    }\n\n    chartView.group.traverse(function (child) {\n      if (child.ignore) {\n        return true; // Stop traverse descendants.\n      } // Only support label being hosted on graphic elements.\n\n\n      var textEl = child.getTextContent();\n      var ecData = getECData(child); // Can only attach the text on the element with dataIndex\n\n      if (textEl && !textEl.disableLabelLayout) {\n        _this._addLabel(ecData.dataIndex, ecData.dataType, seriesModel, textEl, layoutOption);\n      }\n    });\n  };\n\n  LabelManager.prototype.updateLayoutConfig = function (api) {\n    var width = api.getWidth();\n    var height = api.getHeight();\n\n    function createDragHandler(el, labelLineModel) {\n      return function () {\n        updateLabelLinePoints(el, labelLineModel);\n      };\n    }\n\n    for (var i = 0; i < this._labelList.length; i++) {\n      var labelItem = this._labelList[i];\n      var label = labelItem.label;\n      var hostEl = label.__hostTarget;\n      var defaultLabelAttr = labelItem.defaultAttr;\n      var layoutOption = void 0; // TODO A global layout option?\n\n      if (isFunction(labelItem.layoutOption)) {\n        layoutOption = labelItem.layoutOption(prepareLayoutCallbackParams(labelItem, hostEl));\n      } else {\n        layoutOption = labelItem.layoutOption;\n      }\n\n      layoutOption = layoutOption || {};\n      labelItem.computedLayoutOption = layoutOption;\n      var degreeToRadian = Math.PI / 180; // TODO hostEl should always exists.\n      // Or label should not have parent because the x, y is all in global space.\n\n      if (hostEl) {\n        hostEl.setTextConfig({\n          // Force to set local false.\n          local: false,\n          // Ignore position and rotation config on the host el if x or y is changed.\n          position: layoutOption.x != null || layoutOption.y != null ? null : defaultLabelAttr.attachedPos,\n          // Ignore rotation config on the host el if rotation is changed.\n          rotation: layoutOption.rotate != null ? layoutOption.rotate * degreeToRadian : defaultLabelAttr.attachedRot,\n          offset: [layoutOption.dx || 0, layoutOption.dy || 0]\n        });\n      }\n\n      var needsUpdateLabelLine = false;\n\n      if (layoutOption.x != null) {\n        // TODO width of chart view.\n        label.x = parsePercent(layoutOption.x, width);\n        label.setStyle('x', 0); // Ignore movement in style. TODO: origin.\n\n        needsUpdateLabelLine = true;\n      } else {\n        label.x = defaultLabelAttr.x;\n        label.setStyle('x', defaultLabelAttr.style.x);\n      }\n\n      if (layoutOption.y != null) {\n        // TODO height of chart view.\n        label.y = parsePercent(layoutOption.y, height);\n        label.setStyle('y', 0); // Ignore movement in style.\n\n        needsUpdateLabelLine = true;\n      } else {\n        label.y = defaultLabelAttr.y;\n        label.setStyle('y', defaultLabelAttr.style.y);\n      }\n\n      if (layoutOption.labelLinePoints) {\n        var guideLine = hostEl.getTextGuideLine();\n\n        if (guideLine) {\n          guideLine.setShape({\n            points: layoutOption.labelLinePoints\n          }); // Not update\n\n          needsUpdateLabelLine = false;\n        }\n      }\n\n      var labelLayoutStore = labelLayoutInnerStore(label);\n      labelLayoutStore.needsUpdateLabelLine = needsUpdateLabelLine;\n      label.rotation = layoutOption.rotate != null ? layoutOption.rotate * degreeToRadian : defaultLabelAttr.rotation;\n      label.scaleX = defaultLabelAttr.scaleX;\n      label.scaleY = defaultLabelAttr.scaleY;\n\n      for (var k = 0; k < LABEL_OPTION_TO_STYLE_KEYS.length; k++) {\n        var key = LABEL_OPTION_TO_STYLE_KEYS[k];\n        label.setStyle(key, layoutOption[key] != null ? layoutOption[key] : defaultLabelAttr.style[key]);\n      }\n\n      if (layoutOption.draggable) {\n        label.draggable = true;\n        label.cursor = 'move';\n\n        if (hostEl) {\n          var hostModel = labelItem.seriesModel;\n\n          if (labelItem.dataIndex != null) {\n            var data = labelItem.seriesModel.getData(labelItem.dataType);\n            hostModel = data.getItemModel(labelItem.dataIndex);\n          }\n\n          label.on('drag', createDragHandler(hostEl, hostModel.getModel('labelLine')));\n        }\n      } else {\n        // TODO Other drag functions?\n        label.off('drag');\n        label.cursor = defaultLabelAttr.cursor;\n      }\n    }\n  };\n\n  LabelManager.prototype.layout = function (api) {\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var labelList = prepareLayoutList(this._labelList);\n    var labelsNeedsAdjustOnX = filter(labelList, function (item) {\n      return item.layoutOption.moveOverlap === 'shiftX';\n    });\n    var labelsNeedsAdjustOnY = filter(labelList, function (item) {\n      return item.layoutOption.moveOverlap === 'shiftY';\n    });\n    shiftLayoutOnX(labelsNeedsAdjustOnX, 0, width);\n    shiftLayoutOnY(labelsNeedsAdjustOnY, 0, height);\n    var labelsNeedsHideOverlap = filter(labelList, function (item) {\n      return item.layoutOption.hideOverlap;\n    });\n    hideOverlap(labelsNeedsHideOverlap);\n  };\n  /**\n   * Process all labels. Not only labels with layoutOption.\n   */\n\n\n  LabelManager.prototype.processLabelsOverall = function () {\n    var _this = this;\n\n    each(this._chartViewList, function (chartView) {\n      var seriesModel = chartView.__model;\n      var ignoreLabelLineUpdate = chartView.ignoreLabelLineUpdate;\n      var animationEnabled = seriesModel.isAnimationEnabled();\n      chartView.group.traverse(function (child) {\n        if (child.ignore && !child.forceLabelAnimation) {\n          return true; // Stop traverse descendants.\n        }\n\n        var needsUpdateLabelLine = !ignoreLabelLineUpdate;\n        var label = child.getTextContent();\n\n        if (!needsUpdateLabelLine && label) {\n          needsUpdateLabelLine = labelLayoutInnerStore(label).needsUpdateLabelLine;\n        }\n\n        if (needsUpdateLabelLine) {\n          _this._updateLabelLine(child, seriesModel);\n        }\n\n        if (animationEnabled) {\n          _this._animateLabels(child, seriesModel);\n        }\n      });\n    });\n  };\n\n  LabelManager.prototype._updateLabelLine = function (el, seriesModel) {\n    // Only support label being hosted on graphic elements.\n    var textEl = el.getTextContent(); // Update label line style.\n\n    var ecData = getECData(el);\n    var dataIndex = ecData.dataIndex; // Only support labelLine on the labels represent data.\n\n    if (textEl && dataIndex != null) {\n      var data = seriesModel.getData(ecData.dataType);\n      var itemModel = data.getItemModel(dataIndex);\n      var defaultStyle = {};\n      var visualStyle = data.getItemVisual(dataIndex, 'style');\n      var visualType = data.getVisual('drawType'); // Default to be same with main color\n\n      defaultStyle.stroke = visualStyle[visualType];\n      var labelLineModel = itemModel.getModel('labelLine');\n      setLabelLineStyle(el, getLabelLineStatesModels(itemModel), defaultStyle);\n      updateLabelLinePoints(el, labelLineModel);\n    }\n  };\n\n  LabelManager.prototype._animateLabels = function (el, seriesModel) {\n    var textEl = el.getTextContent();\n    var guideLine = el.getTextGuideLine(); // Animate\n\n    if (textEl // `forceLabelAnimation` has the highest priority\n    && (el.forceLabelAnimation || !textEl.ignore && !textEl.invisible && !el.disableLabelAnimation && !isElementRemoved(el))) {\n      var layoutStore = labelLayoutInnerStore(textEl);\n      var oldLayout = layoutStore.oldLayout;\n      var ecData = getECData(el);\n      var dataIndex = ecData.dataIndex;\n      var newProps = {\n        x: textEl.x,\n        y: textEl.y,\n        rotation: textEl.rotation\n      };\n      var data = seriesModel.getData(ecData.dataType);\n\n      if (!oldLayout) {\n        textEl.attr(newProps); // Disable fade in animation if value animation is enabled.\n\n        if (!labelInner(textEl).valueAnimation) {\n          var oldOpacity = retrieve2(textEl.style.opacity, 1); // Fade in animation\n\n          textEl.style.opacity = 0;\n          initProps(textEl, {\n            style: {\n              opacity: oldOpacity\n            }\n          }, seriesModel, dataIndex);\n        }\n      } else {\n        textEl.attr(oldLayout); // Make sure the animation from is in the right status.\n\n        var prevStates = el.prevStates;\n\n        if (prevStates) {\n          if (indexOf(prevStates, 'select') >= 0) {\n            textEl.attr(layoutStore.oldLayoutSelect);\n          }\n\n          if (indexOf(prevStates, 'emphasis') >= 0) {\n            textEl.attr(layoutStore.oldLayoutEmphasis);\n          }\n        }\n\n        updateProps(textEl, newProps, seriesModel, dataIndex);\n      }\n\n      layoutStore.oldLayout = newProps;\n\n      if (textEl.states.select) {\n        var layoutSelect = layoutStore.oldLayoutSelect = {};\n        extendWithKeys(layoutSelect, newProps, LABEL_LAYOUT_PROPS);\n        extendWithKeys(layoutSelect, textEl.states.select, LABEL_LAYOUT_PROPS);\n      }\n\n      if (textEl.states.emphasis) {\n        var layoutEmphasis = layoutStore.oldLayoutEmphasis = {};\n        extendWithKeys(layoutEmphasis, newProps, LABEL_LAYOUT_PROPS);\n        extendWithKeys(layoutEmphasis, textEl.states.emphasis, LABEL_LAYOUT_PROPS);\n      }\n\n      animateLabelValue(textEl, dataIndex, data, seriesModel, seriesModel);\n    }\n\n    if (guideLine && !guideLine.ignore && !guideLine.invisible) {\n      var layoutStore = labelLineAnimationStore(guideLine);\n      var oldLayout = layoutStore.oldLayout;\n      var newLayout = {\n        points: guideLine.shape.points\n      };\n\n      if (!oldLayout) {\n        guideLine.setShape(newLayout);\n        guideLine.style.strokePercent = 0;\n        initProps(guideLine, {\n          style: {\n            strokePercent: 1\n          }\n        }, seriesModel);\n      } else {\n        guideLine.attr({\n          shape: oldLayout\n        });\n        updateProps(guideLine, {\n          shape: newLayout\n        }, seriesModel);\n      }\n\n      layoutStore.oldLayout = newLayout;\n    }\n  };\n\n  return LabelManager;\n}();\n\nexport default LabelManager;"],"names":["cloneArr","points","newPoints","i","length","push","slice","prepareLayoutCallbackParams","labelItem","hostEl","label","labelLine","getTextGuideLine","dataIndex","dataType","seriesIndex","seriesModel","text","style","rect","hostRect","labelRect","align","verticalAlign","labelLinePoints","shape","LABEL_OPTION_TO_STYLE_KEYS","dummyTransformable","Transformable","labelLayoutInnerStore","makeInner","labelLineAnimationStore","extendWithKeys","target","source","keys","key","LABEL_LAYOUT_PROPS","LabelManager","this","_labelList","_chartViewList","prototype","clearLabels","_addLabel","layoutOption","labelStyle","textConfig","__hostTarget","labelTransform","getComputedTransform","getBoundingRect","plain","BoundingRect","setLocalTransform","x","y","rotation","originX","originY","scaleX","scaleY","host","transform","labelGuide","computedLayoutOption","priority","width","height","defaultAttr","ignore","labelGuideIgnore","fontSize","cursor","attachedPos","position","attachedRot","addLabelsOfSeries","chartView","_this","__model","get","isFunction","group","traverse","child","textEl","getTextContent","ecData","getECData","disableLabelLayout","updateLayoutConfig","api","getWidth","getHeight","createDragHandler","el","labelLineModel","updateLabelLinePoints","defaultLabelAttr","degreeToRadian","Math","PI","setTextConfig","local","rotate","offset","dx","dy","needsUpdateLabelLine","parsePercent","setStyle","guideLine","setShape","k","draggable","hostModel","getData","getItemModel","on","getModel","off","layout","labelList","prepareLayoutList","labelsNeedsAdjustOnX","filter","item","moveOverlap","labelsNeedsAdjustOnY","shiftLayoutOnX","shiftLayoutOnY","labelsNeedsHideOverlap","hideOverlap","processLabelsOverall","each","ignoreLabelLineUpdate","animationEnabled","isAnimationEnabled","forceLabelAnimation","_updateLabelLine","_animateLabels","data","itemModel","defaultStyle","visualStyle","getItemVisual","visualType","getVisual","stroke","setLabelLineStyle","getLabelLineStatesModels","invisible","disableLabelAnimation","isElementRemoved","oldLayout","layoutStore","newProps","attr","prevStates","indexOf","oldLayoutSelect","oldLayoutEmphasis","updateProps","labelInner","valueAnimation","oldOpacity","retrieve2","opacity","initProps","states","select","layoutSelect","emphasis","layoutEmphasis","animateLabelValue","newLayout","strokePercent"],"sourceRoot":""}