{"version":3,"file":"static/js/9551.72714a6c.js","mappings":"kJA+CIA,GAAQC,E,SAAAA,MAERC,EAEJ,SAAUC,GAGR,SAASD,EAAUE,EAAOC,GACxB,OAAOF,EAAOG,KAAKC,KAAM,QAASH,EAAOC,GAAe,CAAC,EAAG,OAASE,IACvE,CA2DA,OA/DAC,EAAAA,EAAAA,IAAUN,EAAWC,GAMrBD,EAAUO,UAAUC,YAAc,SAAUC,EAAOC,GACjD,OAAOL,KAAKM,MAAMH,YAAYC,EAAOC,GAAoB,WAAbL,KAAKO,IAAmB,EAAI,EAC1E,EAUAZ,EAAUO,UAAUM,0BAA4B,WAC9C,IAAIC,EAAOT,KACPU,EAAaD,EAAKE,gBAClBC,EAAeH,EAAKZ,MACpBgB,EAAgBD,EAAaE,YAI7BC,EAAYH,EAAaI,QAE7B,GAAIH,EAAc,GAAKA,EAAc,GAAK,EACxC,OAAO,EAGT,IAAII,EAAYJ,EAAc,GAC1BK,EAAWT,EAAKU,YAAYF,EAAY,GAAKR,EAAKU,YAAYF,GAC9DG,EAAQC,KAAKC,IAAIJ,GAGjBK,EAAOC,EAAAA,GAAyC,MAAbP,EAAoB,GAAKA,EAAY,GAAIP,EAAWe,UAAW,SAAU,OAE5GC,EADOL,KAAKM,IAAIJ,EAAKK,OAAQ,GACjBR,EAEhBS,MAAMH,KAAQA,EAAKI,KACnB,IAAIC,EAAWV,KAAKM,IAAI,EAAGN,KAAKW,MAAMN,IAClCO,EAAQxC,EAAMgB,EAAKyB,OACnBC,EAAmBF,EAAME,iBACzBC,EAAgBH,EAAMG,cAe1B,OAXwB,MAApBD,GAA6C,MAAjBC,GAAyBf,KAAKC,IAAIa,EAAmBJ,IAAa,GAAKV,KAAKC,IAAIc,EAAgBrB,IAAc,GAE3IoB,EAAmBJ,EACpBA,EAAWI,GAITF,EAAMG,cAAgBrB,EACtBkB,EAAME,iBAAmBJ,GAGtBA,CACT,EAEOpC,CACT,CAjEA,CAiEE0C,EAAAA,GAEF1C,EAAUO,UAAUoC,YAAcD,EAAAA,EAAAA,UAAAA,YAClC1C,EAAUO,UAAUqC,YAAcF,EAAAA,EAAAA,UAAAA,YAClC,K,4ICvEIG,EAEJ,SAAU5C,GAGR,SAAS4C,IACP,OAAkB,OAAX5C,GAAmBA,EAAO6C,MAAMzC,KAAM0C,YAAc1C,IAC7D,CAOA,OAXAC,EAAAA,EAAAA,IAAUuC,EAAgB5C,GAM1B4C,EAAetC,UAAUyC,iBAAmB,WAC1C,OAAO3C,KAAK4C,uBAAuB,QAASC,EAAAA,IAAkBC,OAAO,EACvE,EAEAN,EAAeO,KAAO,YACfP,CACT,CAbA,CAaEQ,EAAAA,GAEFC,EAAAA,GAAaT,EAAgBU,EAAAA,GAG7B,IAAIC,EAEJ,SAAUvD,GAGR,SAASuD,IACP,IAAIC,EAAmB,OAAXxD,GAAmBA,EAAO6C,MAAMzC,KAAM0C,YAAc1C,KAGhE,OADAoD,EAAML,KAAOI,EAAeJ,KACrBK,CACT,CAGA,OAVAnD,EAAAA,EAAAA,IAAUkD,EAAgBvD,GAS1BuD,EAAeJ,KAAO,YACfI,CACT,CAZA,CAYEX,GAIEa,EAEJ,SAAUzD,GAGR,SAASyD,IACP,IAAID,EAAmB,OAAXxD,GAAmBA,EAAO6C,MAAMzC,KAAM0C,YAAc1C,KAGhE,OADAoD,EAAML,KAAOM,EAAgBN,KACtBK,CACT,CAGA,OAVAnD,EAAAA,EAAAA,IAAUoD,EAAiBzD,GAS3ByD,EAAgBN,KAAO,aAChBM,CACT,CAZA,CAYEb,E","sources":["../node_modules/echarts/lib/coord/polar/AngleAxis.js","../node_modules/echarts/lib/coord/polar/AxisModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as textContain from 'zrender/lib/contain/text.js';\nimport Axis from '../Axis.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\n\nvar AngleAxis =\n/** @class */\nfunction (_super) {\n  __extends(AngleAxis, _super);\n\n  function AngleAxis(scale, angleExtent) {\n    return _super.call(this, 'angle', scale, angleExtent || [0, 360]) || this;\n  }\n\n  AngleAxis.prototype.pointToData = function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  };\n  /**\n   * Only be called in category axis.\n   * Angle axis uses text height to decide interval\n   *\n   * @override\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n\n\n  AngleAxis.prototype.calculateCategoryInterval = function () {\n    var axis = this;\n    var labelModel = axis.getLabelModel();\n    var ordinalScale = axis.scale;\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n    // avoid generating a long array by `getTicks`\n    // in large category data case.\n\n    var tickCount = ordinalScale.count();\n\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n      return 0;\n    }\n\n    var tickValue = ordinalExtent[0];\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n    var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(tickValue == null ? '' : tickValue + '', labelModel.getFont(), 'center', 'top');\n    var maxH = Math.max(rect.height, 7);\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n    isNaN(dh) && (dh = Infinity);\n    var interval = Math.max(0, Math.floor(dh));\n    var cache = inner(axis.model);\n    var lastAutoInterval = cache.lastAutoInterval;\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n    // otherwise the calculated interval might jitter when the zoom\n    // window size is close to the interval-changing size.\n\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n    // point is not the same when zooming in or zooming out.\n    && lastAutoInterval > interval) {\n      interval = lastAutoInterval;\n    } // Only update cache if cache not used, otherwise the\n    // changing of interval is too insensitive.\n    else {\n        cache.lastTickCount = tickCount;\n        cache.lastAutoInterval = interval;\n      }\n\n    return interval;\n  };\n\n  return AngleAxis;\n}(Axis);\n\nAngleAxis.prototype.dataToAngle = Axis.prototype.dataToCoord;\nAngleAxis.prototype.angleToData = Axis.prototype.coordToData;\nexport default AngleAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport ComponentModel from '../../model/Component.js';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin.js';\nimport { SINGLE_REFERRING } from '../../util/model.js';\n\nvar PolarAxisModel =\n/** @class */\nfunction (_super) {\n  __extends(PolarAxisModel, _super);\n\n  function PolarAxisModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PolarAxisModel.prototype.getCoordSysModel = function () {\n    return this.getReferringComponents('polar', SINGLE_REFERRING).models[0];\n  };\n\n  PolarAxisModel.type = 'polarAxis';\n  return PolarAxisModel;\n}(ComponentModel);\n\nzrUtil.mixin(PolarAxisModel, AxisModelCommonMixin);\nexport { PolarAxisModel };\n\nvar AngleAxisModel =\n/** @class */\nfunction (_super) {\n  __extends(AngleAxisModel, _super);\n\n  function AngleAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AngleAxisModel.type;\n    return _this;\n  }\n\n  AngleAxisModel.type = 'angleAxis';\n  return AngleAxisModel;\n}(PolarAxisModel);\n\nexport { AngleAxisModel };\n\nvar RadiusAxisModel =\n/** @class */\nfunction (_super) {\n  __extends(RadiusAxisModel, _super);\n\n  function RadiusAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadiusAxisModel.type;\n    return _this;\n  }\n\n  RadiusAxisModel.type = 'radiusAxis';\n  return RadiusAxisModel;\n}(PolarAxisModel);\n\nexport { RadiusAxisModel };"],"names":["inner","makeInner","AngleAxis","_super","scale","angleExtent","call","this","__extends","prototype","pointToData","point","clamp","polar","dim","calculateCategoryInterval","axis","labelModel","getLabelModel","ordinalScale","ordinalExtent","getExtent","tickCount","count","tickValue","unitSpan","dataToCoord","unitH","Math","abs","rect","textContain","getFont","dh","max","height","isNaN","Infinity","interval","floor","cache","model","lastAutoInterval","lastTickCount","Axis","dataToAngle","angleToData","PolarAxisModel","apply","arguments","getCoordSysModel","getReferringComponents","SINGLE_REFERRING","models","type","ComponentModel","zrUtil","AxisModelCommonMixin","AngleAxisModel","_this","RadiusAxisModel"],"sourceRoot":""}