{"version":3,"file":"static/js/3172.016ddf38.js","mappings":"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","sources":["../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport Model from '../../model/Model.js';\nimport { isNameSpecified } from '../../util/model.js';\nimport ComponentModel from '../../model/Component.js';\n\nvar getDefaultSelectorOptions = function (ecModel, type) {\n  if (type === 'all') {\n    return {\n      type: 'all',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'all'])\n    };\n  } else if (type === 'inverse') {\n    return {\n      type: 'inverse',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'inverse'])\n    };\n  }\n};\n\nvar LegendModel =\n/** @class */\nfunction (_super) {\n  __extends(LegendModel, _super);\n\n  function LegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendModel.type;\n    _this.layoutMode = {\n      type: 'box',\n      // legend.width/height are maxWidth/maxHeight actually,\n      // whereas realy width/height is calculated by its content.\n      // (Setting {left: 10, right: 10} does not make sense).\n      // So consider the case:\n      // `setOption({legend: {left: 10});`\n      // then `setOption({legend: {right: 10});`\n      // The previous `left` should be cleared by setting `ignoreSize`.\n      ignoreSize: true\n    };\n    return _this;\n  }\n\n  LegendModel.prototype.init = function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype._updateSelector = function (option) {\n    var selector = option.selector;\n    var ecModel = this.ecModel;\n\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, getDefaultSelectorOptions(ecModel, item.type));\n      });\n    }\n  };\n\n  LegendModel.prototype.optionUpdated = function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name_1 = legendData[i].get('name');\n\n        if (this.isSelected(name_1)) {\n          // Force to unselect others\n          this.select(name_1);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  };\n\n  LegendModel.prototype._updateData = function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (zrUtil.isString(dataItem) || zrUtil.isNumber(dataItem)) {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  };\n\n  LegendModel.prototype.getData = function () {\n    return this._data;\n  };\n\n  LegendModel.prototype.select = function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  };\n\n  LegendModel.prototype.unSelect = function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  };\n\n  LegendModel.prototype.toggleSelected = function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  };\n\n  LegendModel.prototype.allSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  };\n\n  LegendModel.prototype.inverseSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true); // Initially, default value is true\n\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n\n      selected[name] = !selected[name];\n    });\n  };\n\n  LegendModel.prototype.isSelected = function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  };\n\n  LegendModel.prototype.getOrient = function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  };\n\n  LegendModel.type = 'legend.plain';\n  LegendModel.dependencies = ['series'];\n  LegendModel.defaultOption = {\n    // zlevel: 0,\n    z: 4,\n    show: true,\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemGap: 10,\n    itemWidth: 25,\n    itemHeight: 14,\n    symbolRotate: 'inherit',\n    symbolKeepAspect: true,\n    inactiveColor: '#ccc',\n    inactiveBorderColor: '#ccc',\n    inactiveBorderWidth: 'auto',\n    itemStyle: {\n      color: 'inherit',\n      opacity: 'inherit',\n      borderColor: 'inherit',\n      borderWidth: 'auto',\n      borderCap: 'inherit',\n      borderJoin: 'inherit',\n      borderDashOffset: 'inherit',\n      borderMiterLimit: 'inherit'\n    },\n    lineStyle: {\n      width: 'auto',\n      color: 'inherit',\n      inactiveColor: '#ccc',\n      inactiveWidth: 2,\n      opacity: 'inherit',\n      type: 'inherit',\n      cap: 'inherit',\n      join: 'inherit',\n      dashOffset: 'inherit',\n      miterLimit: 'inherit'\n    },\n    textStyle: {\n      color: '#333'\n    },\n    selectedMode: true,\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    tooltip: {\n      show: false\n    }\n  };\n  return LegendModel;\n}(ComponentModel);\n\nexport default LegendModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parse, stringify } from 'zrender/lib/tool/color.js';\nimport * as graphic from '../../util/graphic.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle.js';\nimport { makeBackground } from '../helper/listComponent.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport ComponentView from '../../view/Component.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar LegendView =\n/** @class */\nfunction (_super) {\n  __extends(LegendView, _super);\n\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n\n\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    } // selector has been normalized to an array in model\n\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw(); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  };\n\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var name = legendItemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group(); // @ts-ignore\n\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Legend to control series.\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n\n        var style = data.getVisual('style');\n\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode, api);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n\n            if (!provider.containName(name)) {\n              return;\n            }\n\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n\n              style = zrUtil.extend(zrUtil.extend({}, style), {\n                fill: stringify(colorArr, 'rgba')\n              });\n            }\n\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode, api); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode, api) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n\n    if (zrUtil.isFunction(seriesModel.getLegendIcon) && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (zrUtil.isString(formatter) && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (zrUtil.isFunction(formatter)) {\n      content = formatter(name);\n    }\n\n    var inactiveColor = legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup); // @ts-ignore\n\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } //Always align selector to content as 'middle'\n\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\n\nfunction getLegendStyle(iconType, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  } // itemStyle\n\n\n  var itemStyleModel = legendItemModel.getModel('itemStyle');\n  var itemStyle = itemStyleModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  var decalStyle = itemStyleModel.getShallow('decal');\n  itemStyle.decal = !decalStyle || decalStyle === 'inherit' ? itemVisualStyle.decal : createOrUpdatePatternFromDecal(decalStyle, api);\n\n  if (itemStyle.fill === 'inherit') {\n    /**\n     * Series with visualDrawType as 'stroke' should have\n     * series stroke as legend fill\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n\n  if (itemStyle.stroke === 'inherit') {\n    /**\n     * icon type with \"emptyXXX\" should use fill color\n     * in visual style\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n\n  if (itemStyle.opacity === 'inherit') {\n    /**\n     * Use lineStyle.opacity if drawType is stroke\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n\n  handleCommonProps(itemStyle, itemVisualStyle); // lineStyle\n\n  var legendLineModel = legendItemModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle); // Fix auto color to real color\n\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n\n  if (!isSelected) {\n    var borderWidth = legendItemModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendItemModel.get('inactiveColor');\n    itemStyle.stroke = legendItemModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\n\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = '#fff';\n    icon.style.lineWidth = 2;\n  }\n\n  return icon;\n}\n\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  }); // highlight after select\n  // TODO higlight immediately may cause animation loss.\n\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\n\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n\n  return emphasisState && emphasisState.hoverLayer;\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nexport default LegendView;"],"names":["LegendModel","_super","_this","apply","this","arguments","type","layoutMode","ignoreSize","__extends","prototype","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","_updateSelector","mergeOption","call","selector","zrUtil","item","index","title","getLocaleModel","get","getDefaultSelectorOptions","optionUpdated","_updateData","legendData","_data","hasSelected","i","length","name_1","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","isPotential","seriesName","name","push","legendVisualProvider","names","getAllNames","isSeriesFiltered","concat","isNameSpecified","_availableNames","rawData","dataItem","Model","getData","data","unSelect","toggleSelected","hasOwnProperty","allSelect","inverseSelect","getOrient","dependencies","defaultOption","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","symbolRotate","symbolKeepAspect","inactiveColor","inactiveBorderColor","inactiveBorderWidth","itemStyle","color","opacity","borderCap","borderJoin","borderDashOffset","borderMiterLimit","lineStyle","width","inactiveWidth","cap","join","dashOffset","miterLimit","textStyle","selectedMode","selectorLabel","fontSize","fontFamily","emphasis","selectorPosition","selectorItemGap","selectorButtonGap","tooltip","ComponentModel","curry","each","Group","graphic","LegendView","newlineDisabled","group","add","_contentGroup","_selectorGroup","_isFirstRender","getContentGroup","getSelectorGroup","render","legendModel","api","isFirstRender","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","getWidth","height","getHeight","maxSize","layoutUtil","mainRect","layoutInner","layoutRect","x","y","markRedraw","_backgroundEl","makeBackground","removeAll","remove","contentGroup","legendDrawnMap","selectMode","excludeSeriesId","id","legendItemModel","dataIndex","g","newline","getSeriesByName","lineVisualStyle","getVisual","legendIcon","style","_createItem","on","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","set","provider","containName","idx","indexOfName","getItemVisual","colorArr","parse","fill","stringify","process","_createSelector","selectorGroup","selectorItem","labelText","verticalAlign","onclick","dispatchAction","labelModel","getModel","emphasisLabelModel","setLabelStyle","normal","defaultText","enableHoverEmphasis","itemVisualStyle","drawType","visualDrawType","iconRotate","legendIconType","iconType","handleCommonProps","visualStyle","lineWidth","propVal","propName","itemStyleModel","getItemStyle","iconBrushType","lastIndexOf","decalStyle","getShallow","decal","createOrUpdatePatternFromDecal","stroke","legendLineModel","getLineStyle","visualHasBorder","getLegendStyle","itemGroup","textStyleModel","getLegendIcon","rotate","opt","symboType","icon","createSymbol","setStyle","rotation","Math","PI","setOrigin","indexOf","getDefaultLegendIcon","textX","textAlign","formatter","content","replace","createTextStyle","text","getTextColor","hitRect","shape","getBoundingRect","invisible","tooltipModel","el","componentModel","itemName","itemTooltipOption","eachChild","child","silent","__legendDataIndex","contentRect","contentPos","selectorRect","selectorPos","orientIdx","wh","hw","yx","max","min","ComponentView","dataName","isUseHoverLayer","emphasisState","list","getZr","storage","getDisplayList","len","states","hoverLayer"],"sourceRoot":""}