{"version":3,"file":"static/js/8478.bc9ac9d7.js","mappings":"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","sources":["../node_modules/zrender/lib/Handler.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport * as util from './core/util.js';\nimport * as vec2 from './core/vector.js';\nimport Draggable from './mixin/Draggable.js';\nimport Eventful from './core/Eventful.js';\nimport * as eventTool from './core/event.js';\nimport { GestureMgr } from './core/GestureMgr.js';\nimport BoundingRect from './core/BoundingRect.js';\nvar SILENT = 'silent';\nfunction makeEventPacket(eveType, targetInfo, event) {\n    return {\n        type: eveType,\n        event: event,\n        target: targetInfo.target,\n        topTarget: targetInfo.topTarget,\n        cancelBubble: false,\n        offsetX: event.zrX,\n        offsetY: event.zrY,\n        gestureEvent: event.gestureEvent,\n        pinchX: event.pinchX,\n        pinchY: event.pinchY,\n        pinchScale: event.pinchScale,\n        wheelDelta: event.zrDelta,\n        zrByTouch: event.zrByTouch,\n        which: event.which,\n        stop: stopEvent\n    };\n}\nfunction stopEvent() {\n    eventTool.stop(this.event);\n}\nvar EmptyProxy = (function (_super) {\n    __extends(EmptyProxy, _super);\n    function EmptyProxy() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handler = null;\n        return _this;\n    }\n    EmptyProxy.prototype.dispose = function () { };\n    EmptyProxy.prototype.setCursor = function () { };\n    return EmptyProxy;\n}(Eventful));\nvar HoveredResult = (function () {\n    function HoveredResult(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return HoveredResult;\n}());\nvar handlerNames = [\n    'click', 'dblclick', 'mousewheel', 'mouseout',\n    'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n];\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar Handler = (function (_super) {\n    __extends(Handler, _super);\n    function Handler(storage, painter, proxy, painterRoot, pointerSize) {\n        var _this = _super.call(this) || this;\n        _this._hovered = new HoveredResult(0, 0);\n        _this.storage = storage;\n        _this.painter = painter;\n        _this.painterRoot = painterRoot;\n        _this._pointerSize = pointerSize;\n        proxy = proxy || new EmptyProxy();\n        _this.proxy = null;\n        _this.setHandlerProxy(proxy);\n        _this._draggingMgr = new Draggable(_this);\n        return _this;\n    }\n    Handler.prototype.setHandlerProxy = function (proxy) {\n        if (this.proxy) {\n            this.proxy.dispose();\n        }\n        if (proxy) {\n            util.each(handlerNames, function (name) {\n                proxy.on && proxy.on(name, this[name], this);\n            }, this);\n            proxy.handler = this;\n        }\n        this.proxy = proxy;\n    };\n    Handler.prototype.mousemove = function (event) {\n        var x = event.zrX;\n        var y = event.zrY;\n        var isOutside = isOutsideBoundary(this, x, y);\n        var lastHovered = this._hovered;\n        var lastHoveredTarget = lastHovered.target;\n        if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n            lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n            lastHoveredTarget = lastHovered.target;\n        }\n        var hovered = this._hovered = isOutside ? new HoveredResult(x, y) : this.findHover(x, y);\n        var hoveredTarget = hovered.target;\n        var proxy = this.proxy;\n        proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n        if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n            this.dispatchToElement(lastHovered, 'mouseout', event);\n        }\n        this.dispatchToElement(hovered, 'mousemove', event);\n        if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n            this.dispatchToElement(hovered, 'mouseover', event);\n        }\n    };\n    Handler.prototype.mouseout = function (event) {\n        var eventControl = event.zrEventControl;\n        if (eventControl !== 'only_globalout') {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n        }\n        if (eventControl !== 'no_globalout') {\n            this.trigger('globalout', { type: 'globalout', event: event });\n        }\n    };\n    Handler.prototype.resize = function () {\n        this._hovered = new HoveredResult(0, 0);\n    };\n    Handler.prototype.dispatch = function (eventName, eventArgs) {\n        var handler = this[eventName];\n        handler && handler.call(this, eventArgs);\n    };\n    Handler.prototype.dispose = function () {\n        this.proxy.dispose();\n        this.storage = null;\n        this.proxy = null;\n        this.painter = null;\n    };\n    Handler.prototype.setCursorStyle = function (cursorStyle) {\n        var proxy = this.proxy;\n        proxy.setCursor && proxy.setCursor(cursorStyle);\n    };\n    Handler.prototype.dispatchToElement = function (targetInfo, eventName, event) {\n        targetInfo = targetInfo || {};\n        var el = targetInfo.target;\n        if (el && el.silent) {\n            return;\n        }\n        var eventKey = ('on' + eventName);\n        var eventPacket = makeEventPacket(eventName, targetInfo, event);\n        while (el) {\n            el[eventKey]\n                && (eventPacket.cancelBubble = !!el[eventKey].call(el, eventPacket));\n            el.trigger(eventName, eventPacket);\n            el = el.__hostTarget ? el.__hostTarget : el.parent;\n            if (eventPacket.cancelBubble) {\n                break;\n            }\n        }\n        if (!eventPacket.cancelBubble) {\n            this.trigger(eventName, eventPacket);\n            if (this.painter && this.painter.eachOtherLayer) {\n                this.painter.eachOtherLayer(function (layer) {\n                    if (typeof (layer[eventKey]) === 'function') {\n                        layer[eventKey].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        }\n    };\n    Handler.prototype.findHover = function (x, y, exclude) {\n        var list = this.storage.getDisplayList();\n        var out = new HoveredResult(x, y);\n        setHoverTarget(list, out, x, y, exclude);\n        if (this._pointerSize && !out.target) {\n            var candidates = [];\n            var pointerSize = this._pointerSize;\n            var targetSizeHalf = pointerSize / 2;\n            var pointerRect = new BoundingRect(x - targetSizeHalf, y - targetSizeHalf, pointerSize, pointerSize);\n            for (var i = list.length - 1; i >= 0; i--) {\n                var el = list[i];\n                if (el !== exclude\n                    && !el.ignore\n                    && !el.ignoreCoarsePointer\n                    && (!el.parent || !el.parent.ignoreCoarsePointer)) {\n                    tmpRect.copy(el.getBoundingRect());\n                    if (el.transform) {\n                        tmpRect.applyTransform(el.transform);\n                    }\n                    if (tmpRect.intersect(pointerRect)) {\n                        candidates.push(el);\n                    }\n                }\n            }\n            if (candidates.length) {\n                var rStep = 4;\n                var thetaStep = Math.PI / 12;\n                var PI2 = Math.PI * 2;\n                for (var r = 0; r < targetSizeHalf; r += rStep) {\n                    for (var theta = 0; theta < PI2; theta += thetaStep) {\n                        var x1 = x + r * Math.cos(theta);\n                        var y1 = y + r * Math.sin(theta);\n                        setHoverTarget(candidates, out, x1, y1, exclude);\n                        if (out.target) {\n                            return out;\n                        }\n                    }\n                }\n            }\n        }\n        return out;\n    };\n    Handler.prototype.processGesture = function (event, stage) {\n        if (!this._gestureMgr) {\n            this._gestureMgr = new GestureMgr();\n        }\n        var gestureMgr = this._gestureMgr;\n        stage === 'start' && gestureMgr.clear();\n        var gestureInfo = gestureMgr.recognize(event, this.findHover(event.zrX, event.zrY, null).target, this.proxy.dom);\n        stage === 'end' && gestureMgr.clear();\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n            var res = new HoveredResult();\n            res.target = gestureInfo.target;\n            this.dispatchToElement(res, type, gestureInfo.event);\n        }\n    };\n    return Handler;\n}(Eventful));\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n    Handler.prototype[name] = function (event) {\n        var x = event.zrX;\n        var y = event.zrY;\n        var isOutside = isOutsideBoundary(this, x, y);\n        var hovered;\n        var hoveredTarget;\n        if (name !== 'mouseup' || !isOutside) {\n            hovered = this.findHover(x, y);\n            hoveredTarget = hovered.target;\n        }\n        if (name === 'mousedown') {\n            this._downEl = hoveredTarget;\n            this._downPoint = [event.zrX, event.zrY];\n            this._upEl = hoveredTarget;\n        }\n        else if (name === 'mouseup') {\n            this._upEl = hoveredTarget;\n        }\n        else if (name === 'click') {\n            if (this._downEl !== this._upEl\n                || !this._downPoint\n                || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n                return;\n            }\n            this._downPoint = null;\n        }\n        this.dispatchToElement(hovered, name, event);\n    };\n});\nfunction isHover(displayable, x, y) {\n    if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n        var el = displayable;\n        var isSilent = void 0;\n        var ignoreClip = false;\n        while (el) {\n            if (el.ignoreClip) {\n                ignoreClip = true;\n            }\n            if (!ignoreClip) {\n                var clipPath = el.getClipPath();\n                if (clipPath && !clipPath.contain(x, y)) {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n            }\n            var hostEl = el.__hostTarget;\n            el = hostEl ? hostEl : el.parent;\n        }\n        return isSilent ? SILENT : true;\n    }\n    return false;\n}\nfunction setHoverTarget(list, out, x, y, exclude) {\n    for (var i = list.length - 1; i >= 0; i--) {\n        var el = list[i];\n        var hoverCheckResult = void 0;\n        if (el !== exclude\n            && !el.ignore\n            && (hoverCheckResult = isHover(el, x, y))) {\n            !out.topTarget && (out.topTarget = el);\n            if (hoverCheckResult !== SILENT) {\n                out.target = el;\n                break;\n            }\n        }\n    }\n}\nfunction isOutsideBoundary(handlerInstance, x, y) {\n    var painter = handlerInstance.painter;\n    return x < 0 || x > painter.getWidth() || y < 0 || y > painter.getHeight();\n}\nexport default Handler;\n"],"names":["SILENT","stopEvent","eventTool","this","event","EmptyProxy","_super","_this","apply","arguments","handler","__extends","prototype","dispose","setCursor","Eventful","HoveredResult","x","y","handlerNames","tmpRect","BoundingRect","Handler","storage","painter","proxy","painterRoot","pointerSize","call","_hovered","_pointerSize","setHandlerProxy","_draggingMgr","Draggable","util","name","on","mousemove","zrX","zrY","isOutside","isOutsideBoundary","lastHovered","lastHoveredTarget","target","__zr","findHover","hovered","hoveredTarget","cursor","dispatchToElement","mouseout","eventControl","zrEventControl","trigger","type","resize","dispatch","eventName","eventArgs","setCursorStyle","cursorStyle","targetInfo","el","silent","eventKey","eventPacket","eveType","topTarget","cancelBubble","offsetX","offsetY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","which","stop","makeEventPacket","__hostTarget","parent","eachOtherLayer","layer","exclude","list","getDisplayList","out","setHoverTarget","candidates","targetSizeHalf","pointerRect","i","length","ignore","ignoreCoarsePointer","copy","getBoundingRect","transform","applyTransform","intersect","push","thetaStep","Math","PI","PI2","r","theta","cos","sin","processGesture","stage","_gestureMgr","GestureMgr","gestureMgr","clear","gestureInfo","recognize","dom","res","isHover","displayable","rectHover","isSilent","ignoreClip","clipPath","getClipPath","contain","hoverCheckResult","handlerInstance","getWidth","getHeight","_downEl","_downPoint","_upEl","vec2"],"sourceRoot":""}