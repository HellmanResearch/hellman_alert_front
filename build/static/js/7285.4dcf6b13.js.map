{"version":3,"file":"static/js/7285.4dcf6b13.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","../node_modules/echarts/lib/chart/boxplot/BoxplotView.js","../node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","../node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","../node_modules/echarts/lib/chart/boxplot/boxplotTransform.js","../node_modules/echarts/lib/chart/boxplot/prepareBoxplotData.js","../node_modules/echarts/lib/chart/boxplot/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series.js';\nimport { WhiskerBoxCommonMixin } from '../helper/whiskerBoxCommon.js';\nimport { mixin } from 'zrender/lib/core/util.js';\n\nvar BoxplotSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BoxplotSeriesModel, _super);\n\n  function BoxplotSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BoxplotSeriesModel.type; // TODO\n    // box width represents group size, so dimension should have 'size'.\n\n    /**\n     * @see <https://en.wikipedia.org/wiki/Box_plot>\n     * The meanings of 'min' and 'max' depend on user,\n     * and echarts do not need to know it.\n     * @readOnly\n     */\n\n    _this.defaultValueDimensions = [{\n      name: 'min',\n      defaultTooltip: true\n    }, {\n      name: 'Q1',\n      defaultTooltip: true\n    }, {\n      name: 'median',\n      defaultTooltip: true\n    }, {\n      name: 'Q3',\n      defaultTooltip: true\n    }, {\n      name: 'max',\n      defaultTooltip: true\n    }];\n    _this.visualDrawType = 'stroke';\n    return _this;\n  }\n\n  BoxplotSeriesModel.type = 'series.boxplot';\n  BoxplotSeriesModel.dependencies = ['xAxis', 'yAxis', 'grid'];\n  BoxplotSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    layout: null,\n    boxWidth: [7, 50],\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      scale: true,\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 1,\n        shadowOffsetY: 1,\n        shadowColor: 'rgba(0,0,0,0.2)'\n      }\n    },\n    animationDuration: 800\n  };\n  return BoxplotSeriesModel;\n}(SeriesModel);\n\nmixin(BoxplotSeriesModel, WhiskerBoxCommonMixin, true);\nexport default BoxplotSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport ChartView from '../../view/Chart.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\n\nvar BoxplotView =\n/** @class */\nfunction (_super) {\n  __extends(BoxplotView, _super);\n\n  function BoxplotView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BoxplotView.type;\n    return _this;\n  }\n\n  BoxplotView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        saveOldStyle(symbolEl);\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  };\n\n  BoxplotView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  };\n\n  BoxplotView.type = 'boxplot';\n  return BoxplotView;\n}(ChartView);\n\nvar BoxPathShape =\n/** @class */\nfunction () {\n  function BoxPathShape() {}\n\n  return BoxPathShape;\n}();\n\nvar BoxPath =\n/** @class */\nfunction (_super) {\n  __extends(BoxPath, _super);\n\n  function BoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'boxplotBoxPath';\n    return _this;\n  }\n\n  BoxPath.prototype.getDefaultShape = function () {\n    return new BoxPathShape();\n  };\n\n  BoxPath.prototype.buildPath = function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  };\n\n  return BoxPath;\n}(Path);\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.strokeNoScale = true;\n  el.z2 = 100;\n  var itemModel = data.getItemModel(dataIndex);\n  var emphasisModel = itemModel.getModel('emphasis');\n  setStatesStylesFromModel(el, itemModel);\n  toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nexport default BoxplotView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function boxplotVisual(ecModel, api) {}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parsePercent } from '../../util/number.js';\nvar each = zrUtil.each;\nexport default function boxplotLayout(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount_1 = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount_1 = Math.max(maxDataCount_1, seriesModel.getData().count());\n    });\n    var extent = baseAxis.getExtent();\n    bandWidth = Math.abs(extent[1] - extent[0]) / maxDataCount_1;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimensionsAll(coordDims[vDimIdx]);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, false);\n    addBodyEnd(ends, end4, true);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dim, dataIndex) {\n    var val = data.get(dim, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport prepareBoxplotData from './prepareBoxplotData.js';\nimport { throwError, makePrintable } from '../../util/log.js';\nimport { SOURCE_FORMAT_ARRAY_ROWS } from '../../util/types.js';\nexport var boxplotTransform = {\n  type: 'echarts:boxplot',\n  transform: function transform(params) {\n    var upstream = params.upstream;\n\n    if (upstream.sourceFormat !== SOURCE_FORMAT_ARRAY_ROWS) {\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = makePrintable('source data is not applicable for this boxplot transform. Expect number[][].');\n      }\n\n      throwError(errMsg);\n    }\n\n    var result = prepareBoxplotData(upstream.getRawData(), params.config);\n    return [{\n      dimensions: ['ItemName', 'Low', 'Q1', 'Q2', 'Q3', 'High'],\n      data: result.boxData\n    }, {\n      data: result.outliers\n    }];\n  }\n};","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { quantile, asc } from '../../util/number.js';\nimport { isFunction, isString } from 'zrender/lib/core/util.js';\n/**\n * See:\n *  <https://en.wikipedia.org/wiki/Box_plot#cite_note-frigge_hoaglin_iglewicz-2>\n *  <http://stat.ethz.ch/R-manual/R-devel/library/grDevices/html/boxplot.stats.html>\n *\n * Helper method for preparing data.\n *\n * @param rawData like\n *        [\n *            [12,232,443], (raw data set for the first box)\n *            [3843,5545,1232], (raw data set for the second box)\n *            ...\n *        ]\n * @param opt.boundIQR=1.5 Data less than min bound is outlier.\n *      default 1.5, means Q1 - 1.5 * (Q3 - Q1).\n *      If 'none'/0 passed, min bound will not be used.\n */\n\nexport default function prepareBoxplotData(rawData, opt) {\n  opt = opt || {};\n  var boxData = [];\n  var outliers = [];\n  var boundIQR = opt.boundIQR;\n  var useExtreme = boundIQR === 'none' || boundIQR === 0;\n\n  for (var i = 0; i < rawData.length; i++) {\n    var ascList = asc(rawData[i].slice());\n    var Q1 = quantile(ascList, 0.25);\n    var Q2 = quantile(ascList, 0.5);\n    var Q3 = quantile(ascList, 0.75);\n    var min = ascList[0];\n    var max = ascList[ascList.length - 1];\n    var bound = (boundIQR == null ? 1.5 : boundIQR) * (Q3 - Q1);\n    var low = useExtreme ? min : Math.max(min, Q1 - bound);\n    var high = useExtreme ? max : Math.min(max, Q3 + bound);\n    var itemNameFormatter = opt.itemNameFormatter;\n    var itemName = isFunction(itemNameFormatter) ? itemNameFormatter({\n      value: i\n    }) : isString(itemNameFormatter) ? itemNameFormatter.replace('{value}', i + '') : i + '';\n    boxData.push([itemName, low, Q1, Q2, Q3, high]);\n\n    for (var j = 0; j < ascList.length; j++) {\n      var dataItem = ascList[j];\n\n      if (dataItem < low || dataItem > high) {\n        var outlier = [itemName, dataItem];\n        outliers.push(outlier);\n      }\n    }\n  }\n\n  return {\n    boxData: boxData,\n    outliers: outliers\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport BoxplotSeriesModel from './BoxplotSeries.js';\nimport BoxplotView from './BoxplotView.js';\nimport boxplotVisual from './boxplotVisual.js';\nimport boxplotLayout from './boxplotLayout.js';\nimport { boxplotTransform } from './boxplotTransform.js';\nexport function install(registers) {\n  registers.registerSeriesModel(BoxplotSeriesModel);\n  registers.registerChartView(BoxplotView);\n  registers.registerVisual(boxplotVisual);\n  registers.registerLayout(boxplotLayout);\n  registers.registerTransform(boxplotTransform);\n}"],"names":["BoxplotSeriesModel","_super","_this","apply","this","arguments","type","defaultValueDimensions","name","defaultTooltip","visualDrawType","__extends","dependencies","defaultOption","z","coordinateSystem","legendHoverLink","layout","boxWidth","itemStyle","color","borderWidth","emphasis","scale","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","animationDuration","SeriesModel","mixin","WhiskerBoxCommonMixin","BoxplotView","prototype","render","seriesModel","ecModel","api","data","getData","group","oldData","_data","removeAll","constDim","get","diff","add","newIdx","hasValue","symbolEl","createNormalBox","getItemLayout","setItemGraphicEl","update","oldIdx","getItemGraphicEl","itemLayout","saveOldStyle","updateNormalBoxData","remove","el","execute","eachItemGraphicEl","ChartView","BoxPathShape","BoxPath","opts","call","getDefaultShape","buildPath","ctx","shape","ends","points","i","moveTo","lineTo","closePath","length","Path","dataIndex","isInit","transInit","hostModel","updateMethod","graphic","useStyle","getItemVisual","style","strokeNoScale","z2","itemModel","getItemModel","emphasisModel","getModel","setStatesStylesFromModel","toggleHoverEmphasis","dim","zrUtil","point","slice","initBaseline","boxplotVisual","each","boxplotLayout","groupResult","result","axisList","eachSeriesByType","baseAxis","getBaseAxis","idx","axis","seriesModels","push","groupSeriesByAxis","groupItem","bandWidth","seriesCount","boxWidthList","boxOffsetList","boundList","getBandWidth","maxDataCount_1","Math","max","count","extent","getExtent","abs","boxWidthBound","parsePercent","availableWidth","boxGap","base","min","calculateBase","offset","coordSys","halfWidth","cDimIdx","vDimIdx","coordDims","cDim","mapDimension","vDims","mapDimensionsAll","axisDimVal","median","getPoint","end1","end2","end4","end5","addBodyEnd","layEndLine","setItemLayout","val","p","isNaN","NaN","dataToPoint","start","point1","point2","endCenter","from","to","layoutSingleSeries","boxplotTransform","transform","params","upstream","sourceFormat","SOURCE_FORMAT_ARRAY_ROWS","throwError","rawData","opt","boxData","outliers","boundIQR","useExtreme","ascList","asc","Q1","quantile","Q2","Q3","bound","low","high","itemNameFormatter","itemName","isFunction","value","isString","replace","j","dataItem","outlier","prepareBoxplotData","getRawData","config","dimensions","install","registers","registerSeriesModel","registerChartView","registerVisual","registerLayout","registerTransform"],"sourceRoot":""}