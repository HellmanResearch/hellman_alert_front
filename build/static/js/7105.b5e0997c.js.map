{"version":3,"file":"static/js/7105.b5e0997c.js","mappings":"6NAgIA,EAjFkB,CAChBA,WAAY,QACZC,MAAMC,E,QAAAA,KACNC,MAAO,SAAUC,GACf,IAAIC,EAAWD,EAAYE,iBAE3B,GAAKD,EAAL,CAQA,IAAIE,EAAaH,EAAYI,IAAI,YAC7BC,EAAUL,EAAYM,gBAAgBC,MAC1C,MAAO,CACLC,SAAU,SAAUC,EAAQC,GAC1B,IAAIC,EAAa,GAEjB,GAAIN,EAAS,CACX,IAAIO,OAAS,EACTC,EAAWJ,EAAOK,IAAML,EAAOM,MAEnC,GAAIZ,EAAY,CAGd,IAFA,IAAIa,EAAmB,EAEdC,EAAIR,EAAOM,MAAOE,EAAIR,EAAOK,IAAKG,IACzCD,GAAoBhB,EAAYkB,mBAAmBD,GAGrDL,EAAS,IAAIO,aAAaN,EAA8B,EAAnBG,EACvC,MACEJ,EAAS,IAAIO,aAAwB,EAAXN,GAG5B,IAAIO,EAAS,EACTC,EAAK,GAET,IAASJ,EAAIR,EAAOM,MAAOE,EAAIR,EAAOK,IAAKG,IAAK,CAC9C,IAAIK,EAAMtB,EAAYuB,cAAcN,EAAGN,GAEnCR,IACFS,EAAOQ,KAAYE,GAGrB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKE,IACvBH,EAAKpB,EAASwB,YAAYd,EAAWa,IAAI,EAAOH,GAChDT,EAAOQ,KAAYC,EAAG,GACtBT,EAAOQ,KAAYC,EAAG,EAE1B,CAEAX,EAASgB,UAAU,cAAed,EACpC,MACE,IAASK,EAAIR,EAAOM,MAAOE,EAAIR,EAAOK,IAAKG,IAAK,CAC9C,IAAIU,EAAYjB,EAASkB,aAAaX,GAElCY,GADAP,EAAMtB,EAAYuB,cAAcN,EAAGN,GAC7B,IAEV,GAAIR,EACF,IAAK,IAAI2B,EAAI,EAAGA,EAAIR,EAAKQ,IACvBD,EAAIE,KAAK9B,EAASwB,YAAYd,EAAWmB,SAEtC,CACLD,EAAI,GAAK5B,EAASwB,YAAYd,EAAW,IACzCkB,EAAI,GAAK5B,EAASwB,YAAYd,EAAW,IACzC,IAAIqB,EAAYL,EAAUvB,IAAI,CAAC,YAAa,eAEvC4B,IACHH,EAAI,GAAK,EAAEA,EAAI,GAAG,GAAKA,EAAI,GAAG,IAAM,GAAKA,EAAI,GAAG,GAAKA,EAAI,GAAG,IAAMG,GAAYH,EAAI,GAAG,GAAKA,EAAI,GAAG,IAAM,GAAKA,EAAI,GAAG,GAAKA,EAAI,GAAG,IAAMG,GAEzI,CAEAtB,EAASuB,cAAchB,EAAGY,EAC5B,CAEJ,EAjEF,CAmEF,G,WCxEEK,EAEJ,SAAUC,GAGR,SAASD,IACP,IAAIE,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAGhE,OADAF,EAAMI,KAAON,EAAUM,KAChBJ,CACT,CA6JA,OApKAK,EAAAA,EAAAA,IAAUP,EAAWC,GASrBD,EAAUQ,UAAUC,OAAS,SAAU3C,EAAa4C,EAASC,GAC3D,IAAIC,EAAO9C,EAAY+C,UAEnBC,EAAWV,KAAKW,gBAAgBH,EAAM9C,GAEtCkD,EAASlD,EAAYI,IAAI,UACzB+C,EAAcnD,EAAYI,IAAI,CAAC,SAAU,gBACzCgD,EAAKP,EAAIQ,QAITC,EAAiC,QAAzBF,EAAGG,QAAQC,UAElBF,GACHF,EAAGG,QAAQE,SAASP,GAAQQ,OAAM,GAIZ,MAApBpB,KAAKqB,aAAwBL,GAC/BF,EAAGQ,YAAYtB,KAAKqB,YAAa,CAC/BE,YAAY,IAIZvB,KAAKwB,YAAY9D,IAAgBmD,EAAc,IAC5CG,GACHF,EAAGQ,YAAYV,EAAQ,CACrBW,YAAY,EACZE,eAAgBC,KAAKC,IAAID,KAAKE,IAAIf,EAAc,GAAK,GAAK,GAAI,MAOpEH,EAASmB,WAAWrB,GACpB,IAAIsB,EAAWpE,EAAYI,IAAI,QAAQ,KAASiE,EAAAA,EAAAA,IAAerE,EAAYE,kBAAkB,EAAOF,GAEhGoE,EACF9B,KAAKgC,MAAMC,YAAYH,GAEvB9B,KAAKgC,MAAME,iBAGblC,KAAKqB,YAAcT,EACnBZ,KAAKmC,WAAY,CACnB,EAEAvC,EAAUQ,UAAUgC,yBAA2B,SAAU1E,EAAa4C,EAASC,GAC7E,IAAIC,EAAO9C,EAAY+C,UAERT,KAAKW,gBAAgBH,EAAM9C,GAEjC2E,yBAAyB7B,GAElCR,KAAKsC,YAAY/B,GAEjBP,KAAKmC,WAAY,CACnB,EAEAvC,EAAUQ,UAAUmC,kBAAoB,SAAUC,EAAY9E,EAAa4C,GACzEN,KAAKyC,UAAUC,kBAAkBF,EAAY9E,EAAY+C,WAEzDT,KAAKmC,UAAYK,EAAWhE,MAAQd,EAAY+C,UAAUkC,OAC5D,EAEA/C,EAAUQ,UAAUwC,aAAe,SAAUC,GAC3C7C,KAAKyC,WAAazC,KAAKyC,UAAUG,aAAaC,EAChD,EAEAjD,EAAUQ,UAAU0C,gBAAkB,SAAUpF,EAAa4C,EAASC,GACpE,IAAIC,EAAO9C,EAAY+C,UACnBzC,EAAkBN,EAAYM,gBAElC,IAAKgC,KAAKmC,WAAanE,EAAgBC,OAASD,EAAgB+E,kBAE9D,MAAO,CACLC,QAAQ,GAKV,IAAIC,EAAMC,EAAAA,MAAkBxF,EAAa4C,EAASC,GAE9C0C,EAAI/E,UACN+E,EAAI/E,SAAS,CACXO,MAAO,EACPD,IAAKgC,EAAKmC,QACVA,MAAOnC,EAAKmC,SACXnC,GAILR,KAAKyC,UAAUU,eAEfnD,KAAKsC,YAAY/B,EAErB,EAEAX,EAAUQ,UAAUO,gBAAkB,SAAUH,EAAM9C,GACpD,IAAIgD,EAAWV,KAAKyC,UAEhBW,EAAYpD,KAAKwB,YAAY9D,GAE7BG,IAAeH,EAAYI,IAAI,YAE/BuF,EADkB3F,EAAYM,gBACAC,MAoBlC,OAZKyC,GAAY0C,IAAcpD,KAAKsD,WAAazF,IAAemC,KAAKuD,aAAeF,IAAgBrD,KAAKwD,eACnG9C,GACFA,EAAS+C,SAGX/C,EAAWV,KAAKyC,UAAYY,EAAc,IAAIK,EAAAA,EAAkB,IAAIC,EAAAA,EAAS9F,EAAauF,EAAYQ,EAAAA,EAAiBC,EAAAA,EAAWT,EAAYU,EAAAA,EAAaC,EAAAA,GAC3J/D,KAAKsD,UAAYF,EACjBpD,KAAKuD,YAAc1F,EACnBmC,KAAKwD,aAAeH,GAGtBrD,KAAKgC,MAAMgC,IAAItD,EAASsB,OACjBtB,CACT,EAEAd,EAAUQ,UAAUoB,YAAc,SAAU9D,GAC1C,QAASA,EAAYI,IAAI,CAAC,SAAU,QACtC,EAEA8B,EAAUQ,UAAUkC,YAAc,SAAU/B,GAE1C,IAAIO,EAAKP,EAAIQ,QACwB,QAAzBD,EAAGG,QAAQC,WAEW,MAApBlB,KAAKqB,aACjBP,EAAGG,QAAQE,SAASnB,KAAKqB,aAAaD,OAAM,EAEhD,EAEAxB,EAAUQ,UAAUqD,OAAS,SAAUnD,EAASC,GAC9CP,KAAKyC,WAAazC,KAAKyC,UAAUgB,SACjCzD,KAAKyC,UAAY,KAEjBzC,KAAKsC,YAAY/B,EACnB,EAEAX,EAAUQ,UAAU6D,QAAU,SAAU3D,EAASC,GAC/CP,KAAKyD,OAAOnD,EAASC,EACvB,EAEAX,EAAUM,KAAO,QACVN,CACT,CAtKA,C,SAsKEsE,GAEF,I,2CC7KIC,EAAmC,qBAAhBC,YAA8BC,MAAQD,YACzDE,EAAqC,qBAAjBC,aAA+BF,MAAQE,aAE/D,SAASC,EAAUC,GACjB,IAAIjE,EAAOiE,EAAUjE,KAEjBA,GAAQA,EAAK,IAAMA,EAAK,GAAG,IAAMA,EAAK,GAAG,GAAGkE,QAK9CD,EAAUjE,MAAOmE,EAAAA,EAAAA,IAAInE,GAAM,SAAUoE,GACnC,IACIC,EAAS,CACXC,OAFW,CAACF,EAAQ,GAAGF,MAAOE,EAAQ,GAAGF,QAa3C,OARIE,EAAQ,GAAGG,OACbF,EAAOG,SAAWJ,EAAQ,GAAGG,MAG3BH,EAAQ,GAAGG,OACbF,EAAOI,OAASL,EAAQ,GAAGG,OAGtBG,EAAAA,EAAAA,IAAS,CAACL,EAAQD,EAAQ,GAAIA,EAAQ,IAC/C,IAEJ,CAEA,IAAIO,EAEJ,SAAUtF,GAGR,SAASsF,IACP,IAAIrF,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAKhE,OAHAF,EAAMI,KAAOiF,EAAiBjF,KAC9BJ,EAAMsF,sBAAwB,YAC9BtF,EAAMuF,eAAiB,SAChBvF,CACT,CA+QA,OAxRAK,EAAAA,EAAAA,IAAUgF,EAAkBtF,GAW5BsF,EAAiB/E,UAAUkF,KAAO,SAAUC,GAE1CA,EAAO/E,KAAO+E,EAAO/E,MAAQ,GAE7BgE,EAAUe,GAEV,IAAIC,EAASxF,KAAKyF,wBAAwBF,EAAO/E,MAEjDR,KAAK0F,YAAcF,EAAOG,WAC1B3F,KAAK4F,kBAAoBJ,EAAOK,iBAE5BL,EAAOG,aACTJ,EAAO/E,KAAO,IAAI3B,aAAa2G,EAAO7C,QAGxC9C,EAAOO,UAAUkF,KAAKvF,MAAMC,KAAMC,UACpC,EAEAkF,EAAiB/E,UAAU0F,YAAc,SAAUP,GAGjD,GAFAf,EAAUe,GAENA,EAAO/E,KAAM,CAEf,IAAIgF,EAASxF,KAAKyF,wBAAwBF,EAAO/E,MAEjDR,KAAK0F,YAAcF,EAAOG,WAC1B3F,KAAK4F,kBAAoBJ,EAAOK,iBAE5BL,EAAOG,aACTJ,EAAO/E,KAAO,IAAI3B,aAAa2G,EAAO7C,OAE1C,CAEA9C,EAAOO,UAAU0F,YAAY/F,MAAMC,KAAMC,UAC3C,EAEAkF,EAAiB/E,UAAU2F,WAAa,SAAU5H,GAChD,IAAIqH,EAASxF,KAAKyF,wBAAwBtH,EAAOqC,MAE7CgF,EAAOG,aACJ3F,KAAK0F,aAIR1F,KAAK0F,aAAcM,EAAAA,EAAAA,IAAYhG,KAAK0F,YAAaF,EAAOG,YACxD3F,KAAK4F,mBAAoBI,EAAAA,EAAAA,IAAYhG,KAAK4F,kBAAmBJ,EAAOK,oBAJpE7F,KAAK0F,YAAcF,EAAOG,WAC1B3F,KAAK4F,kBAAoBJ,EAAOK,kBAMlC1H,EAAOqC,KAAO,IAAI3B,aAAa2G,EAAO7C,QAGxC3C,KAAKiG,aAAaF,WAAW5H,EAAOqC,KACtC,EAEA2E,EAAiB/E,UAAU8F,wBAA0B,SAAUC,GAC7D,IAAI9G,EAAYW,KAAKS,UAAUnB,aAAa6G,GAS5C,OARa9G,EAAUkG,kBAAkBlB,MAAQhF,EAAUkG,OAASlG,EAAU+G,WAAW,SAS3F,EAEAjB,EAAiB/E,UAAUxB,mBAAqB,SAAUuH,GACxD,OAAInG,KAAK4F,kBACA5F,KAAK4F,kBAAwB,EAANO,EAAU,GAEjCnG,KAAKkG,wBAAwBC,GAAKE,MAE7C,EAEAlB,EAAiB/E,UAAUnB,cAAgB,SAAUkH,EAAKG,GACxD,GAAItG,KAAK4F,kBAAmB,CAI1B,IAHA,IAAI9G,EAASkB,KAAK4F,kBAAwB,EAANO,GAChCnH,EAAMgB,KAAK4F,kBAAwB,EAANO,EAAU,GAElCxH,EAAI,EAAGA,EAAIK,EAAKL,IACvB2H,EAAI3H,GAAK2H,EAAI3H,IAAM,GACnB2H,EAAI3H,GAAG,GAAKqB,KAAK0F,YAAY5G,EAAa,EAAJH,GACtC2H,EAAI3H,GAAG,GAAKqB,KAAK0F,YAAY5G,EAAa,EAAJH,EAAQ,GAGhD,OAAOK,CACT,CACE,IAAI8F,EAAS9E,KAAKkG,wBAAwBC,GAE1C,IAASxH,EAAI,EAAGA,EAAImG,EAAOuB,OAAQ1H,IACjC2H,EAAI3H,GAAK2H,EAAI3H,IAAM,GACnB2H,EAAI3H,GAAG,GAAKmG,EAAOnG,GAAG,GACtB2H,EAAI3H,GAAG,GAAKmG,EAAOnG,GAAG,GAGxB,OAAOmG,EAAOuB,MAElB,EAEAlB,EAAiB/E,UAAUqF,wBAA0B,SAAUjF,GAC7D,IAAI+F,EAAc,EAQlB,GANIvG,KAAK0F,cACPa,EAAcvG,KAAK0F,YAAYW,SAK7BG,EAAAA,EAAAA,IAAShG,EAAK,IAAK,CASrB,IARA,IAAIxB,EAAMwB,EAAK6F,OAEXI,EAA4B,IAAItC,EAAUnF,GAC1C0H,EAAgB,IAAIpC,EAAWtF,GAC/B2H,EAAe,EACfC,EAAe,EACfC,EAAY,EAEPlI,EAAI,EAAGA,EAAIK,GAAM,CACxB6H,IACA,IAAIlE,EAAQnC,EAAK7B,KAEjB8H,EAA0BG,KAAkBD,EAAeJ,EAE3DE,EAA0BG,KAAkBjE,EAE5C,IAAK,IAAIzD,EAAI,EAAGA,EAAIyD,EAAOzD,IAAK,CAC9B,IAAI4H,EAAItG,EAAK7B,KACToI,EAAIvG,EAAK7B,KACb+H,EAAcC,KAAkBG,EAChCJ,EAAcC,KAAkBI,CAOlC,CACF,CAEA,MAAO,CACLlB,iBAAkB,IAAIzB,YAAYqC,EAA0BO,OAAQ,EAAGJ,GACvEjB,WAAYe,EACZ/D,MAAOkE,EAEX,CAEA,MAAO,CACLhB,iBAAkB,KAClBF,WAAY,KACZhD,MAAOnC,EAAK6F,OAEhB,EAEAlB,EAAiB/E,UAAU6G,eAAiB,SAAU1B,EAAQjF,GACjB,IAQvClC,EAAW,IAAI8I,EAAAA,EAAW,CAAC,SAAUlH,MAezC,OAdA5B,EAAS+I,eAAgB,EACzB/I,EAASgJ,SAAS7B,EAAO/E,KAAM,IAAI,SAAU6G,EAAUC,EAASC,EAAWC,GAEzE,GAAIH,aAAoBhD,MACtB,OAAOoD,IAEPrJ,EAAS+I,eAAgB,EACzB,IAAIO,EAAQL,EAASK,MAErB,OAAa,MAATA,EACKA,aAAiBrD,MAAQqD,EAAMF,GAAYE,OADpD,CAIJ,IACOtJ,CACT,EAEA+G,EAAiB/E,UAAUuH,cAAgB,SAAUJ,EAAWK,EAAgBC,GAC9E,IACIxI,EADOW,KAAKS,UACKnB,aAAaiI,GAC9BxC,EAAO1F,EAAUvB,IAAI,QAEzB,GAAIiH,EACF,OAAOA,EAGT,IAAIC,EAAW3F,EAAUvB,IAAI,YACzBmH,EAAS5F,EAAUvB,IAAI,UACvBgK,EAAU,GAGd,OAFY,MAAZ9C,GAAoB8C,EAAQrI,KAAKuF,GACvB,MAAVC,GAAkB6C,EAAQrI,KAAKwF,IACxB8C,EAAAA,EAAAA,IAAoB,YAAa,CACtChD,KAAM+C,EAAQE,KAAK,QAEvB,EAEA7C,EAAiB/E,UAAU6H,mBAAqB,WAC9C,QAASjI,KAAKlC,IAAI,CAAC,SAAU,QAC/B,EAEAqH,EAAiB/E,UAAU8H,eAAiB,WAC1C,IAAIC,EAAcnI,KAAKuF,OAAO4C,YAE9B,OAAmB,MAAfA,EACKnI,KAAKuF,OAAOtH,MAAQ,IAAM+B,KAAKlC,IAAI,eAGrCqK,CACT,EAEAhD,EAAiB/E,UAAUgI,wBAA0B,WACnD,IAAIC,EAAuBrI,KAAKuF,OAAO8C,qBAEvC,OAA4B,MAAxBA,EACKrI,KAAKuF,OAAOtH,MAAQ,IAAM+B,KAAKlC,IAAI,wBAGrCuK,CACT,EAEAlD,EAAiB/E,UAAUkI,aAAe,WACxC,IAAIC,EAAcvI,KAAKwI,SAAS,UAC5B3H,EAAc0H,EAAYzK,IAAI,eAClC,OAAOkC,KAAKS,UAAUkC,QAAU3C,KAAKoI,0BACnCpI,KAAKyI,GAAKF,EAAYzK,IAAI,SAAW+C,EAAc,EAAIA,EAAc,GAAK,EAC9E,EAEAsE,EAAiBjF,KAAO,eACxBiF,EAAiBuD,aAAe,CAAC,OAAQ,QAAS,MAAO,YACzDvD,EAAiBwD,cAAgB,CAC/B/K,iBAAkB,MAElBgL,EAAG,EACHC,iBAAiB,EAEjBC,WAAY,EACZC,WAAY,EACZC,OAAQ,CAAC,OAAQ,QACjBC,WAAY,CAAC,GAAI,IAEjBC,SAAU,EACVC,OAAQ,CACNC,MAAM,EACNC,OAAQ,EACRC,cAAe,EACfN,OAAQ,SACRC,WAAY,EACZM,MAAM,EACN1I,YAAa,IAEf5C,OAAO,EAEPuL,eAAgB,IAChBC,UAAU,EACVC,MAAM,EACNC,MAAO,CACLP,MAAM,EACNQ,SAAU,OAIZC,UAAW,CACTC,QAAS,KAGN3E,CACT,CA1RA,CA0RE4E,EAAAA,GAEF,ICpUA,SAASC,EAAUC,GAKjB,OAJMA,aAAa5F,QACjB4F,EAAI,CAACA,EAAGA,IAGHA,CACT,CAEA,IA0BA,EA1BkB,CAChB3M,WAAY,QACZG,MAAO,SAAUC,GACf,IAAIwM,EAAaF,EAAUtM,EAAYI,IAAI,WACvCmL,EAAae,EAAUtM,EAAYI,IAAI,eACvC0C,EAAO9C,EAAY+C,UAgBvB,OAfAD,EAAK2J,UAAU,aAAcD,GAAcA,EAAW,IACtD1J,EAAK2J,UAAU,WAAYD,GAAcA,EAAW,IACpD1J,EAAK2J,UAAU,iBAAkBlB,GAAcA,EAAW,IAC1DzI,EAAK2J,UAAU,eAAgBlB,GAAcA,EAAW,IAYjD,CACLmB,SAAU5J,EAAK2G,cAXjB,SAAkB3G,EAAM2F,GACtB,IAAI9G,EAAYmB,EAAKlB,aAAa6G,GAC9B+D,EAAaF,EAAU3K,EAAU+G,WAAW,UAAU,IACtD6C,EAAae,EAAU3K,EAAU+G,WAAW,cAAc,IAC9D8D,EAAW,IAAM1J,EAAK6J,cAAclE,EAAK,aAAc+D,EAAW,IAClEA,EAAW,IAAM1J,EAAK6J,cAAclE,EAAK,WAAY+D,EAAW,IAChEjB,EAAW,IAAMzI,EAAK6J,cAAclE,EAAK,iBAAkB8C,EAAW,IACtEA,EAAW,IAAMzI,EAAK6J,cAAclE,EAAK,eAAgB8C,EAAW,GACtE,EAG4C,KAE9C,GC5BK,SAASqB,EAAQC,GACtBA,EAAUC,kBAAkB5K,GAC5B2K,EAAUE,oBAAoBtF,GAC9BoF,EAAUG,eAAexH,GACzBqH,EAAUI,eAAeC,EAC3B,C","sources":["../node_modules/echarts/lib/chart/lines/linesLayout.js","../node_modules/echarts/lib/chart/lines/LinesView.js","../node_modules/echarts/lib/chart/lines/LinesSeries.js","../node_modules/echarts/lib/chart/lines/linesVisual.js","../node_modules/echarts/lib/chart/lines/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nimport createRenderPlanner from '../helper/createRenderPlanner.js';\nimport { error } from '../../util/log.js';\nvar linesLayout = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('The lines series must have a coordinate system.');\n      }\n\n      return;\n    }\n\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n    return {\n      progress: function (params, lineData) {\n        var lineCoords = [];\n\n        if (isLarge) {\n          var points = void 0;\n          var segCount = params.end - params.start;\n\n          if (isPolyline) {\n            var totalCoordsCount = 0;\n\n            for (var i = params.start; i < params.end; i++) {\n              totalCoordsCount += seriesModel.getLineCoordsCount(i);\n            }\n\n            points = new Float32Array(segCount + totalCoordsCount * 2);\n          } else {\n            points = new Float32Array(segCount * 4);\n          }\n\n          var offset = 0;\n          var pt = [];\n\n          for (var i = params.start; i < params.end; i++) {\n            var len = seriesModel.getLineCoords(i, lineCoords);\n\n            if (isPolyline) {\n              points[offset++] = len;\n            }\n\n            for (var k = 0; k < len; k++) {\n              pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n              points[offset++] = pt[0];\n              points[offset++] = pt[1];\n            }\n          }\n\n          lineData.setLayout('linesPoints', points);\n        } else {\n          for (var i = params.start; i < params.end; i++) {\n            var itemModel = lineData.getItemModel(i);\n            var len = seriesModel.getLineCoords(i, lineCoords);\n            var pts = [];\n\n            if (isPolyline) {\n              for (var j = 0; j < len; j++) {\n                pts.push(coordSys.dataToPoint(lineCoords[j]));\n              }\n            } else {\n              pts[0] = coordSys.dataToPoint(lineCoords[0]);\n              pts[1] = coordSys.dataToPoint(lineCoords[1]);\n              var curveness = itemModel.get(['lineStyle', 'curveness']);\n\n              if (+curveness) {\n                pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n              }\n            }\n\n            lineData.setItemLayout(i, pts);\n          }\n        }\n      }\n    };\n  }\n};\nexport default linesLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport LineDraw from '../helper/LineDraw.js';\nimport EffectLine from '../helper/EffectLine.js';\nimport Line from '../helper/Line.js';\nimport Polyline from '../helper/Polyline.js';\nimport EffectPolyline from '../helper/EffectPolyline.js';\nimport LargeLineDraw from '../helper/LargeLineDraw.js';\nimport linesLayout from './linesLayout.js';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport ChartView from '../../view/Chart.js';\n\nvar LinesView =\n/** @class */\nfunction (_super) {\n  __extends(LinesView, _super);\n\n  function LinesView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LinesView.type;\n    return _this;\n  }\n\n  LinesView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get(['effect', 'trailLength']);\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength > 0) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.warn('SVG render mode doesn\\'t support lines with trail effect');\n      }\n    }\n\n    lineDraw.updateData(data);\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  };\n\n  LinesView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  };\n\n  LinesView.prototype.incrementalRender = function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  };\n\n  LinesView.prototype.eachRendered = function (cb) {\n    this._lineDraw && this._lineDraw.eachRendered(cb);\n  };\n\n  LinesView.prototype.updateTransform = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel, ecModel, api);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count(),\n          count: data.count()\n        }, data);\n      } // Not in large mode\n\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  };\n\n  LinesView.prototype._updateLineDraw = function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (hasEffect && isLargeDraw) {\n        console.warn('Large lines not support effect');\n      }\n    }\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  };\n\n  LinesView.prototype._showEffect = function (seriesModel) {\n    return !!seriesModel.get(['effect', 'show']);\n  };\n\n  LinesView.prototype._clearLayer = function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  };\n\n  LinesView.prototype.remove = function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  };\n\n  LinesView.prototype.dispose = function (ecModel, api) {\n    this.remove(ecModel, api);\n  };\n\n  LinesView.type = 'lines';\n  return LinesView;\n}(ChartView);\n\nexport default LinesView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Uint32Array, Float64Array, Float32Array */\n\nimport SeriesModel from '../../model/Series.js';\nimport SeriesData from '../../data/SeriesData.js';\nimport { concatArray, mergeAll, map, isNumber } from 'zrender/lib/core/util.js';\nimport CoordinateSystem from '../../core/CoordinateSystem.js';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup.js';\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Lines data configuration has been changed to' + ' { coords:[[1,2],[2,3]] }');\n    }\n\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(LinesSeriesModel, _super);\n\n  function LinesSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LinesSeriesModel.type;\n    _this.visualStyleAccessPath = 'lineStyle';\n    _this.visualDrawType = 'stroke';\n    return _this;\n  }\n\n  LinesSeriesModel.prototype.init = function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    _super.prototype.init.apply(this, arguments);\n  };\n\n  LinesSeriesModel.prototype.mergeOption = function (option) {\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    _super.prototype.mergeOption.apply(this, arguments);\n  };\n\n  LinesSeriesModel.prototype.appendData = function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  };\n\n  LinesSeriesModel.prototype._getCoordsFromItemModel = function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(coords instanceof Array && coords.length > 0 && coords[0] instanceof Array)) {\n        throw new Error('Invalid coords ' + JSON.stringify(coords) + '. Lines must have 2d coords array in data item.');\n      }\n    }\n\n    return coords;\n  };\n\n  LinesSeriesModel.prototype.getLineCoordsCount = function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  };\n\n  LinesSeriesModel.prototype.getLineCoords = function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  };\n\n  LinesSeriesModel.prototype._processFlatCoordsArray = function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (isNumber(data[0])) {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {\n            if (process.env.NODE_ENV !== 'production') {\n              throw new Error('Invalid data format.');\n            }\n          }\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  };\n\n  LinesSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    if (process.env.NODE_ENV !== 'production') {\n      var CoordSys = CoordinateSystem.get(option.coordinateSystem);\n\n      if (!CoordSys) {\n        throw new Error('Unkown coordinate system ' + option.coordinateSystem);\n      }\n    }\n\n    var lineData = new SeriesData(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  };\n\n  LinesSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var nameArr = [];\n    fromName != null && nameArr.push(fromName);\n    toName != null && nameArr.push(toName);\n    return createTooltipMarkup('nameValue', {\n      name: nameArr.join(' > ')\n    });\n  };\n\n  LinesSeriesModel.prototype.preventIncremental = function () {\n    return !!this.get(['effect', 'show']);\n  };\n\n  LinesSeriesModel.prototype.getProgressive = function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  };\n\n  LinesSeriesModel.prototype.getProgressiveThreshold = function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  };\n\n  LinesSeriesModel.prototype.getZLevelKey = function () {\n    var effectModel = this.getModel('effect');\n    var trailLength = effectModel.get('trailLength');\n    return this.getData().count() > this.getProgressiveThreshold() // Each progressive series has individual key.\n    ? this.id : effectModel.get('show') && trailLength > 0 ? trailLength + '' : '';\n  };\n\n  LinesSeriesModel.type = 'series.lines';\n  LinesSeriesModel.dependencies = ['grid', 'polar', 'geo', 'calendar'];\n  LinesSeriesModel.defaultOption = {\n    coordinateSystem: 'geo',\n    // zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      trailLength: 0.2\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    polyline: false,\n    clip: true,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  };\n  return LinesSeriesModel;\n}(SeriesModel);\n\nexport default LinesSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar linesVisual = {\n  seriesType: 'lines',\n  reset: function (seriesModel) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nexport default linesVisual;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport LinesView from './LinesView.js';\nimport LinesSeriesModel from './LinesSeries.js';\nimport linesLayout from './linesLayout.js';\nimport linesVisual from './linesVisual.js';\nexport function install(registers) {\n  registers.registerChartView(LinesView);\n  registers.registerSeriesModel(LinesSeriesModel);\n  registers.registerLayout(linesLayout);\n  registers.registerVisual(linesVisual);\n}"],"names":["seriesType","plan","createRenderPlanner","reset","seriesModel","coordSys","coordinateSystem","isPolyline","get","isLarge","pipelineContext","large","progress","params","lineData","lineCoords","points","segCount","end","start","totalCoordsCount","i","getLineCoordsCount","Float32Array","offset","pt","len","getLineCoords","k","dataToPoint","setLayout","itemModel","getItemModel","pts","j","push","curveness","setItemLayout","LinesView","_super","_this","apply","this","arguments","type","__extends","prototype","render","ecModel","api","data","getData","lineDraw","_updateLineDraw","zlevel","trailLength","zr","getZr","isSvg","painter","getType","getLayer","clear","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","Math","max","min","updateData","clipPath","createClipPath","group","setClipPath","removeClipPath","_finished","incrementalPrepareRender","incrementalPrepareUpdate","_clearLayer","incrementalRender","taskParams","_lineDraw","incrementalUpdate","count","eachRendered","cb","updateTransform","progressiveRender","update","res","linesLayout","updateLayout","hasEffect","isLargeDraw","_hasEffet","_isPolyline","_isLargeDraw","remove","LargeLineDraw","LineDraw","EffectPolyline","Polyline","EffectLine","Line","add","dispose","ChartView","Uint32Arr","Uint32Array","Array","Float64Arr","Float64Array","compatEc2","seriesOpt","coord","map","itemOpt","target","coords","name","fromName","toName","mergeAll","LinesSeriesModel","visualStyleAccessPath","visualDrawType","init","option","result","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","mergeOption","appendData","concatArray","getRawData","_getCoordsFromItemModel","idx","getShallow","length","out","startOffset","isNumber","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","dataCount","x","y","buffer","getInitialData","SeriesData","hasItemOption","initData","dataItem","dimName","dataIndex","dimIndex","NaN","value","formatTooltip","multipleSeries","dataType","nameArr","createTooltipMarkup","join","preventIncremental","getProgressive","progressive","getProgressiveThreshold","progressiveThreshold","getZLevelKey","effectModel","getModel","id","dependencies","defaultOption","z","legendHoverLink","xAxisIndex","yAxisIndex","symbol","symbolSize","geoIndex","effect","show","period","constantSpeed","loop","largeThreshold","polyline","clip","label","position","lineStyle","opacity","SeriesModel","normalize","a","symbolType","setVisual","dataEach","setItemVisual","install","registers","registerChartView","registerSeriesModel","registerLayout","registerVisual","linesVisual"],"sourceRoot":""}