{"version":3,"file":"static/js/7273.2f1615fc.js","mappings":"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","sources":["../node_modules/zrender/lib/Element.js"],"sourcesContent":["import Transformable, { TRANSFORMABLE_PROPS } from './core/Transformable.js';\nimport Animator, { cloneValue } from './animation/Animator.js';\nimport BoundingRect from './core/BoundingRect.js';\nimport Eventful from './core/Eventful.js';\nimport { calculateTextPosition, parsePercent } from './contain/text.js';\nimport { guid, isObject, keys, extend, indexOf, logError, mixin, isArrayLike, isTypedArray, isGradientObject, filter, reduce } from './core/util.js';\nimport { LIGHT_LABEL_COLOR, DARK_LABEL_COLOR } from './config.js';\nimport { parse, stringify } from './tool/color.js';\nimport { REDRAW_BIT } from './graphic/constants.js';\nexport var PRESERVED_NORMAL_STATE = '__zr_normal__';\nvar PRIMARY_STATES_KEYS = TRANSFORMABLE_PROPS.concat(['ignore']);\nvar DEFAULT_ANIMATABLE_MAP = reduce(TRANSFORMABLE_PROPS, function (obj, key) {\n    obj[key] = true;\n    return obj;\n}, { ignore: false });\nvar tmpTextPosCalcRes = {};\nvar tmpBoundingRect = new BoundingRect(0, 0, 0, 0);\nvar Element = (function () {\n    function Element(props) {\n        this.id = guid();\n        this.animators = [];\n        this.currentStates = [];\n        this.states = {};\n        this._init(props);\n    }\n    Element.prototype._init = function (props) {\n        this.attr(props);\n    };\n    Element.prototype.drift = function (dx, dy, e) {\n        switch (this.draggable) {\n            case 'horizontal':\n                dy = 0;\n                break;\n            case 'vertical':\n                dx = 0;\n                break;\n        }\n        var m = this.transform;\n        if (!m) {\n            m = this.transform = [1, 0, 0, 1, 0, 0];\n        }\n        m[4] += dx;\n        m[5] += dy;\n        this.decomposeTransform();\n        this.markRedraw();\n    };\n    Element.prototype.beforeUpdate = function () { };\n    Element.prototype.afterUpdate = function () { };\n    Element.prototype.update = function () {\n        this.updateTransform();\n        if (this.__dirty) {\n            this.updateInnerText();\n        }\n    };\n    Element.prototype.updateInnerText = function (forceUpdate) {\n        var textEl = this._textContent;\n        if (textEl && (!textEl.ignore || forceUpdate)) {\n            if (!this.textConfig) {\n                this.textConfig = {};\n            }\n            var textConfig = this.textConfig;\n            var isLocal = textConfig.local;\n            var innerTransformable = textEl.innerTransformable;\n            var textAlign = void 0;\n            var textVerticalAlign = void 0;\n            var textStyleChanged = false;\n            innerTransformable.parent = isLocal ? this : null;\n            var innerOrigin = false;\n            innerTransformable.copyTransform(textEl);\n            if (textConfig.position != null) {\n                var layoutRect = tmpBoundingRect;\n                if (textConfig.layoutRect) {\n                    layoutRect.copy(textConfig.layoutRect);\n                }\n                else {\n                    layoutRect.copy(this.getBoundingRect());\n                }\n                if (!isLocal) {\n                    layoutRect.applyTransform(this.transform);\n                }\n                if (this.calculateTextPosition) {\n                    this.calculateTextPosition(tmpTextPosCalcRes, textConfig, layoutRect);\n                }\n                else {\n                    calculateTextPosition(tmpTextPosCalcRes, textConfig, layoutRect);\n                }\n                innerTransformable.x = tmpTextPosCalcRes.x;\n                innerTransformable.y = tmpTextPosCalcRes.y;\n                textAlign = tmpTextPosCalcRes.align;\n                textVerticalAlign = tmpTextPosCalcRes.verticalAlign;\n                var textOrigin = textConfig.origin;\n                if (textOrigin && textConfig.rotation != null) {\n                    var relOriginX = void 0;\n                    var relOriginY = void 0;\n                    if (textOrigin === 'center') {\n                        relOriginX = layoutRect.width * 0.5;\n                        relOriginY = layoutRect.height * 0.5;\n                    }\n                    else {\n                        relOriginX = parsePercent(textOrigin[0], layoutRect.width);\n                        relOriginY = parsePercent(textOrigin[1], layoutRect.height);\n                    }\n                    innerOrigin = true;\n                    innerTransformable.originX = -innerTransformable.x + relOriginX + (isLocal ? 0 : layoutRect.x);\n                    innerTransformable.originY = -innerTransformable.y + relOriginY + (isLocal ? 0 : layoutRect.y);\n                }\n            }\n            if (textConfig.rotation != null) {\n                innerTransformable.rotation = textConfig.rotation;\n            }\n            var textOffset = textConfig.offset;\n            if (textOffset) {\n                innerTransformable.x += textOffset[0];\n                innerTransformable.y += textOffset[1];\n                if (!innerOrigin) {\n                    innerTransformable.originX = -textOffset[0];\n                    innerTransformable.originY = -textOffset[1];\n                }\n            }\n            var isInside = textConfig.inside == null\n                ? (typeof textConfig.position === 'string' && textConfig.position.indexOf('inside') >= 0)\n                : textConfig.inside;\n            var innerTextDefaultStyle = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {});\n            var textFill = void 0;\n            var textStroke = void 0;\n            var autoStroke = void 0;\n            if (isInside && this.canBeInsideText()) {\n                textFill = textConfig.insideFill;\n                textStroke = textConfig.insideStroke;\n                if (textFill == null || textFill === 'auto') {\n                    textFill = this.getInsideTextFill();\n                }\n                if (textStroke == null || textStroke === 'auto') {\n                    textStroke = this.getInsideTextStroke(textFill);\n                    autoStroke = true;\n                }\n            }\n            else {\n                textFill = textConfig.outsideFill;\n                textStroke = textConfig.outsideStroke;\n                if (textFill == null || textFill === 'auto') {\n                    textFill = this.getOutsideFill();\n                }\n                if (textStroke == null || textStroke === 'auto') {\n                    textStroke = this.getOutsideStroke(textFill);\n                    autoStroke = true;\n                }\n            }\n            textFill = textFill || '#000';\n            if (textFill !== innerTextDefaultStyle.fill\n                || textStroke !== innerTextDefaultStyle.stroke\n                || autoStroke !== innerTextDefaultStyle.autoStroke\n                || textAlign !== innerTextDefaultStyle.align\n                || textVerticalAlign !== innerTextDefaultStyle.verticalAlign) {\n                textStyleChanged = true;\n                innerTextDefaultStyle.fill = textFill;\n                innerTextDefaultStyle.stroke = textStroke;\n                innerTextDefaultStyle.autoStroke = autoStroke;\n                innerTextDefaultStyle.align = textAlign;\n                innerTextDefaultStyle.verticalAlign = textVerticalAlign;\n                textEl.setDefaultTextStyle(innerTextDefaultStyle);\n            }\n            textEl.__dirty |= REDRAW_BIT;\n            if (textStyleChanged) {\n                textEl.dirtyStyle(true);\n            }\n        }\n    };\n    Element.prototype.canBeInsideText = function () {\n        return true;\n    };\n    Element.prototype.getInsideTextFill = function () {\n        return '#fff';\n    };\n    Element.prototype.getInsideTextStroke = function (textFill) {\n        return '#000';\n    };\n    Element.prototype.getOutsideFill = function () {\n        return this.__zr && this.__zr.isDarkMode() ? LIGHT_LABEL_COLOR : DARK_LABEL_COLOR;\n    };\n    Element.prototype.getOutsideStroke = function (textFill) {\n        var backgroundColor = this.__zr && this.__zr.getBackgroundColor();\n        var colorArr = typeof backgroundColor === 'string' && parse(backgroundColor);\n        if (!colorArr) {\n            colorArr = [255, 255, 255, 1];\n        }\n        var alpha = colorArr[3];\n        var isDark = this.__zr.isDarkMode();\n        for (var i = 0; i < 3; i++) {\n            colorArr[i] = colorArr[i] * alpha + (isDark ? 0 : 255) * (1 - alpha);\n        }\n        colorArr[3] = 1;\n        return stringify(colorArr, 'rgba');\n    };\n    Element.prototype.traverse = function (cb, context) { };\n    Element.prototype.attrKV = function (key, value) {\n        if (key === 'textConfig') {\n            this.setTextConfig(value);\n        }\n        else if (key === 'textContent') {\n            this.setTextContent(value);\n        }\n        else if (key === 'clipPath') {\n            this.setClipPath(value);\n        }\n        else if (key === 'extra') {\n            this.extra = this.extra || {};\n            extend(this.extra, value);\n        }\n        else {\n            this[key] = value;\n        }\n    };\n    Element.prototype.hide = function () {\n        this.ignore = true;\n        this.markRedraw();\n    };\n    Element.prototype.show = function () {\n        this.ignore = false;\n        this.markRedraw();\n    };\n    Element.prototype.attr = function (keyOrObj, value) {\n        if (typeof keyOrObj === 'string') {\n            this.attrKV(keyOrObj, value);\n        }\n        else if (isObject(keyOrObj)) {\n            var obj = keyOrObj;\n            var keysArr = keys(obj);\n            for (var i = 0; i < keysArr.length; i++) {\n                var key = keysArr[i];\n                this.attrKV(key, keyOrObj[key]);\n            }\n        }\n        this.markRedraw();\n        return this;\n    };\n    Element.prototype.saveCurrentToNormalState = function (toState) {\n        this._innerSaveToNormal(toState);\n        var normalState = this._normalState;\n        for (var i = 0; i < this.animators.length; i++) {\n            var animator = this.animators[i];\n            var fromStateTransition = animator.__fromStateTransition;\n            if (animator.getLoop() || fromStateTransition && fromStateTransition !== PRESERVED_NORMAL_STATE) {\n                continue;\n            }\n            var targetName = animator.targetName;\n            var target = targetName\n                ? normalState[targetName] : normalState;\n            animator.saveTo(target);\n        }\n    };\n    Element.prototype._innerSaveToNormal = function (toState) {\n        var normalState = this._normalState;\n        if (!normalState) {\n            normalState = this._normalState = {};\n        }\n        if (toState.textConfig && !normalState.textConfig) {\n            normalState.textConfig = this.textConfig;\n        }\n        this._savePrimaryToNormal(toState, normalState, PRIMARY_STATES_KEYS);\n    };\n    Element.prototype._savePrimaryToNormal = function (toState, normalState, primaryKeys) {\n        for (var i = 0; i < primaryKeys.length; i++) {\n            var key = primaryKeys[i];\n            if (toState[key] != null && !(key in normalState)) {\n                normalState[key] = this[key];\n            }\n        }\n    };\n    Element.prototype.hasState = function () {\n        return this.currentStates.length > 0;\n    };\n    Element.prototype.getState = function (name) {\n        return this.states[name];\n    };\n    Element.prototype.ensureState = function (name) {\n        var states = this.states;\n        if (!states[name]) {\n            states[name] = {};\n        }\n        return states[name];\n    };\n    Element.prototype.clearStates = function (noAnimation) {\n        this.useState(PRESERVED_NORMAL_STATE, false, noAnimation);\n    };\n    Element.prototype.useState = function (stateName, keepCurrentStates, noAnimation, forceUseHoverLayer) {\n        var toNormalState = stateName === PRESERVED_NORMAL_STATE;\n        var hasStates = this.hasState();\n        if (!hasStates && toNormalState) {\n            return;\n        }\n        var currentStates = this.currentStates;\n        var animationCfg = this.stateTransition;\n        if (indexOf(currentStates, stateName) >= 0 && (keepCurrentStates || currentStates.length === 1)) {\n            return;\n        }\n        var state;\n        if (this.stateProxy && !toNormalState) {\n            state = this.stateProxy(stateName);\n        }\n        if (!state) {\n            state = (this.states && this.states[stateName]);\n        }\n        if (!state && !toNormalState) {\n            logError(\"State \" + stateName + \" not exists.\");\n            return;\n        }\n        if (!toNormalState) {\n            this.saveCurrentToNormalState(state);\n        }\n        var useHoverLayer = !!((state && state.hoverLayer) || forceUseHoverLayer);\n        if (useHoverLayer) {\n            this._toggleHoverLayerFlag(true);\n        }\n        this._applyStateObj(stateName, state, this._normalState, keepCurrentStates, !noAnimation && !this.__inHover && animationCfg && animationCfg.duration > 0, animationCfg);\n        var textContent = this._textContent;\n        var textGuide = this._textGuide;\n        if (textContent) {\n            textContent.useState(stateName, keepCurrentStates, noAnimation, useHoverLayer);\n        }\n        if (textGuide) {\n            textGuide.useState(stateName, keepCurrentStates, noAnimation, useHoverLayer);\n        }\n        if (toNormalState) {\n            this.currentStates = [];\n            this._normalState = {};\n        }\n        else {\n            if (!keepCurrentStates) {\n                this.currentStates = [stateName];\n            }\n            else {\n                this.currentStates.push(stateName);\n            }\n        }\n        this._updateAnimationTargets();\n        this.markRedraw();\n        if (!useHoverLayer && this.__inHover) {\n            this._toggleHoverLayerFlag(false);\n            this.__dirty &= ~REDRAW_BIT;\n        }\n        return state;\n    };\n    Element.prototype.useStates = function (states, noAnimation, forceUseHoverLayer) {\n        if (!states.length) {\n            this.clearStates();\n        }\n        else {\n            var stateObjects = [];\n            var currentStates = this.currentStates;\n            var len = states.length;\n            var notChange = len === currentStates.length;\n            if (notChange) {\n                for (var i = 0; i < len; i++) {\n                    if (states[i] !== currentStates[i]) {\n                        notChange = false;\n                        break;\n                    }\n                }\n            }\n            if (notChange) {\n                return;\n            }\n            for (var i = 0; i < len; i++) {\n                var stateName = states[i];\n                var stateObj = void 0;\n                if (this.stateProxy) {\n                    stateObj = this.stateProxy(stateName, states);\n                }\n                if (!stateObj) {\n                    stateObj = this.states[stateName];\n                }\n                if (stateObj) {\n                    stateObjects.push(stateObj);\n                }\n            }\n            var lastStateObj = stateObjects[len - 1];\n            var useHoverLayer = !!((lastStateObj && lastStateObj.hoverLayer) || forceUseHoverLayer);\n            if (useHoverLayer) {\n                this._toggleHoverLayerFlag(true);\n            }\n            var mergedState = this._mergeStates(stateObjects);\n            var animationCfg = this.stateTransition;\n            this.saveCurrentToNormalState(mergedState);\n            this._applyStateObj(states.join(','), mergedState, this._normalState, false, !noAnimation && !this.__inHover && animationCfg && animationCfg.duration > 0, animationCfg);\n            var textContent = this._textContent;\n            var textGuide = this._textGuide;\n            if (textContent) {\n                textContent.useStates(states, noAnimation, useHoverLayer);\n            }\n            if (textGuide) {\n                textGuide.useStates(states, noAnimation, useHoverLayer);\n            }\n            this._updateAnimationTargets();\n            this.currentStates = states.slice();\n            this.markRedraw();\n            if (!useHoverLayer && this.__inHover) {\n                this._toggleHoverLayerFlag(false);\n                this.__dirty &= ~REDRAW_BIT;\n            }\n        }\n    };\n    Element.prototype._updateAnimationTargets = function () {\n        for (var i = 0; i < this.animators.length; i++) {\n            var animator = this.animators[i];\n            if (animator.targetName) {\n                animator.changeTarget(this[animator.targetName]);\n            }\n        }\n    };\n    Element.prototype.removeState = function (state) {\n        var idx = indexOf(this.currentStates, state);\n        if (idx >= 0) {\n            var currentStates = this.currentStates.slice();\n            currentStates.splice(idx, 1);\n            this.useStates(currentStates);\n        }\n    };\n    Element.prototype.replaceState = function (oldState, newState, forceAdd) {\n        var currentStates = this.currentStates.slice();\n        var idx = indexOf(currentStates, oldState);\n        var newStateExists = indexOf(currentStates, newState) >= 0;\n        if (idx >= 0) {\n            if (!newStateExists) {\n                currentStates[idx] = newState;\n            }\n            else {\n                currentStates.splice(idx, 1);\n            }\n        }\n        else if (forceAdd && !newStateExists) {\n            currentStates.push(newState);\n        }\n        this.useStates(currentStates);\n    };\n    Element.prototype.toggleState = function (state, enable) {\n        if (enable) {\n            this.useState(state, true);\n        }\n        else {\n            this.removeState(state);\n        }\n    };\n    Element.prototype._mergeStates = function (states) {\n        var mergedState = {};\n        var mergedTextConfig;\n        for (var i = 0; i < states.length; i++) {\n            var state = states[i];\n            extend(mergedState, state);\n            if (state.textConfig) {\n                mergedTextConfig = mergedTextConfig || {};\n                extend(mergedTextConfig, state.textConfig);\n            }\n        }\n        if (mergedTextConfig) {\n            mergedState.textConfig = mergedTextConfig;\n        }\n        return mergedState;\n    };\n    Element.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n        var needsRestoreToNormal = !(state && keepCurrentStates);\n        if (state && state.textConfig) {\n            this.textConfig = extend({}, keepCurrentStates ? this.textConfig : normalState.textConfig);\n            extend(this.textConfig, state.textConfig);\n        }\n        else if (needsRestoreToNormal) {\n            if (normalState.textConfig) {\n                this.textConfig = normalState.textConfig;\n            }\n        }\n        var transitionTarget = {};\n        var hasTransition = false;\n        for (var i = 0; i < PRIMARY_STATES_KEYS.length; i++) {\n            var key = PRIMARY_STATES_KEYS[i];\n            var propNeedsTransition = transition && DEFAULT_ANIMATABLE_MAP[key];\n            if (state && state[key] != null) {\n                if (propNeedsTransition) {\n                    hasTransition = true;\n                    transitionTarget[key] = state[key];\n                }\n                else {\n                    this[key] = state[key];\n                }\n            }\n            else if (needsRestoreToNormal) {\n                if (normalState[key] != null) {\n                    if (propNeedsTransition) {\n                        hasTransition = true;\n                        transitionTarget[key] = normalState[key];\n                    }\n                    else {\n                        this[key] = normalState[key];\n                    }\n                }\n            }\n        }\n        if (!transition) {\n            for (var i = 0; i < this.animators.length; i++) {\n                var animator = this.animators[i];\n                var targetName = animator.targetName;\n                if (!animator.getLoop()) {\n                    animator.__changeFinalValue(targetName\n                        ? (state || normalState)[targetName]\n                        : (state || normalState));\n                }\n            }\n        }\n        if (hasTransition) {\n            this._transitionState(stateName, transitionTarget, animationCfg);\n        }\n    };\n    Element.prototype._attachComponent = function (componentEl) {\n        if (componentEl.__zr && !componentEl.__hostTarget) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new Error('Text element has been added to zrender.');\n            }\n            return;\n        }\n        if (componentEl === this) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new Error('Recursive component attachment.');\n            }\n            return;\n        }\n        var zr = this.__zr;\n        if (zr) {\n            componentEl.addSelfToZr(zr);\n        }\n        componentEl.__zr = zr;\n        componentEl.__hostTarget = this;\n    };\n    Element.prototype._detachComponent = function (componentEl) {\n        if (componentEl.__zr) {\n            componentEl.removeSelfFromZr(componentEl.__zr);\n        }\n        componentEl.__zr = null;\n        componentEl.__hostTarget = null;\n    };\n    Element.prototype.getClipPath = function () {\n        return this._clipPath;\n    };\n    Element.prototype.setClipPath = function (clipPath) {\n        if (this._clipPath && this._clipPath !== clipPath) {\n            this.removeClipPath();\n        }\n        this._attachComponent(clipPath);\n        this._clipPath = clipPath;\n        this.markRedraw();\n    };\n    Element.prototype.removeClipPath = function () {\n        var clipPath = this._clipPath;\n        if (clipPath) {\n            this._detachComponent(clipPath);\n            this._clipPath = null;\n            this.markRedraw();\n        }\n    };\n    Element.prototype.getTextContent = function () {\n        return this._textContent;\n    };\n    Element.prototype.setTextContent = function (textEl) {\n        var previousTextContent = this._textContent;\n        if (previousTextContent === textEl) {\n            return;\n        }\n        if (previousTextContent && previousTextContent !== textEl) {\n            this.removeTextContent();\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (textEl.__zr && !textEl.__hostTarget) {\n                throw new Error('Text element has been added to zrender.');\n            }\n        }\n        textEl.innerTransformable = new Transformable();\n        this._attachComponent(textEl);\n        this._textContent = textEl;\n        this.markRedraw();\n    };\n    Element.prototype.setTextConfig = function (cfg) {\n        if (!this.textConfig) {\n            this.textConfig = {};\n        }\n        extend(this.textConfig, cfg);\n        this.markRedraw();\n    };\n    Element.prototype.removeTextConfig = function () {\n        this.textConfig = null;\n        this.markRedraw();\n    };\n    Element.prototype.removeTextContent = function () {\n        var textEl = this._textContent;\n        if (textEl) {\n            textEl.innerTransformable = null;\n            this._detachComponent(textEl);\n            this._textContent = null;\n            this._innerTextDefaultStyle = null;\n            this.markRedraw();\n        }\n    };\n    Element.prototype.getTextGuideLine = function () {\n        return this._textGuide;\n    };\n    Element.prototype.setTextGuideLine = function (guideLine) {\n        if (this._textGuide && this._textGuide !== guideLine) {\n            this.removeTextGuideLine();\n        }\n        this._attachComponent(guideLine);\n        this._textGuide = guideLine;\n        this.markRedraw();\n    };\n    Element.prototype.removeTextGuideLine = function () {\n        var textGuide = this._textGuide;\n        if (textGuide) {\n            this._detachComponent(textGuide);\n            this._textGuide = null;\n            this.markRedraw();\n        }\n    };\n    Element.prototype.markRedraw = function () {\n        this.__dirty |= REDRAW_BIT;\n        var zr = this.__zr;\n        if (zr) {\n            if (this.__inHover) {\n                zr.refreshHover();\n            }\n            else {\n                zr.refresh();\n            }\n        }\n        if (this.__hostTarget) {\n            this.__hostTarget.markRedraw();\n        }\n    };\n    Element.prototype.dirty = function () {\n        this.markRedraw();\n    };\n    Element.prototype._toggleHoverLayerFlag = function (inHover) {\n        this.__inHover = inHover;\n        var textContent = this._textContent;\n        var textGuide = this._textGuide;\n        if (textContent) {\n            textContent.__inHover = inHover;\n        }\n        if (textGuide) {\n            textGuide.__inHover = inHover;\n        }\n    };\n    Element.prototype.addSelfToZr = function (zr) {\n        if (this.__zr === zr) {\n            return;\n        }\n        this.__zr = zr;\n        var animators = this.animators;\n        if (animators) {\n            for (var i = 0; i < animators.length; i++) {\n                zr.animation.addAnimator(animators[i]);\n            }\n        }\n        if (this._clipPath) {\n            this._clipPath.addSelfToZr(zr);\n        }\n        if (this._textContent) {\n            this._textContent.addSelfToZr(zr);\n        }\n        if (this._textGuide) {\n            this._textGuide.addSelfToZr(zr);\n        }\n    };\n    Element.prototype.removeSelfFromZr = function (zr) {\n        if (!this.__zr) {\n            return;\n        }\n        this.__zr = null;\n        var animators = this.animators;\n        if (animators) {\n            for (var i = 0; i < animators.length; i++) {\n                zr.animation.removeAnimator(animators[i]);\n            }\n        }\n        if (this._clipPath) {\n            this._clipPath.removeSelfFromZr(zr);\n        }\n        if (this._textContent) {\n            this._textContent.removeSelfFromZr(zr);\n        }\n        if (this._textGuide) {\n            this._textGuide.removeSelfFromZr(zr);\n        }\n    };\n    Element.prototype.animate = function (key, loop, allowDiscreteAnimation) {\n        var target = key ? this[key] : this;\n        if (process.env.NODE_ENV !== 'production') {\n            if (!target) {\n                logError('Property \"'\n                    + key\n                    + '\" is not existed in element '\n                    + this.id);\n                return;\n            }\n        }\n        var animator = new Animator(target, loop, allowDiscreteAnimation);\n        key && (animator.targetName = key);\n        this.addAnimator(animator, key);\n        return animator;\n    };\n    Element.prototype.addAnimator = function (animator, key) {\n        var zr = this.__zr;\n        var el = this;\n        animator.during(function () {\n            el.updateDuringAnimation(key);\n        }).done(function () {\n            var animators = el.animators;\n            var idx = indexOf(animators, animator);\n            if (idx >= 0) {\n                animators.splice(idx, 1);\n            }\n        });\n        this.animators.push(animator);\n        if (zr) {\n            zr.animation.addAnimator(animator);\n        }\n        zr && zr.wakeUp();\n    };\n    Element.prototype.updateDuringAnimation = function (key) {\n        this.markRedraw();\n    };\n    Element.prototype.stopAnimation = function (scope, forwardToLast) {\n        var animators = this.animators;\n        var len = animators.length;\n        var leftAnimators = [];\n        for (var i = 0; i < len; i++) {\n            var animator = animators[i];\n            if (!scope || scope === animator.scope) {\n                animator.stop(forwardToLast);\n            }\n            else {\n                leftAnimators.push(animator);\n            }\n        }\n        this.animators = leftAnimators;\n        return this;\n    };\n    Element.prototype.animateTo = function (target, cfg, animationProps) {\n        animateTo(this, target, cfg, animationProps);\n    };\n    Element.prototype.animateFrom = function (target, cfg, animationProps) {\n        animateTo(this, target, cfg, animationProps, true);\n    };\n    Element.prototype._transitionState = function (stateName, target, cfg, animationProps) {\n        var animators = animateTo(this, target, cfg, animationProps);\n        for (var i = 0; i < animators.length; i++) {\n            animators[i].__fromStateTransition = stateName;\n        }\n    };\n    Element.prototype.getBoundingRect = function () {\n        return null;\n    };\n    Element.prototype.getPaintRect = function () {\n        return null;\n    };\n    Element.initDefaultProps = (function () {\n        var elProto = Element.prototype;\n        elProto.type = 'element';\n        elProto.name = '';\n        elProto.ignore =\n            elProto.silent =\n                elProto.isGroup =\n                    elProto.draggable =\n                        elProto.dragging =\n                            elProto.ignoreClip =\n                                elProto.__inHover = false;\n        elProto.__dirty = REDRAW_BIT;\n        var logs = {};\n        function logDeprecatedError(key, xKey, yKey) {\n            if (!logs[key + xKey + yKey]) {\n                console.warn(\"DEPRECATED: '\" + key + \"' has been deprecated. use '\" + xKey + \"', '\" + yKey + \"' instead\");\n                logs[key + xKey + yKey] = true;\n            }\n        }\n        function createLegacyProperty(key, privateKey, xKey, yKey) {\n            Object.defineProperty(elProto, key, {\n                get: function () {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logDeprecatedError(key, xKey, yKey);\n                    }\n                    if (!this[privateKey]) {\n                        var pos = this[privateKey] = [];\n                        enhanceArray(this, pos);\n                    }\n                    return this[privateKey];\n                },\n                set: function (pos) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logDeprecatedError(key, xKey, yKey);\n                    }\n                    this[xKey] = pos[0];\n                    this[yKey] = pos[1];\n                    this[privateKey] = pos;\n                    enhanceArray(this, pos);\n                }\n            });\n            function enhanceArray(self, pos) {\n                Object.defineProperty(pos, 0, {\n                    get: function () {\n                        return self[xKey];\n                    },\n                    set: function (val) {\n                        self[xKey] = val;\n                    }\n                });\n                Object.defineProperty(pos, 1, {\n                    get: function () {\n                        return self[yKey];\n                    },\n                    set: function (val) {\n                        self[yKey] = val;\n                    }\n                });\n            }\n        }\n        if (Object.defineProperty) {\n            createLegacyProperty('position', '_legacyPos', 'x', 'y');\n            createLegacyProperty('scale', '_legacyScale', 'scaleX', 'scaleY');\n            createLegacyProperty('origin', '_legacyOrigin', 'originX', 'originY');\n        }\n    })();\n    return Element;\n}());\nmixin(Element, Eventful);\nmixin(Element, Transformable);\nfunction animateTo(animatable, target, cfg, animationProps, reverse) {\n    cfg = cfg || {};\n    var animators = [];\n    animateToShallow(animatable, '', animatable, target, cfg, animationProps, animators, reverse);\n    var finishCount = animators.length;\n    var doneHappened = false;\n    var cfgDone = cfg.done;\n    var cfgAborted = cfg.aborted;\n    var doneCb = function () {\n        doneHappened = true;\n        finishCount--;\n        if (finishCount <= 0) {\n            doneHappened\n                ? (cfgDone && cfgDone())\n                : (cfgAborted && cfgAborted());\n        }\n    };\n    var abortedCb = function () {\n        finishCount--;\n        if (finishCount <= 0) {\n            doneHappened\n                ? (cfgDone && cfgDone())\n                : (cfgAborted && cfgAborted());\n        }\n    };\n    if (!finishCount) {\n        cfgDone && cfgDone();\n    }\n    if (animators.length > 0 && cfg.during) {\n        animators[0].during(function (target, percent) {\n            cfg.during(percent);\n        });\n    }\n    for (var i = 0; i < animators.length; i++) {\n        var animator = animators[i];\n        if (doneCb) {\n            animator.done(doneCb);\n        }\n        if (abortedCb) {\n            animator.aborted(abortedCb);\n        }\n        if (cfg.force) {\n            animator.duration(cfg.duration);\n        }\n        animator.start(cfg.easing);\n    }\n    return animators;\n}\nfunction copyArrShallow(source, target, len) {\n    for (var i = 0; i < len; i++) {\n        source[i] = target[i];\n    }\n}\nfunction is2DArray(value) {\n    return isArrayLike(value[0]);\n}\nfunction copyValue(target, source, key) {\n    if (isArrayLike(source[key])) {\n        if (!isArrayLike(target[key])) {\n            target[key] = [];\n        }\n        if (isTypedArray(source[key])) {\n            var len = source[key].length;\n            if (target[key].length !== len) {\n                target[key] = new (source[key].constructor)(len);\n                copyArrShallow(target[key], source[key], len);\n            }\n        }\n        else {\n            var sourceArr = source[key];\n            var targetArr = target[key];\n            var len0 = sourceArr.length;\n            if (is2DArray(sourceArr)) {\n                var len1 = sourceArr[0].length;\n                for (var i = 0; i < len0; i++) {\n                    if (!targetArr[i]) {\n                        targetArr[i] = Array.prototype.slice.call(sourceArr[i]);\n                    }\n                    else {\n                        copyArrShallow(targetArr[i], sourceArr[i], len1);\n                    }\n                }\n            }\n            else {\n                copyArrShallow(targetArr, sourceArr, len0);\n            }\n            targetArr.length = sourceArr.length;\n        }\n    }\n    else {\n        target[key] = source[key];\n    }\n}\nfunction isValueSame(val1, val2) {\n    return val1 === val2\n        || isArrayLike(val1) && isArrayLike(val2) && is1DArraySame(val1, val2);\n}\nfunction is1DArraySame(arr0, arr1) {\n    var len = arr0.length;\n    if (len !== arr1.length) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        if (arr0[i] !== arr1[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction animateToShallow(animatable, topKey, animateObj, target, cfg, animationProps, animators, reverse) {\n    var targetKeys = keys(target);\n    var duration = cfg.duration;\n    var delay = cfg.delay;\n    var additive = cfg.additive;\n    var setToFinal = cfg.setToFinal;\n    var animateAll = !isObject(animationProps);\n    var existsAnimators = animatable.animators;\n    var animationKeys = [];\n    for (var k = 0; k < targetKeys.length; k++) {\n        var innerKey = targetKeys[k];\n        var targetVal = target[innerKey];\n        if (targetVal != null && animateObj[innerKey] != null\n            && (animateAll || animationProps[innerKey])) {\n            if (isObject(targetVal)\n                && !isArrayLike(targetVal)\n                && !isGradientObject(targetVal)) {\n                if (topKey) {\n                    if (!reverse) {\n                        animateObj[innerKey] = targetVal;\n                        animatable.updateDuringAnimation(topKey);\n                    }\n                    continue;\n                }\n                animateToShallow(animatable, innerKey, animateObj[innerKey], targetVal, cfg, animationProps && animationProps[innerKey], animators, reverse);\n            }\n            else {\n                animationKeys.push(innerKey);\n            }\n        }\n        else if (!reverse) {\n            animateObj[innerKey] = targetVal;\n            animatable.updateDuringAnimation(topKey);\n            animationKeys.push(innerKey);\n        }\n    }\n    var keyLen = animationKeys.length;\n    if (!additive && keyLen) {\n        for (var i = 0; i < existsAnimators.length; i++) {\n            var animator = existsAnimators[i];\n            if (animator.targetName === topKey) {\n                var allAborted = animator.stopTracks(animationKeys);\n                if (allAborted) {\n                    var idx = indexOf(existsAnimators, animator);\n                    existsAnimators.splice(idx, 1);\n                }\n            }\n        }\n    }\n    if (!cfg.force) {\n        animationKeys = filter(animationKeys, function (key) { return !isValueSame(target[key], animateObj[key]); });\n        keyLen = animationKeys.length;\n    }\n    if (keyLen > 0\n        || (cfg.force && !animators.length)) {\n        var revertedSource = void 0;\n        var reversedTarget = void 0;\n        var sourceClone = void 0;\n        if (reverse) {\n            reversedTarget = {};\n            if (setToFinal) {\n                revertedSource = {};\n            }\n            for (var i = 0; i < keyLen; i++) {\n                var innerKey = animationKeys[i];\n                reversedTarget[innerKey] = animateObj[innerKey];\n                if (setToFinal) {\n                    revertedSource[innerKey] = target[innerKey];\n                }\n                else {\n                    animateObj[innerKey] = target[innerKey];\n                }\n            }\n        }\n        else if (setToFinal) {\n            sourceClone = {};\n            for (var i = 0; i < keyLen; i++) {\n                var innerKey = animationKeys[i];\n                sourceClone[innerKey] = cloneValue(animateObj[innerKey]);\n                copyValue(animateObj, target, innerKey);\n            }\n        }\n        var animator = new Animator(animateObj, false, false, additive ? filter(existsAnimators, function (animator) { return animator.targetName === topKey; }) : null);\n        animator.targetName = topKey;\n        if (cfg.scope) {\n            animator.scope = cfg.scope;\n        }\n        if (setToFinal && revertedSource) {\n            animator.whenWithKeys(0, revertedSource, animationKeys);\n        }\n        if (sourceClone) {\n            animator.whenWithKeys(0, sourceClone, animationKeys);\n        }\n        animator.whenWithKeys(duration == null ? 500 : duration, reverse ? reversedTarget : target, animationKeys).delay(delay || 0);\n        animatable.addAnimator(animator, topKey);\n        animators.push(animator);\n    }\n}\nexport default Element;\n"],"names":["PRESERVED_NORMAL_STATE","PRIMARY_STATES_KEYS","TRANSFORMABLE_PROPS","DEFAULT_ANIMATABLE_MAP","reduce","obj","key","ignore","tmpTextPosCalcRes","tmpBoundingRect","BoundingRect","Element","props","this","id","guid","animators","currentStates","states","_init","prototype","attr","drift","dx","dy","e","draggable","m","transform","decomposeTransform","markRedraw","beforeUpdate","afterUpdate","update","updateTransform","__dirty","updateInnerText","forceUpdate","textEl","_textContent","textConfig","isLocal","local","innerTransformable","textAlign","textVerticalAlign","textStyleChanged","parent","innerOrigin","copyTransform","position","layoutRect","copy","getBoundingRect","applyTransform","calculateTextPosition","x","y","align","verticalAlign","textOrigin","origin","rotation","relOriginX","relOriginY","width","height","parsePercent","originX","originY","textOffset","offset","isInside","inside","indexOf","innerTextDefaultStyle","_innerTextDefaultStyle","textFill","textStroke","autoStroke","canBeInsideText","insideFill","insideStroke","getInsideTextFill","getInsideTextStroke","outsideFill","outsideStroke","getOutsideFill","getOutsideStroke","fill","stroke","setDefaultTextStyle","REDRAW_BIT","dirtyStyle","__zr","isDarkMode","LIGHT_LABEL_COLOR","DARK_LABEL_COLOR","backgroundColor","getBackgroundColor","colorArr","parse","alpha","isDark","i","stringify","traverse","cb","context","attrKV","value","setTextConfig","setTextContent","setClipPath","extra","extend","hide","show","keyOrObj","isObject","keysArr","keys","length","saveCurrentToNormalState","toState","_innerSaveToNormal","normalState","_normalState","animator","fromStateTransition","__fromStateTransition","getLoop","targetName","target","saveTo","_savePrimaryToNormal","primaryKeys","hasState","getState","name","ensureState","clearStates","noAnimation","useState","stateName","keepCurrentStates","forceUseHoverLayer","toNormalState","animationCfg","stateTransition","state","stateProxy","useHoverLayer","hoverLayer","_toggleHoverLayerFlag","_applyStateObj","__inHover","duration","textContent","textGuide","_textGuide","push","_updateAnimationTargets","logError","useStates","stateObjects","len","notChange","stateObj","lastStateObj","mergedState","_mergeStates","join","slice","changeTarget","removeState","idx","splice","replaceState","oldState","newState","forceAdd","newStateExists","toggleState","enable","mergedTextConfig","transition","needsRestoreToNormal","transitionTarget","hasTransition","propNeedsTransition","__changeFinalValue","_transitionState","_attachComponent","componentEl","__hostTarget","zr","addSelfToZr","_detachComponent","removeSelfFromZr","getClipPath","_clipPath","clipPath","removeClipPath","getTextContent","previousTextContent","removeTextContent","Transformable","cfg","removeTextConfig","getTextGuideLine","setTextGuideLine","guideLine","removeTextGuideLine","refreshHover","refresh","dirty","inHover","animation","addAnimator","removeAnimator","animate","loop","allowDiscreteAnimation","Animator","el","during","updateDuringAnimation","done","wakeUp","stopAnimation","scope","forwardToLast","leftAnimators","stop","animateTo","animationProps","animateFrom","getPaintRect","initDefaultProps","elProto","createLegacyProperty","privateKey","xKey","yKey","enhanceArray","self","pos","Object","defineProperty","get","set","val","type","silent","isGroup","dragging","ignoreClip","animatable","reverse","animateToShallow","finishCount","doneHappened","cfgDone","cfgAborted","aborted","doneCb","abortedCb","percent","force","start","easing","copyArrShallow","source","copyValue","isArrayLike","isTypedArray","constructor","sourceArr","targetArr","len0","len1","Array","call","topKey","animateObj","targetKeys","delay","additive","setToFinal","animateAll","existsAnimators","animationKeys","k","innerKey","targetVal","isGradientObject","keyLen","stopTracks","filter","val1","val2","arr0","arr1","is1DArraySame","revertedSource","reversedTarget","sourceClone","cloneValue","whenWithKeys","mixin","Eventful"],"sourceRoot":""}