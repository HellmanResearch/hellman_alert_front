{"version":3,"file":"static/js/7126.007904d5.js","mappings":"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","sources":["../node_modules/echarts/lib/core/echarts.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString, retrieve2 } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport lightTheme from '../theme/light.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.4.0';\nexport var dependencies = {\n  zrender: '5.4.0'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultCoarsePointer = 'auto';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      defaultCoarsePointer = retrieve2(root.__ECHARTS__DEFAULT__COARSE_POINTER, defaultCoarsePointer);\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: retrieve2(opts.useDirtyRect, defaultUseDirtyRect),\n      useCoarsePointer: retrieve2(opts.useCoarsePointer, defaultCoarsePointer),\n      pointerSize: opts.pointerSize\n    });\n    _this._ssr = opts.ssr; // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      } // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determin in the first frame (the\n          // frame is executed immedietely after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain', {});\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      } // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @deprecated\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    deprecateLog('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n\n    return this.renderToCanvas(opts);\n  };\n\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    var dom = this.getDom();\n\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode');\n        zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload); // Only leave blur once if there are multiple batches.\n\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n\n    ; // Allocate zlevels for series and components\n\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeperateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeperateZLevel = hasSeperateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n\n      if (hasSeperateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = '';\n          }\n\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z') || 0;\n      var zlevel = model.get('zlevel') || 0; // Set z and zlevel\n\n      view.eachRendered(function (el) {\n        doUpdateZ(el, z, zlevel, -Infinity); // Don't traverse the children because it has been traversed in _updateZ.\n\n        return true;\n      });\n    }\n\n    ;\n\n    function doUpdateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(doUpdateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n};\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n\n    var existInstance = getInstanceByDom(dom);\n\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('There is a chart instance already initialized on the dom.');\n      }\n\n      return existInstance;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (isFunction(eventName)) {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale.js';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};"],"names":["hasWindow","window","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","ACTION_REG","CONNECT_STATUS_KEY","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","length","this","isDisposed","toLowercaseNameAndCallEventful","disposedWarning","id","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","Eventful","apply","prepare","prepareView","updateDirectly","updateMethods","doConvertPixel","updateStreamModes","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","render","renderComponents","renderSeries","createExtensionAPI","enableConnect","markStatusToUpdate","applyChangedStates","MessageCenter","_super","__extends","messageCenterProto","prototype","on","off","ECharts","dom","theme","opts","_this","call","ECEventProcessor","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","isString","themeStorage","_dom","zr","_zr","zrender","renderer","devicePixelRatio","width","height","ssr","useDirtyRect","retrieve2","useCoarsePointer","pointerSize","_ssr","_throttledZrFlush","throttle","bind","flush","clone","backwardCompat","_theme","_locale","createLocaleObject","locale","SYSTEM_LANG","_coordSysMgr","CoordinateSystemManager","api","_api","prioritySortFunc","a","b","__prio","timsort","visualFuncs","dataProcessorFuncs","_scheduler","Scheduler","_messageCenter","_initEvents","resize","animation","_onframe","setAsPrimitive","_disposed","scheduler","silent","update","updateParams","e","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getId","getZr","isSSR","setOption","option","notMerge","lazyUpdate","replaceMerge","transitionOpt","isObject","transition","optionManager","OptionManager","GlobalModel","init","optionPreprocessorFuncs","seriesTransition","optionChanged","wakeUp","setTheme","deprecateLog","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","renderToCanvas","backgroundColor","get","pixelRatio","renderToSVGString","renderToString","useViewBox","getSvgDataURL","env","list","storage","getDisplayList","each","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","group","ignore","push","url","getType","type","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","platformApi","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","graphic","shape","style","fill","img","image","convertToPixel","finder","value","convertFromPixel","containPixel","result","findResult","modelUtil","models","key","indexOf","model","coordSys","coordinateSystem","containPoint","getVisual","visualType","parsedFinder","defaultMainType","data","seriesModel","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getItemVisualFromData","getVisualFromData","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","handler","params","target","findEventDispatcher","parent","ecData","getECData","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","extend","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","eventActionMap","actionType","eventType","handleLegacySelectEvents","clear","series","dispose","DOM_ATTRIBUTE_KEY","_loadingFX","needPrepare","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","payload","dispatchAction","opt","actions","updateLabelLayout","lifecycle","updatedSeries","appendData","internalField","clearColorPalette","eachSeries","applyElementStates","newStates","oldStates","currentStates","i","stateName","selected","states","select","hoverState","HOVER_STATE_EMPHASIS","emphasis","HOVER_STATE_BLUR","blur","useStates","updateZ","preventAutoZ","z","zlevel","eachRendered","doUpdateZ","maxZ2","label","getTextContent","labelLine","getTextGuideLine","isGroup","children","childrenRef","z2","isFinite","textGuideLineConfig","showAbove","clearStates","textContent","textGuide","stateTransition","hasState","prevStates","updateStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","savePathStates","__dirty","ecIns","restorePipelines","prepareStageTasks","plan","isComponent","viewList","viewMap","__alive","doPrepare","requireNewView","__requireNewView","viewId","classType","parseClassType","ComponentView","main","sub","ChartView","__id","__model","__ecComponentInfo","index","renderTask","splice","subType","setUpdatePayload","query","condition","excludeSeriesIdMap","excludeSeriesId","createHashMap","modelId","set","isHighDownPayload","SeriesModel","HIGHLIGHT_ACTION_TYPE","notBlur","blurSeriesFromHighlightPayload","_a","findComponentHighDownDispatchers","focusSelf","dispatchers","blurComponent","dispatcher","enterEmphasis","leaveEmphasis","isSelectChangePayload","toggleSelectionFromPayload","updateSeriesElementSelection","callView","concat","prepareAndUpdate","newOption","coordSysMgr","restoreData","create","darkMode","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","chartView","uid","setDirty","dirtyMap","updateView","updateVisual","clearAllVisual","updateLayout","methodName","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionWrap","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","map","defaults","eventObjBatch","isSelectChange","isHighDown","allLeaveBlur","batchItem","action","queryOptionMap","componentMainType","mainTypeSpecified","keys","messageCenter","newObj","getAllSelectedIndices","isFromClick","fromAction","fromActionPayload","pendingActions","shift","isFinished","isHighDownDispatcher","handleGlobalMouseOverForHighDown","handleGlobalMouseOutForHighDown","componentZLevels","seriesZLevels","hasSeperateZLevel","zlevelKey","getZLevelKey","idx","lastSeriesZLevel_1","lastSeriesKey_1","zLevels","setZLevel","allocateZlevels","dirtyList","getSeries","updatePayload","dirty","perform","getPerformArgs","blendMode","blend","updateBlend","elCount","traverse","preventUsingHoverLayer","hoverLayer","updateHoverLayerStatus","class_1","getComponentByElement","modelInfo","highlightDigit","enterBlur","leaveBlur","enterSelect","leaveSelect","ExtensionAPI","updateConnectedChartsStatus","charts","status","action_1","otherCharts_1","otherChart","echartsProto","one","eventName","cb","ctx","wrapped","args2","idBase","isClient","existInstance","getInstanceByDom","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","postInitFunc","registerUpdateLifecycle","registerPostUpdate","postUpdateFunc","registerAction","isFunction","assert","test","registerCoordinateSystem","coordSysCreator","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","stageHandler","__raw","registerLoading","loadingFx","registerMap","mapName","geoJson","specialAreas","getImpl","registerTransform","registerExternalTransform","seriesStyleTask","dataStyleTask","dataColorPaletteTask","seriesSymbolTask","dataSymbolTask","decal","dataStack","loadingDefault","noop","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","lightTheme","darkTheme"],"sourceRoot":""}