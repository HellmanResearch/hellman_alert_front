{"version":3,"file":"static/js/2048.28193797.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/treemap/TreemapView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, indexOf, curry, extend, normalizeCssArray, isFunction } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isHighDownDispatcher, setAsHighDownDispatcher, setDefaultStateProxy, enableHoverFocus, Z2_EMPHASIS_LIFT } from '../../util/states.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nimport * as helper from '../helper/treeHelper.js';\nimport Breadcrumb from './Breadcrumb.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as animationUtil from '../../util/animation.js';\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper.js';\nimport ChartView from '../../view/Chart.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport { makeInner, convertOptionIdName } from '../../util/model.js';\nimport { windowOpen } from '../../util/format.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = 'label';\nvar PATH_UPPERLABEL_NORMAL = 'upperLabel'; // Should larger than emphasis states lift z\n\nvar Z2_BASE = Z2_EMPHASIS_LIFT * 10; // Should bigger than every z2.\n\nvar Z2_BG = Z2_EMPHASIS_LIFT * 2;\nvar Z2_CONTENT = Z2_EMPHASIS_LIFT * 3;\nvar getStateItemStyle = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\n// So do not transfer decal directly.\n]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getStateItemStyle(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar inner = makeInner();\n\nvar TreemapView =\n/** @class */\nfunction (_super) {\n  __extends(TreemapView, _super);\n\n  function TreemapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreemapView.type;\n    _this._state = 'ready';\n    _this._storage = createStorage();\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var hasAnimation = seriesModel.get('animation');\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    hasAnimation && !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  };\n\n  TreemapView.prototype._giveContainerGroup = function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.x = layoutInfo.x;\n    containerGroup.y = layoutInfo.y;\n    return containerGroup;\n  };\n\n  TreemapView.prototype._doRender = function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n\n    function doRenderNode(thisNode, oldNode, parentGroup, depth) {\n      return renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth);\n    } // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), inner(el).willDelete = true);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  };\n\n  TreemapView.prototype._doAnimation = function (containerGroup, renderResult, seriesModel, reRoot) {\n    var durationOption = seriesModel.get('animationDurationUpdate');\n    var easingOption = seriesModel.get('animationEasing'); // TODO: do not support function until necessary.\n\n    var duration = (isFunction(durationOption) ? 0 : durationOption) || 0;\n    var easing = (isFunction(easingOption) ? null : easingOption) || 'cubicOut';\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n        var innerStore = inner(parent);\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: innerStore.nodeWidth,\n              height: innerStore.nodeHeight\n            },\n            style: {\n              opacity: 0\n            }\n          } // Others.\n          : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!innerStore.willDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = innerStore.nodeWidth / 2;\n            targetY = innerStore.nodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            x: targetX,\n            y: targetY,\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        } // TODO: do not support delay until necessary.\n\n\n        target && animationWrap.add(el, target, duration, 0, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (el instanceof graphic.Group) {\n          if (last.oldX != null) {\n            target.x = el.x;\n            target.y = el.y;\n            el.x = last.oldX;\n            el.y = last.oldY;\n          }\n        } else {\n          if (last.oldShape) {\n            target.shape = extend({}, el.shape);\n            el.setShape(last.oldShape);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, 0, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.finished(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  };\n\n  TreemapView.prototype._resetController = function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  };\n\n  TreemapView.prototype._clearController = function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  };\n\n  TreemapView.prototype._onPan = function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._onZoom = function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._initEvents = function (containerGroup) {\n    var _this = this;\n\n    containerGroup.on('click', function (e) {\n      if (_this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = _this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = _this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        _this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          _this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && windowOpen(link, linkTarget);\n        }\n      }\n    }, this);\n  };\n\n  TreemapView.prototype._renderBreadcrumb = function (seriesModel, api, targetInfo) {\n    var _this = this;\n\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot()\n      } // FIXME\n      // better way?\n      // Find breadcrumb tail on center of containerGroup.\n      : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, function (node) {\n      if (_this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? _this._rootToNode({\n          node: node\n        }) : _this._zoomToNode({\n          node: node\n        });\n      }\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.remove = function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  };\n\n  TreemapView.prototype.dispose = function () {\n    this._clearController();\n  };\n\n  TreemapView.prototype._zoomToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n\n  TreemapView.prototype._rootToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n\n\n  TreemapView.prototype.findTarget = function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  };\n\n  TreemapView.type = 'treemap';\n  return TreemapView;\n}(ChartView);\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n  var data = seriesModel.getData();\n  var nodeModel = thisNode.getModel(); // Only for enabling highlight/downplay. Clear firstly.\n  // Because some node will not be rendered.\n\n  data.setItemGraphicEl(thisNode.dataIndex, null);\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = nodeModel.getModel('itemStyle');\n  var itemStyleEmphasisModel = nodeModel.getModel(['emphasis', 'itemStyle']);\n  var itemStyleBlurModel = nodeModel.getModel(['blur', 'itemStyle']);\n  var itemStyleSelectModel = nodeModel.getModel(['select', 'itemStyle']);\n  var borderRadius = itemStyleNormalModel.get('borderRadius') || 0; // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.x = thisLayout.x || 0;\n  group.y = thisLayout.y || 0;\n  group.markRedraw();\n  inner(group).nodeWidth = thisWidth;\n  inner(group).nodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z2_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight);\n  var emphasisModel = nodeModel.getModel('emphasis');\n  var focus = emphasisModel.get('focus');\n  var blurScope = emphasisModel.get('blurScope');\n  var isDisabled = emphasisModel.get('disabled');\n  var focusOrIndices = focus === 'ancestor' ? thisNode.getAncestorsIndices() : focus === 'descendant' ? thisNode.getDescendantIndices() : focus; // No children, render content.\n\n  if (isParent) {\n    // Because of the implementation about \"traverse\" in graphic hover style, we\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\n    // hover event from the descendents will be listenered.\n    if (isHighDownDispatcher(group)) {\n      setAsHighDownDispatcher(group, false);\n    }\n\n    if (bg) {\n      setAsHighDownDispatcher(bg, !isDisabled); // Only for enabling highlight/downplay.\n\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\n      enableHoverFocus(bg, focusOrIndices, blurScope);\n    }\n  } else {\n    var content = giveGraphic('content', Rect, depth, Z2_CONTENT);\n    content && renderContent(group, content);\n    bg.disableMorphing = true;\n\n    if (bg && isHighDownDispatcher(bg)) {\n      setAsHighDownDispatcher(bg, false);\n    }\n\n    setAsHighDownDispatcher(group, !isDisabled); // Only for enabling highlight/downplay.\n\n    data.setItemGraphicEl(thisNode.dataIndex, group);\n    enableHoverFocus(group, focusOrIndices, blurScope);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    var ecData = getECData(bg); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(bg);\n    } else {\n      bg.invisible = false;\n      var style = thisNode.getVisual('style');\n      var visualBorderColor = style.stroke;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      emphasisStyle.fill = itemStyleEmphasisModel.get('borderColor');\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      blurStyle.fill = itemStyleBlurModel.get('borderColor');\n      var selectStyle = getStateItemStyle(itemStyleSelectModel);\n      selectStyle.fill = itemStyleSelectModel.get('borderColor');\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText( // PENDING: convert ZRColor to ColorString for text.\n        bg, visualBorderColor, style.opacity, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          bg.removeTextContent();\n        }\n\n      bg.setStyle(normalStyle);\n      bg.ensureState('emphasis').style = emphasisStyle;\n      bg.ensureState('blur').style = blurStyle;\n      bg.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(bg);\n    }\n\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    var ecData = getECData(content); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(content);\n    } else {\n      content.invisible = false;\n      var nodeStyle = thisNode.getVisual('style');\n      var visualColor = nodeStyle.fill;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      normalStyle.decal = nodeStyle.decal;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      var selectStyle = getStateItemStyle(itemStyleSelectModel); // PENDING: convert ZRColor to ColorString for text.\n\n      prepareText(content, visualColor, nodeStyle.opacity, null);\n      content.setStyle(normalStyle);\n      content.ensureState('emphasis').style = emphasisStyle;\n      content.ensureState('blur').style = blurStyle;\n      content.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(content);\n    }\n\n    group.add(content);\n  }\n\n  function processInvisible(element) {\n    // Delay invisible setting utill animation finished,\n    // avoid element vanish suddenly before animation.\n    !element.invisible && willInvisibleEls.push(element);\n  }\n\n  function prepareText(rectEl, visualColor, visualOpacity, // Can be null/undefined\n  upperLabelRect) {\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var defaultText = convertOptionIdName(nodeModel.get('name'), null);\n    var isShow = normalLabelModel.getShallow('show');\n    setLabelStyle(rectEl, getLabelStatesModels(nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL), {\n      defaultText: isShow ? defaultText : null,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      labelFetcher: seriesModel,\n      labelDataIndex: thisNode.dataIndex\n    });\n    var textEl = rectEl.getTextContent();\n\n    if (!textEl) {\n      return;\n    }\n\n    var textStyle = textEl.style;\n    var textPadding = normalizeCssArray(textStyle.padding || 0);\n\n    if (upperLabelRect) {\n      rectEl.setTextConfig({\n        layoutRect: upperLabelRect\n      });\n      textEl.disableLabelLayout = true;\n    }\n\n    textEl.beforeUpdate = function () {\n      var width = Math.max((upperLabelRect ? upperLabelRect.width : rectEl.shape.width) - textPadding[1] - textPadding[3], 0);\n      var height = Math.max((upperLabelRect ? upperLabelRect.height : rectEl.shape.height) - textPadding[0] - textPadding[2], 0);\n\n      if (textStyle.width !== width || textStyle.height !== height) {\n        textEl.setStyle({\n          width: width,\n          height: height\n        });\n      }\n    };\n\n    textStyle.truncateMinChar = 2;\n    textStyle.lineOverflow = 'truncate';\n    addDrillDownIcon(textStyle, upperLabelRect, thisLayout);\n    var textEmphasisState = textEl.getState('emphasis');\n    addDrillDownIcon(textEmphasisState ? textEmphasisState.style : null, upperLabelRect, thisLayout);\n  }\n\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\n    var text = style ? style.text : null;\n\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      style.text = iconChar ? iconChar + ' ' + text : text;\n    }\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor();\n\n        if (element instanceof Displayable) {\n          element.z2 = calculateZ2(depth, z);\n        }\n\n        prepareAnimationWhenNoOld(lasts, element);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n\n    if (element instanceof Group) {\n      lastCfg.oldX = element.x;\n      lastCfg.oldY = element.y;\n    } else {\n      lastCfg.oldShape = extend({}, element.shape);\n    }\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n    var isGroup = element instanceof graphic.Group;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.oldShape) {\n        parentOldX = parentOldBg.oldShape.width;\n        parentOldY = parentOldBg.oldShape.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      if (isGroup) {\n        lastCfg.oldX = 0;\n        lastCfg.oldY = parentOldY;\n      } else {\n        lastCfg.oldShape = {\n          x: parentOldX,\n          y: parentOldY,\n          width: 0,\n          height: 0\n        };\n      }\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = !isGroup;\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ2(depth, z2InLevel) {\n  return depth * Z2_BASE + z2InLevel;\n}\n\nexport default TreemapView;"],"names":["Group","graphic","Rect","PATH_LABEL_NOAMAL","PATH_UPPERLABEL_NORMAL","Z2_BASE","Z2_EMPHASIS_LIFT","Z2_BG","Z2_CONTENT","getStateItemStyle","makeStyleMapper","getItemStyleNormal","model","itemStyle","stroke","fill","lineWidth","inner","makeInner","TreemapView","_super","_this","apply","this","arguments","type","_state","_storage","nodeGroup","background","content","__extends","prototype","render","seriesModel","ecModel","api","payload","models","findComponents","mainType","subType","query","indexOf","targetInfo","helper","payloadType","layoutInfo","isInit","_oldTree","thisStorage","reRoot","rootNodeGroup","node","getRawIndex","direction","containerGroup","_giveContainerGroup","hasAnimation","get","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","_containerGroup","_initEvents","group","add","x","y","thisTree","getData","tree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","thisNode","oldNode","parentGroup","depth","thisLayout","getLayout","data","nodeModel","getModel","setItemGraphicEl","dataIndex","isInView","thisWidth","width","thisHeight","height","borderWidth","thisInvisible","invisible","thisRawIndex","oldRawIndex","thisViewChildren","viewChildren","upperHeight","isParent","length","itemStyleNormalModel","itemStyleEmphasisModel","itemStyleBlurModel","itemStyleSelectModel","borderRadius","giveGraphic","markRedraw","nodeWidth","nodeHeight","isAboveViewRoot","bg","useUpperLabel","ecData","getECData","seriesIndex","setShape","r","processInvisible","style","getVisual","visualBorderColor","normalStyle","emphasisStyle","blurStyle","selectStyle","upperLabelWidth","prepareText","opacity","removeTextContent","setStyle","ensureState","setDefaultStateProxy","renderBackground","upperLabelHeight","emphasisModel","focus","blurScope","isDisabled","focusOrIndices","getAncestorsIndices","getDescendantIndices","isHighDownDispatcher","setAsHighDownDispatcher","enableHoverFocus","contentWidth","Math","max","contentHeight","culling","nodeStyle","visualColor","decal","renderContent","disableMorphing","element","push","rectEl","visualOpacity","upperLabelRect","normalLabelModel","defaultText","convertOptionIdName","isShow","getShallow","setLabelStyle","getLabelStatesModels","inheritColor","defaultOpacity","labelFetcher","labelDataIndex","textEl","getTextContent","textStyle","textPadding","normalizeCssArray","padding","setTextConfig","layoutRect","disableLabelLayout","beforeUpdate","shape","truncateMinChar","lineOverflow","addDrillDownIcon","textEmphasisState","getState","text","isLeafRoot","iconChar","storageName","Ctor","z","lasts","lastCfg","oldX","oldY","oldShape","extend","prepareAnimationWhenHasOld","Displayable","z2","z2InLevel","calculateZ2","parentNode","isGroup","parentOldX","parentOldY","parentOldBg","fadein","prepareAnimationWhenNoOld","renderNode","dualTravel","oldViewChildren","sameTree","getKey","getId","processNode","newIndex","oldIndex","each","child","index","isRemoved","DataDiffer","update","remove","curry","execute","root","willDeleteEls","storage","store","delEls","el","willDelete","clearStorage","els","parent","dirty","durationOption","easingOption","duration","isFunction","easing","animationWrap","animationUtil","rawIndex","target","innerStore","targetX","targetY","last","finished","bind","start","controller","_controller","RoamController","getZr","enable","on","_onPan","_onZoom","rect","BoundingRect","getWidth","getHeight","setPointerChecker","e","contain","_clearController","dispose","abs","dx","dy","rootLayout","dispatchAction","from","uid","seriesId","id","rootRect","mouseX","originX","mouseY","originY","m","matrix","scale","applyTransform","nodeClick","findTarget","offsetX","offsetY","_rootToNode","_zoomToNode","itemModel","hostTree","getItemModel","link","linkTarget","windowOpen","getViewRoot","_breadcrumb","Breadcrumb","removeAll","targetNode","eachNode","attr","order","bgEl","point","transformCoordToLocal","ChartView"],"sourceRoot":""}