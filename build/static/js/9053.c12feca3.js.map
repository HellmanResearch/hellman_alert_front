{"version":3,"file":"static/js/9053.c12feca3.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/line/LineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // FIXME step not support polar\n\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport lineAnimationDiff from './lineAnimationDiff.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as modelUtil from '../../util/model.js';\nimport { ECPolyline, ECPolygon } from './poly.js';\nimport ChartView from '../../view/Chart.js';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { setStatesStylesFromModel, setStatesFlag, toggleHoverEmphasis, SPECIAL_STATES } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createFloat32Array } from '../../util/vendor.js';\nimport { convertToColorString } from '../../util/format.js';\nimport { lerp } from 'zrender/lib/tool/color.js';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return zrUtil.isNumber(smooth) ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt, connectNulls) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n  var filteredPoints = [];\n\n  if (connectNulls) {\n    for (i = 0; i < points.length; i += 2) {\n      if (!isNaN(points[i]) && !isNaN(points[i + 1])) {\n        filteredPoints.push(points[i], points[i + 1]);\n      }\n    }\n\n    points = filteredPoints;\n  }\n\n  for (i = 0; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n/**\n * Clip color stops to edge. Avoid creating too large gradients.\n * Which may lead to blurry when GPU acceleration is enabled. See #15680\n *\n * The stops has been sorted from small to large.\n */\n\n\nfunction clipColorStops(colorStops, maxSize) {\n  var newColorStops = [];\n  var len = colorStops.length; // coord will always < 0 in prevOutOfRangeColorStop.\n\n  var prevOutOfRangeColorStop;\n  var prevInRangeColorStop;\n\n  function lerpStop(stop0, stop1, clippedCoord) {\n    var coord0 = stop0.coord;\n    var p = (clippedCoord - coord0) / (stop1.coord - coord0);\n    var color = lerp(p, [stop0.color, stop1.color]);\n    return {\n      coord: clippedCoord,\n      color: color\n    };\n  }\n\n  for (var i = 0; i < len; i++) {\n    var stop_1 = colorStops[i];\n    var coord = stop_1.coord;\n\n    if (coord < 0) {\n      prevOutOfRangeColorStop = stop_1;\n    } else if (coord > maxSize) {\n      if (prevInRangeColorStop) {\n        newColorStops.push(lerpStop(prevInRangeColorStop, stop_1, maxSize));\n      } else if (prevOutOfRangeColorStop) {\n        // If there are two stops and coord range is between these two stops\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0), lerpStop(prevOutOfRangeColorStop, stop_1, maxSize));\n      } // All following stop will be out of range. So just ignore them.\n\n\n      break;\n    } else {\n      if (prevOutOfRangeColorStop) {\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0)); // Reset\n\n        prevOutOfRangeColorStop = null;\n      }\n\n      newColorStops.push(stop_1);\n      prevInRangeColorStop = stop_1;\n    }\n  }\n\n  return newColorStops;\n}\n\nfunction getVisualGradient(data, coordSys, api) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimInfo = data.getDimensionInfo(visualMetaList[i].dimension);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    // offset will be calculated later.\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var colorStopsInRange = clipColorStops(colorStops, coordDim === 'x' ? api.getWidth() : api.getHeight());\n  var inRangeStopLen = colorStopsInRange.length;\n\n  if (!inRangeStopLen && stopLen) {\n    // All stops are out of range. All will be the same color.\n    return colorStops[0].coord < 0 ? outerColors[1] ? outerColors[1] : colorStops[stopLen - 1].color : outerColors[0] ? outerColors[0] : colorStops[0].color;\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStopsInRange[0].coord - tinyExtent;\n  var maxCoord = colorStopsInRange[inRangeStopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStopsInRange, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStopsInRange.push({\n    // NOTE: inRangeStopLen may still be 0 if stoplen is zero.\n    offset: inRangeStopLen ? colorStopsInRange[inRangeStopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStopsInRange.unshift({\n    offset: inRangeStopLen ? colorStopsInRange[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  });\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStopsInRange, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction anyStateShowEndLabel(seriesModel) {\n  if (seriesModel.get(['endLabel', 'show'])) {\n    return true;\n  }\n\n  for (var i = 0; i < SPECIAL_STATES.length; i++) {\n    if (seriesModel.get([SPECIAL_STATES[i], 'endLabel', 'show'])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = anyStateShowEndLabel(seriesModel) ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\n\nvar LineView =\n/** @class */\nfunction (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var connectNulls = seriesModel.get('connectNulls');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys, api) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // If areaStyle is removed\n      else if (polygon) {\n          lineGroup.remove(polygon);\n          polygon = this._polygon = null;\n        } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      } // Update clipPath\n\n\n      var oldClipPath = lineGroup.getClipPath();\n\n      if (oldClipPath) {\n        var newClipPath = createLineClipPath(this, coordSys, false, seriesModel);\n        graphic.initProps(oldClipPath, {\n          shape: newClipPath.shape\n        }, seriesModel);\n      } else {\n        lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n      } // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var emphasisModel = seriesModel.getModel('emphasis');\n    var focus = emphasisModel.get('focus');\n    var blurScope = emphasisModel.get('blurScope');\n    var emphasisDisabled = emphasisModel.get('disabled');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    toggleHoverEmphasis(polyline, focus, blurScope, emphasisDisabled);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      toggleHoverEmphasis(polygon, focus, blurScope, emphasisDisabled);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n\n    if (seriesModel.get('triggerLineEvent')) {\n      this.packEventData(seriesModel, polyline);\n      polygon && this.packEventData(seriesModel, polygon);\n    }\n  };\n\n  LineView.prototype.packEventData = function (seriesModel, el) {\n    getECData(el).eventData = {\n      componentType: 'series',\n      componentSubType: 'line',\n      componentIndex: seriesModel.componentIndex,\n      seriesIndex: seriesModel.seriesIndex,\n      seriesName: seriesModel.name,\n      seriesType: 'line'\n    };\n  };\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        var zlevel = seriesModel.get('zlevel') || 0;\n        var z = seriesModel.get('z') || 0;\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (zrUtil.isFunction(seriesDuration)) {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = zrUtil.isFunction(seriesDalay) ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = zrUtil.isFunction(seriesDalay) ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          setToFinal: true,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (anyStateShowEndLabel(seriesModel)) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline; // series may be filtered.\n\n      var points = data_2.getLayout('points');\n\n      if (!points) {\n        polyline.removeTextContent();\n        this._endLabel = null;\n        return;\n      }\n\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n\n      var dataIndex = getLastIndexNotNull(points);\n\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step, connectNulls);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step, connectNulls);\n      next = turnPointsIntoStep(diff.next, coordSys, step, connectNulls);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step, connectNulls);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.stopAnimation();\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.stopAnimation();\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nexport default LineView;"],"names":["isPointsSame","points1","points2","length","i","bboxFromPoints","points","minX","Infinity","minY","maxX","maxY","x","y","isNaN","Math","min","max","getBoundingDiff","_a","min1","max1","_b","min2","max2","abs","getSmooth","smooth","zrUtil","turnPointsIntoStep","coordSys","stepTurnAt","connectNulls","baseAxis","getBaseAxis","baseIndex","dim","stepPoints","stepPt","pt","nextPt","filteredPoints","push","middle","stepPt2","getVisualGradient","data","api","visualMetaList","getVisual","count","type","coordDim","visualMeta","dimInfo","getDimensionInfo","dimension","axis","getAxis","colorStops","stops","stop","coord","toGlobalCoord","dataToCoord","value","color","stopLen","outerColors","slice","reverse","colorStopsInRange","maxSize","prevOutOfRangeColorStop","prevInRangeColorStop","newColorStops","len","lerpStop","stop0","stop1","clippedCoord","coord0","p","lerp","stop_1","clipColorStops","getWidth","getHeight","inRangeStopLen","minCoord","maxCoord","coordSpan","offset","unshift","gradient","graphic","getIsIgnoreFunc","seriesModel","showAllSymbol","get","isAuto","categoryAxis","getAxesByScale","axisExtent","getExtent","availSize","scale","dataLen","step","round","dataIndex","SymbolClz","isHorizontal","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","ordinalNumber","getRawOrdinalNumber","tickValue","hasOwnProperty","getPointAtIndex","idx","anyStateShowEndLabel","SPECIAL_STATES","createLineClipPath","lineView","hasAnimation","isCoordinateSystemType","endLabelModel_1","getModel","valueAnimation_1","data_1","getData","labelAnimationRecord_1","lastFrameIndex","during","percent","clipRect","_endLabelOnDuring","clipPath","createGridClipPath","endLabel","_endLabel","originalX","attr","originalY","rectShape","shape","expandSize","width","height","createPolarClipPath","LineView","_super","apply","this","arguments","__extends","prototype","init","lineGroup","symbolDraw","SymbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","_this","coordinateSystem","lineStyleModel","areaStyleModel","getLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","dataCoordInfo","prepareDataCoordInfo","stackedOnPoints","valueDim","createFloat32Array","getStackedOnPoint","getStackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","clipShapeForSymbol","getArea","r0","r","_clipShapeForSymbol","visualColor","_step","_newPolygon","_initOrUpdateEndLabel","convertToColorString","oldClipPath","getClipPath","newClipPath","setClipPath","updateData","isIgnore","clipShape","disableAnimation","getSymbolPoint","_stackedOnPoints","_points","_doUpdateAnimation","setShape","_initSymbolLabelAnimation","_newPolyline","emphasisModel","focus","blurScope","emphasisDisabled","useStyle","getLineStyle","fill","stroke","lineJoin","setStatesStylesFromModel","style","lineWidth","getState","getECData","seriesIndex","toggleHoverEmphasis","smoothMonotone","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","decal","changePolyState","toState","_changePolyState","onHoverStateChange","_valueOrigin","packEventData","eventData","componentType","componentSubType","componentIndex","seriesName","name","seriesType","highlight","payload","modelUtil","Array","symbol","getItemGraphicEl","contain","zlevel","z","setZ","symbolLabel","getSymbolPath","getTextContent","z2","stopSymbolAnimation","ChartView","downplay","setStatesFlag","ECPolyline","segmentIgnoreThreshold","ECPolygon","isHorizontalOrRadial","isAxisInverse","inverse","hostModel","seriesDuration","seriesDalay","seriesDalayValue","point","start","end","current","polarClip","pointToCoord","startAngle","endAngle","PI","gridClip","ratio","delay","symbolPath","text","scaleX","scaleY","animateTo","duration","setToFinal","animateFrom","disableLabelAnimation","inheritColor","endLabelModel","data_2","removeTextContent","ignoreClip","setTextContent","getLastIndexNotNull","setLabelStyle","getLabelStatesModels","labelFetcher","labelDataIndex","defaultText","opt","interpolatedValue","getDefaultInterpolatedLabel","getDefaultLabel","enableTextSetter","isBaseInversed","align","verticalAlign","normal","getEndLabelStateSpecified","textConfig","position","animationRecord","valueAnimation","precision","distance","xOrY","distanceX","distanceY","dataIndexRange","a","b","dimIdx","prevIndex","nextIndex","range","t","getIndexRange","indices","diff","getRawValue","getPointOn","startValue","endValue","labelInner","setLabelText","lineAnimationDiff","stackedOnCurrent","next","stackedOnNext","stopAnimation","__points","target","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","dirtyShape","markRedraw","removeAll"],"sourceRoot":""}