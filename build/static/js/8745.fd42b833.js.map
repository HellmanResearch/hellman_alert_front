{"version":3,"file":"static/js/8745.fd42b833.js","mappings":"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","sources":["../node_modules/echarts/lib/component/geo/GeoView.js","../node_modules/echarts/lib/component/geo/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport MapDraw from '../helper/MapDraw.js';\nimport ComponentView from '../../view/Component.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { findEventDispatcher } from '../../util/event.js';\n\nvar GeoView =\n/** @class */\nfunction (_super) {\n  __extends(GeoView, _super);\n\n  function GeoView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GeoView.type;\n    _this.focusBlurEnabled = true;\n    return _this;\n  }\n\n  GeoView.prototype.init = function (ecModel, api) {\n    this._api = api;\n  };\n\n  GeoView.prototype.render = function (geoModel, ecModel, api, payload) {\n    this._model = geoModel;\n\n    if (!geoModel.get('show')) {\n      this._mapDraw && this._mapDraw.remove();\n      this._mapDraw = null;\n      return;\n    }\n\n    if (!this._mapDraw) {\n      this._mapDraw = new MapDraw(api);\n    }\n\n    var mapDraw = this._mapDraw;\n    mapDraw.draw(geoModel, ecModel, api, this, payload);\n    mapDraw.group.on('click', this._handleRegionClick, this);\n    mapDraw.group.silent = geoModel.get('silent');\n    this.group.add(mapDraw.group);\n    this.updateSelectStatus(geoModel, ecModel, api);\n  };\n\n  GeoView.prototype._handleRegionClick = function (e) {\n    var eventData;\n    findEventDispatcher(e.target, function (current) {\n      return (eventData = getECData(current).eventData) != null;\n    }, true);\n\n    if (eventData) {\n      this._api.dispatchAction({\n        type: 'geoToggleSelect',\n        geoId: this._model.id,\n        name: eventData.name\n      });\n    }\n  };\n\n  GeoView.prototype.updateSelectStatus = function (model, ecModel, api) {\n    var _this = this;\n\n    this._mapDraw.group.traverse(function (node) {\n      var eventData = getECData(node).eventData;\n\n      if (eventData) {\n        _this._model.isSelected(eventData.name) ? api.enterSelect(node) : api.leaveSelect(node); // No need to traverse children.\n\n        return true;\n      }\n    });\n  };\n\n  GeoView.prototype.findHighDownDispatchers = function (name) {\n    return this._mapDraw && this._mapDraw.findHighDownDispatchers(name, this._model);\n  };\n\n  GeoView.prototype.dispose = function () {\n    this._mapDraw && this._mapDraw.remove();\n  };\n\n  GeoView.type = 'geo';\n  return GeoView;\n}(ComponentView);\n\nexport default GeoView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport GeoModel from '../../coord/geo/GeoModel.js';\nimport geoCreator from '../../coord/geo/geoCreator.js';\nimport { each } from 'zrender/lib/core/util.js';\nimport { updateCenterAndZoom } from '../../action/roamHelper.js';\nimport GeoView from './GeoView.js';\nimport geoSourceManager from '../../coord/geo/geoSourceManager.js';\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  geoSourceManager.registerMap(mapName, geoJson, specialAreas);\n}\n\nexport function install(registers) {\n  registers.registerCoordinateSystem('geo', geoCreator);\n  registers.registerComponentModel(GeoModel);\n  registers.registerComponentView(GeoView);\n  registers.registerImpl('registerMap', registerMap);\n  registers.registerImpl('getMap', function (mapName) {\n    return geoSourceManager.getMapForUser(mapName);\n  });\n\n  function makeAction(method, actionInfo) {\n    actionInfo.update = 'geo:updateSelectStatus';\n    registers.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      var allSelected = [];\n      ecModel.eachComponent({\n        mainType: 'geo',\n        query: payload\n      }, function (geoModel) {\n        geoModel[method](payload.name);\n        var geo = geoModel.coordinateSystem;\n        each(geo.regions, function (region) {\n          selected[region.name] = geoModel.isSelected(region.name) || false;\n        }); // Notice: there might be duplicated name in different regions.\n\n        var names = [];\n        each(selected, function (v, name) {\n          selected[name] && names.push(name);\n        });\n        allSelected.push({\n          geoIndex: geoModel.componentIndex,\n          // Use singular, the same naming convention as the event `selectchanged`.\n          name: names\n        });\n      });\n      return {\n        selected: selected,\n        allSelected: allSelected,\n        name: payload.name\n      };\n    });\n  }\n\n  makeAction('toggleSelected', {\n    type: 'geoToggleSelect',\n    event: 'geoselectchanged'\n  });\n  makeAction('select', {\n    type: 'geoSelect',\n    event: 'geoselected'\n  });\n  makeAction('unSelect', {\n    type: 'geoUnSelect',\n    event: 'geounselected'\n  });\n  /**\n   * @payload\n   * @property {string} [componentType=series]\n   * @property {number} [dx]\n   * @property {number} [dy]\n   * @property {number} [zoom]\n   * @property {number} [originX]\n   * @property {number} [originY]\n   */\n\n  registers.registerAction({\n    type: 'geoRoam',\n    event: 'geoRoam',\n    update: 'updateTransform'\n  }, function (payload, ecModel, api) {\n    var componentType = payload.componentType || 'series';\n    ecModel.eachComponent({\n      mainType: componentType,\n      query: payload\n    }, function (componentModel) {\n      var geo = componentModel.coordinateSystem;\n\n      if (geo.type !== 'geo') {\n        return;\n      }\n\n      var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'), api);\n      componentModel.setCenter && componentModel.setCenter(res.center);\n      componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n      // So the center and zoom must be in sync. Include the series not selected by legend\n\n      if (componentType === 'series') {\n        each(componentModel.seriesGroup, function (seriesModel) {\n          seriesModel.setCenter(res.center);\n          seriesModel.setZoom(res.zoom);\n        });\n      }\n    });\n  });\n}"],"names":["GeoView","_super","_this","apply","this","arguments","type","focusBlurEnabled","__extends","prototype","init","ecModel","api","_api","render","geoModel","payload","_model","get","_mapDraw","remove","MapDraw","mapDraw","draw","group","on","_handleRegionClick","silent","add","updateSelectStatus","e","eventData","findEventDispatcher","target","current","getECData","dispatchAction","geoId","id","name","model","traverse","node","isSelected","enterSelect","leaveSelect","findHighDownDispatchers","dispose","ComponentView","registerMap","mapName","geoJson","specialAreas","geoSourceManager","install","registers","makeAction","method","actionInfo","update","registerAction","selected","allSelected","eachComponent","mainType","query","geo","coordinateSystem","each","regions","region","names","v","push","geoIndex","componentIndex","registerCoordinateSystem","geoCreator","registerComponentModel","GeoModel","registerComponentView","registerImpl","event","componentType","componentModel","res","updateCenterAndZoom","setCenter","center","setZoom","zoom","seriesGroup","seriesModel"],"sourceRoot":""}