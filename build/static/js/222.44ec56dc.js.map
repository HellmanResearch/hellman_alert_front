{"version":3,"file":"static/js/222.44ec56dc.js","mappings":"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","sources":["../node_modules/echarts/lib/component/tooltip/TooltipView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport { bind, each, clone, trim, isString, isFunction, isArray, isObject, extend } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport TooltipHTMLContent from './TooltipHTMLContent.js';\nimport TooltipRichContent from './TooltipRichContent.js';\nimport { convertToColorString, formatTpl } from '../../util/format.js';\nimport { parsePercent } from '../../util/number.js';\nimport { Rect } from '../../util/graphic.js';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport Model from '../../model/Model.js';\nimport * as globalListener from '../axisPointer/globalListener.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper.js';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model.js';\nimport ComponentView from '../../view/Component.js';\nimport { format as timeFormat } from '../../util/time.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { shouldTooltipConfine } from './helper.js';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat.js';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup.js';\nimport { findEventDispatcher } from '../../util/event.js';\nimport { clear, createOrUpdate } from '../../util/throttle.js';\nvar proxyRect = new Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = this._renderMode = getTooltipRenderMode(tooltipModel.get('renderMode'));\n    this._tooltipContent = renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow(); // PENDING\n    // `mousemove` event will be triggered very frequently when the mouse moves fast,\n    // which causes that the `updatePosition` function was also called frequently.\n    // In Chrome with devtools open and Firefox, tooltip looks laggy and shakes. See #14695 #16101\n    // To avoid frequent triggering,\n    // consider throttling it in 50ms when transition is enabled\n\n\n    if (this._renderMode !== 'richText' && tooltipModel.get('transitionDuration')) {\n      createOrUpdate(this, '_updatePosition', 50, 'fixRate');\n    } else {\n      clear(this, '_updatePosition');\n    }\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api;\n    var triggerOn = tooltipModel.get('triggerOn'); // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && triggerOn !== 'none' && triggerOn !== 'click') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node || !api.getDom()) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex); // Can't find data.\n\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n          var frag = seriesTooltipResult.frag;\n\n          if (frag) {\n            var valueFormatter = buildTooltipModel([series], globalTooltipModel).get('valueFormatter');\n            axisSectionMarkup.blocks.push(valueFormatter ? extend({\n              valueFormatter: valueFormatter\n            }, frag) : frag);\n          }\n\n          if (seriesTooltipResult.text) {\n            markupTextArrLegacy.push(seriesTooltipResult.text);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var valueFormatter = tooltipModel.get('valueFormatter');\n    var frag = seriesTooltipResult.frag;\n    var markupText = frag ? buildTooltipMarkup(valueFormatter ? extend({\n      valueFormatter: valueFormatter\n    }, frag) : frag, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.text;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n\n    if (isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var tooltipModelCascade = [tooltipOpt];\n\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = clone(subTooltipModel.get('formatterParams') || {});\n\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    var nearPointColor = nearPoint.color;\n\n    if (formatter) {\n      if (isString(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = isArray(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n\n        if (isTimeAxis) {\n          html = timeFormat(params0.axisValue, html, useUTC);\n        }\n\n        html = formatTpl(html, params, true);\n      } else if (isFunction(formatter)) {\n        var callback = bind(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (isString(positionExpr) && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        }); // check is cbParams data value changed\n\n        lastCbParamsList && each(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n\n    clear(this, '_updatePosition');\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n\n  if (!model) {\n    return;\n  }\n\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\n\nexport default TooltipView;"],"names":["proxyRect","Rect","shape","x","y","width","height","TooltipView","_super","_this","apply","this","arguments","type","__extends","prototype","init","ecModel","api","env","getDom","tooltipModel","getComponent","renderMode","_renderMode","getTooltipRenderMode","get","_tooltipContent","TooltipRichContent","TooltipHTMLContent","appendToBody","render","group","removeAll","_tooltipModel","_ecModel","_api","_alwaysShowContent","tooltipContent","update","setEnterable","_initGlobalListener","_keepShow","createOrUpdate","clear","triggerOn","globalListener","bind","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self_1","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","dataByCoordSys","_lastDataByCoordSys","payload","from","uid","makeDispatchAction","_ticket","cmptRef","queryOptionMap","preParseFinder","componentMainType","keys","el","model","queryReferringComponents","useDefault","enableAll","enableNone","models","getViewOfComponentModel","traverse","subEl","tooltipConfig","getECData","name","componentIndex","findComponentReference","rect","getBoundingRect","clone","applyTransform","transform","offsetX","offsetY","target","position","positionDefault","tooltip","option","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","findPointFromSeries","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","buildTooltipModel","getData","getItemModel","coordinateSystem","length","_showAxisTooltip","seriesDispatcher_1","cmptDispatcher_1","findEventDispatcher","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleTooltipModel","cbParamsList","articleMarkup","createTooltipMarkup","blocks","noHeader","markupTextArrLegacy","markupStyleCreator","TooltipMarkupStyleCreator","each","itemCoordSys","dataByAxis","axisItem","axisModel","axisDim","axisIndex","axisValue","value","axisValueLabel","axisPointerViewHelper","axis","seriesDataIndices","valueLabelOpt","axisSectionMarkup","header","trim","sortBlocks","push","idxItem","series","dataIndexInside","cbParams","getDataParams","axisType","axisId","axisHelper","marker","makeTooltipMarker","convertToColorString","color","seriesTooltipResult","normalizeTooltipFormatResult","formatTooltip","frag","valueFormatter","extend","text","reverse","positionExpr","orderMode","builtMarkupText","buildTooltipMarkup","unshift","blockBreak","allMarkupText","join","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","dispatcher","ecData","dataModel","dataType","data","tooltipTrigger","params","markupText","asyncTicket","getRawIndex","tooltipOpt","isString","content","formatter","tooltipModelCascade","cmpt","subTooltipModel","defaultHtml","formatterParams","html","nearPointColor","_getNearestPoint","useUTC","params0","isArray","timeFormat","formatTpl","isFunction","callback","cbTicket","setContent","show","tooltipDataParams","trigger","borderColor","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","viewSize","slice","parsePercent","isObject","boxLayoutPosition","layoutRect","getLayoutRect","pos","borderWidth","domWidth","domHeight","offset","ceil","SQRT2","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","size","refixTooltipPosition","isCenterAlign","shouldTooltipConfine","min","max","confineTooltipPosition","moveTo","lastCoordSys","lastCbParamsList","_cbParamsList","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","seriesIdx","lastCbParams","dispose","ComponentView","modelCascade","defaultTooltipOption","resultModel","Model","i"],"sourceRoot":""}