{"version":3,"file":"static/js/4259.77160bb6.js","mappings":"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","sources":["../node_modules/echarts/lib/coord/parallel/AxisModel.js","../node_modules/echarts/lib/coord/parallel/ParallelModel.js","../node_modules/echarts/lib/coord/parallel/ParallelAxis.js","../node_modules/echarts/lib/coord/parallel/Parallel.js","../node_modules/echarts/lib/coord/parallel/parallelCreator.js","../node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport ComponentModel from '../../model/Component.js';\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper.js';\nimport * as numberUtil from '../../util/number.js';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin.js';\n\nvar ParallelAxisModel =\n/** @class */\nfunction (_super) {\n  __extends(ParallelAxisModel, _super);\n\n  function ParallelAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelAxisModel.type;\n    /**\n     * @readOnly\n     */\n\n    _this.activeIntervals = [];\n    return _this;\n  }\n\n  ParallelAxisModel.prototype.getAreaSelectStyle = function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\n    // So do not transfer decal directly.\n    ])(this.getModel('areaSelectStyle'));\n  };\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param intervals `interval.length === 0` means set all active.\n   */\n\n\n  ParallelAxisModel.prototype.setActiveIntervals = function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  };\n  /**\n   * @param value When only attempting detect whether 'no activeIntervals set',\n   *        `value` is not needed to be input.\n   */\n\n\n  ParallelAxisModel.prototype.getActiveState = function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(+value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  };\n\n  return ParallelAxisModel;\n}(ComponentModel);\n\nzrUtil.mixin(ParallelAxisModel, AxisModelCommonMixin);\nexport default ParallelAxisModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport ComponentModel from '../../model/Component.js';\n\nvar ParallelModel =\n/** @class */\nfunction (_super) {\n  __extends(ParallelModel, _super);\n\n  function ParallelModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelModel.type;\n    return _this;\n  }\n\n  ParallelModel.prototype.init = function () {\n    _super.prototype.init.apply(this, arguments);\n\n    this.mergeOption({});\n  };\n\n  ParallelModel.prototype.mergeOption = function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  };\n  /**\n   * Whether series or axis is in this coordinate system.\n   */\n\n\n  ParallelModel.prototype.contains = function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  };\n\n  ParallelModel.prototype.setAxisExpand = function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        // @ts-ignore FIXME: why \"never\" inferred in this.option[name]?\n        this.option[name] = opt[name];\n      }\n    }, this);\n  };\n\n  ParallelModel.prototype._initDimensions = function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.ecModel.queryComponents({\n      mainType: 'parallelAxis'\n    }), function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  };\n\n  ParallelModel.type = 'parallel';\n  ParallelModel.dependencies = ['parallelAxis'];\n  ParallelModel.layoutMode = 'box';\n  ParallelModel.defaultOption = {\n    // zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    parallelAxisDefault: null\n  };\n  return ParallelModel;\n}(ComponentModel);\n\nexport default ParallelModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Axis from '../Axis.js';\n\nvar ParallelAxis =\n/** @class */\nfunction (_super) {\n  __extends(ParallelAxis, _super);\n\n  function ParallelAxis(dim, scale, coordExtent, axisType, axisIndex) {\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\n\n    _this.type = axisType || 'value';\n    _this.axisIndex = axisIndex;\n    return _this;\n  }\n\n  ParallelAxis.prototype.isHorizontal = function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  };\n\n  return ParallelAxis;\n}(Axis);\n\nexport default ParallelAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport ParallelAxis from './ParallelAxis.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as numberUtil from '../../util/number.js';\nimport sliderMove from '../../component/helper/sliderMove.js';\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nvar Parallel =\n/** @class */\nfunction () {\n  function Parallel(parallelModel, ecModel, api) {\n    this.type = 'parallel';\n    /**\n     * key: dimension\n     */\n\n    this._axesMap = zrUtil.createHashMap();\n    /**\n     * key: dimension\n     * value: {position: [], rotation, }\n     */\n\n    this._axesLayout = {};\n    this.dimensions = parallelModel.dimensions;\n    this._model = parallelModel;\n\n    this._init(parallelModel, ecModel, api);\n  }\n\n  Parallel.prototype._init = function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  };\n  /**\n   * Update axis scale after data processed\n   */\n\n\n  Parallel.prototype.update = function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  };\n\n  Parallel.prototype.containPoint = function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  };\n\n  Parallel.prototype.getModel = function () {\n    return this._model;\n  };\n  /**\n   * Update properties from series\n   */\n\n\n  Parallel.prototype._updateAxesFromSeries = function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  };\n  /**\n   * Resize the parallel coordinate system.\n   */\n\n\n  Parallel.prototype.resize = function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  };\n\n  Parallel.prototype.getRect = function () {\n    return this._rect;\n  };\n\n  Parallel.prototype._makeLayoutInfo = function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  };\n\n  Parallel.prototype._layoutAxes = function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick layout info\n      // TODO\n      // update dimensions info based on axis order.\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  };\n  /**\n   * Get axis by dim.\n   */\n\n\n  Parallel.prototype.getAxis = function (dim) {\n    return this._axesMap.get(dim);\n  };\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   */\n\n\n  Parallel.prototype.dataToPoint = function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  };\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param start the start dataIndex that travel from.\n   * @param end the next dataIndex of the last dataIndex will be travel.\n   */\n\n\n  Parallel.prototype.eachActiveState = function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState = void 0;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  };\n  /**\n   * Whether has any activeSet.\n   */\n\n\n  Parallel.prototype.hasAxisBrushed = function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  };\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   */\n\n\n  Parallel.prototype.axisCoordToPoint = function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  };\n  /**\n   * Get axis layout.\n   */\n\n\n  Parallel.prototype.getAxisLayout = function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  };\n  /**\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n\n\n  Parallel.prototype.getSlidedAxisExpandWindow = function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize2 = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize2;\n        axisExpandWindow = [mathMax(0, pos - winSize2 / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize2);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize2;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  };\n\n  return Parallel;\n}();\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nexport default Parallel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nimport Parallel from './Parallel.js';\nimport { SINGLE_REFERRING } from '../../util/model.js';\n\nfunction createParallelCoordSys(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = seriesModel.getReferringComponents('parallel', SINGLE_REFERRING).models[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nvar parallelCoordSysCreator = {\n  create: createParallelCoordSys\n};\nexport default parallelCoordSysCreator;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as modelUtil from '../../util/model.js';\nexport default function parallelPreprocessor(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}"],"names":["ParallelAxisModel","_super","_this","apply","this","arguments","type","activeIntervals","__extends","prototype","getAreaSelectStyle","makeStyleMapper","getModel","setActiveIntervals","intervals","zrUtil","i","length","numberUtil","getActiveState","value","isNaN","interval","len","ComponentModel","AxisModelCommonMixin","ParallelModel","init","mergeOption","newOption","thisOption","option","_initDimensions","contains","model","ecModel","parallelIndex","get","getComponent","setAxisExpand","opt","name","hasOwnProperty","dimensions","parallelAxisIndex","axisModels","queryComponents","mainType","axisModel","componentIndex","push","dependencies","layoutMode","defaultOption","z","left","top","right","bottom","layout","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","ParallelAxis","dim","scale","coordExtent","axisType","axisIndex","call","isHorizontal","coordinateSystem","Axis","each","mathMin","Math","min","mathMax","max","mathFloor","floor","mathCeil","ceil","round","PI","restrict","extent","layoutAxisWithoutExpand","layoutInfo","step","layoutLength","axisCount","position","axisNameAvailableWidth","axisLabelShow","layoutAxisWithExpand","nameTruncateMaxWidth","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","axisExpandWindow","Parallel","parallelModel","api","_axesMap","_axesLayout","_model","_init","idx","axis","set","axisHelper","isCategory","onBand","inverse","update","_updateAxesFromSeries","containPoint","point","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","eachSeries","seriesModel","data","getData","unionExtentFromData","mapDimension","resize","_rect","layoutUtil","getBoxLayoutParams","width","getWidth","height","getHeight","_layoutAxes","getRect","winSize","rect","xy","wh","layoutExtent","axes","axisExtent","setExtent","posInfo","positionTable","horizontal","x","y","vertical","rotationTable","rotation","transform","matrix","tickDirection","labelDirection","getAxis","dataToPoint","axisCoordToPoint","dataToCoord","eachActiveState","callback","start","end","count","axesMap","dataDimensions","axisDim","hasActiveSet","hasAxisBrushed","dataIndex","activeState","values","getValues","j","lenj","coord","axisLayout","graphic","applyTransform","getAxisLayout","getSlidedAxisExpandWindow","slice","behavior","delta","pointCoord","triggerArea","useJump","sliderMove","winSize2","create","coordSysList","eachComponent","coordSys","getReferringComponents","SINGLE_REFERRING","models","parallelPreprocessor","parallel","hasParallelSeries","series","seriesOpt","createParallelIfNeeded","modelUtil","parallelAxis","axisOption","parallelOption","mergeAxisOptionFromParallel"],"sourceRoot":""}