{"version":3,"file":"static/js/4188.3c37856b.js","mappings":"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","sources":["../node_modules/zrender/lib/canvas/graphic.js","../node_modules/zrender/lib/canvas/helper.js"],"sourcesContent":["import { DEFAULT_COMMON_STYLE } from '../graphic/Displayable.js';\nimport PathProxy from '../core/PathProxy.js';\nimport { createOrUpdateImage, isImageReady } from '../graphic/helper/image.js';\nimport { getCanvasGradient, isClipPathChanged } from './helper.js';\nimport Path from '../graphic/Path.js';\nimport ZRImage from '../graphic/Image.js';\nimport TSpan from '../graphic/TSpan.js';\nimport { RADIAN_TO_DEGREE } from '../core/util.js';\nimport { getLineDash } from './dashStyle.js';\nimport { REDRAW_BIT, SHAPE_CHANGED_BIT } from '../graphic/constants.js';\nimport { DEFAULT_FONT } from '../core/platform.js';\nvar pathProxyForDraw = new PathProxy(true);\nfunction styleHasStroke(style) {\n    var stroke = style.stroke;\n    return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n}\nfunction isValidStrokeFillStyle(strokeOrFill) {\n    return typeof strokeOrFill === 'string' && strokeOrFill !== 'none';\n}\nfunction styleHasFill(style) {\n    var fill = style.fill;\n    return fill != null && fill !== 'none';\n}\nfunction doFillPath(ctx, style) {\n    if (style.fillOpacity != null && style.fillOpacity !== 1) {\n        var originalGlobalAlpha = ctx.globalAlpha;\n        ctx.globalAlpha = style.fillOpacity * style.opacity;\n        ctx.fill();\n        ctx.globalAlpha = originalGlobalAlpha;\n    }\n    else {\n        ctx.fill();\n    }\n}\nfunction doStrokePath(ctx, style) {\n    if (style.strokeOpacity != null && style.strokeOpacity !== 1) {\n        var originalGlobalAlpha = ctx.globalAlpha;\n        ctx.globalAlpha = style.strokeOpacity * style.opacity;\n        ctx.stroke();\n        ctx.globalAlpha = originalGlobalAlpha;\n    }\n    else {\n        ctx.stroke();\n    }\n}\nexport function createCanvasPattern(ctx, pattern, el) {\n    var image = createOrUpdateImage(pattern.image, pattern.__image, el);\n    if (isImageReady(image)) {\n        var canvasPattern = ctx.createPattern(image, pattern.repeat || 'repeat');\n        if (typeof DOMMatrix === 'function'\n            && canvasPattern\n            && canvasPattern.setTransform) {\n            var matrix = new DOMMatrix();\n            matrix.translateSelf((pattern.x || 0), (pattern.y || 0));\n            matrix.rotateSelf(0, 0, (pattern.rotation || 0) * RADIAN_TO_DEGREE);\n            matrix.scaleSelf((pattern.scaleX || 1), (pattern.scaleY || 1));\n            canvasPattern.setTransform(matrix);\n        }\n        return canvasPattern;\n    }\n}\nfunction brushPath(ctx, el, style, inBatch) {\n    var _a;\n    var hasStroke = styleHasStroke(style);\n    var hasFill = styleHasFill(style);\n    var strokePercent = style.strokePercent;\n    var strokePart = strokePercent < 1;\n    var firstDraw = !el.path;\n    if ((!el.silent || strokePart) && firstDraw) {\n        el.createPathProxy();\n    }\n    var path = el.path || pathProxyForDraw;\n    var dirtyFlag = el.__dirty;\n    if (!inBatch) {\n        var fill = style.fill;\n        var stroke = style.stroke;\n        var hasFillGradient = hasFill && !!fill.colorStops;\n        var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n        var hasFillPattern = hasFill && !!fill.image;\n        var hasStrokePattern = hasStroke && !!stroke.image;\n        var fillGradient = void 0;\n        var strokeGradient = void 0;\n        var fillPattern = void 0;\n        var strokePattern = void 0;\n        var rect = void 0;\n        if (hasFillGradient || hasStrokeGradient) {\n            rect = el.getBoundingRect();\n        }\n        if (hasFillGradient) {\n            fillGradient = dirtyFlag\n                ? getCanvasGradient(ctx, fill, rect)\n                : el.__canvasFillGradient;\n            el.__canvasFillGradient = fillGradient;\n        }\n        if (hasStrokeGradient) {\n            strokeGradient = dirtyFlag\n                ? getCanvasGradient(ctx, stroke, rect)\n                : el.__canvasStrokeGradient;\n            el.__canvasStrokeGradient = strokeGradient;\n        }\n        if (hasFillPattern) {\n            fillPattern = (dirtyFlag || !el.__canvasFillPattern)\n                ? createCanvasPattern(ctx, fill, el)\n                : el.__canvasFillPattern;\n            el.__canvasFillPattern = fillPattern;\n        }\n        if (hasStrokePattern) {\n            strokePattern = (dirtyFlag || !el.__canvasStrokePattern)\n                ? createCanvasPattern(ctx, stroke, el)\n                : el.__canvasStrokePattern;\n            el.__canvasStrokePattern = fillPattern;\n        }\n        if (hasFillGradient) {\n            ctx.fillStyle = fillGradient;\n        }\n        else if (hasFillPattern) {\n            if (fillPattern) {\n                ctx.fillStyle = fillPattern;\n            }\n            else {\n                hasFill = false;\n            }\n        }\n        if (hasStrokeGradient) {\n            ctx.strokeStyle = strokeGradient;\n        }\n        else if (hasStrokePattern) {\n            if (strokePattern) {\n                ctx.strokeStyle = strokePattern;\n            }\n            else {\n                hasStroke = false;\n            }\n        }\n    }\n    var scale = el.getGlobalScale();\n    path.setScale(scale[0], scale[1], el.segmentIgnoreThreshold);\n    var lineDash;\n    var lineDashOffset;\n    if (ctx.setLineDash && style.lineDash) {\n        _a = getLineDash(el), lineDash = _a[0], lineDashOffset = _a[1];\n    }\n    var needsRebuild = true;\n    if (firstDraw || (dirtyFlag & SHAPE_CHANGED_BIT)) {\n        path.setDPR(ctx.dpr);\n        if (strokePart) {\n            path.setContext(null);\n        }\n        else {\n            path.setContext(ctx);\n            needsRebuild = false;\n        }\n        path.reset();\n        el.buildPath(path, el.shape, inBatch);\n        path.toStatic();\n        el.pathUpdated();\n    }\n    if (needsRebuild) {\n        path.rebuildPath(ctx, strokePart ? strokePercent : 1);\n    }\n    if (lineDash) {\n        ctx.setLineDash(lineDash);\n        ctx.lineDashOffset = lineDashOffset;\n    }\n    if (!inBatch) {\n        if (style.strokeFirst) {\n            if (hasStroke) {\n                doStrokePath(ctx, style);\n            }\n            if (hasFill) {\n                doFillPath(ctx, style);\n            }\n        }\n        else {\n            if (hasFill) {\n                doFillPath(ctx, style);\n            }\n            if (hasStroke) {\n                doStrokePath(ctx, style);\n            }\n        }\n    }\n    if (lineDash) {\n        ctx.setLineDash([]);\n    }\n}\nfunction brushImage(ctx, el, style) {\n    var image = el.__image = createOrUpdateImage(style.image, el.__image, el, el.onload);\n    if (!image || !isImageReady(image)) {\n        return;\n    }\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = el.getWidth();\n    var height = el.getHeight();\n    var aspect = image.width / image.height;\n    if (width == null && height != null) {\n        width = height * aspect;\n    }\n    else if (height == null && width != null) {\n        height = width / aspect;\n    }\n    else if (width == null && height == null) {\n        width = image.width;\n        height = image.height;\n    }\n    if (style.sWidth && style.sHeight) {\n        var sx = style.sx || 0;\n        var sy = style.sy || 0;\n        ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    }\n    else if (style.sx && style.sy) {\n        var sx = style.sx;\n        var sy = style.sy;\n        var sWidth = width - sx;\n        var sHeight = height - sy;\n        ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    }\n    else {\n        ctx.drawImage(image, x, y, width, height);\n    }\n}\nfunction brushText(ctx, el, style) {\n    var _a;\n    var text = style.text;\n    text != null && (text += '');\n    if (text) {\n        ctx.font = style.font || DEFAULT_FONT;\n        ctx.textAlign = style.textAlign;\n        ctx.textBaseline = style.textBaseline;\n        var lineDash = void 0;\n        var lineDashOffset = void 0;\n        if (ctx.setLineDash && style.lineDash) {\n            _a = getLineDash(el), lineDash = _a[0], lineDashOffset = _a[1];\n        }\n        if (lineDash) {\n            ctx.setLineDash(lineDash);\n            ctx.lineDashOffset = lineDashOffset;\n        }\n        if (style.strokeFirst) {\n            if (styleHasStroke(style)) {\n                ctx.strokeText(text, style.x, style.y);\n            }\n            if (styleHasFill(style)) {\n                ctx.fillText(text, style.x, style.y);\n            }\n        }\n        else {\n            if (styleHasFill(style)) {\n                ctx.fillText(text, style.x, style.y);\n            }\n            if (styleHasStroke(style)) {\n                ctx.strokeText(text, style.x, style.y);\n            }\n        }\n        if (lineDash) {\n            ctx.setLineDash([]);\n        }\n    }\n}\nvar SHADOW_NUMBER_PROPS = ['shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\nvar STROKE_PROPS = [\n    ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n];\nfunction bindCommonProps(ctx, style, prevStyle, forceSetAll, scope) {\n    var styleChanged = false;\n    if (!forceSetAll) {\n        prevStyle = prevStyle || {};\n        if (style === prevStyle) {\n            return false;\n        }\n    }\n    if (forceSetAll || style.opacity !== prevStyle.opacity) {\n        flushPathDrawn(ctx, scope);\n        styleChanged = true;\n        var opacity = Math.max(Math.min(style.opacity, 1), 0);\n        ctx.globalAlpha = isNaN(opacity) ? DEFAULT_COMMON_STYLE.opacity : opacity;\n    }\n    if (forceSetAll || style.blend !== prevStyle.blend) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.globalCompositeOperation = style.blend || DEFAULT_COMMON_STYLE.blend;\n    }\n    for (var i = 0; i < SHADOW_NUMBER_PROPS.length; i++) {\n        var propName = SHADOW_NUMBER_PROPS[i];\n        if (forceSetAll || style[propName] !== prevStyle[propName]) {\n            if (!styleChanged) {\n                flushPathDrawn(ctx, scope);\n                styleChanged = true;\n            }\n            ctx[propName] = ctx.dpr * (style[propName] || 0);\n        }\n    }\n    if (forceSetAll || style.shadowColor !== prevStyle.shadowColor) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.shadowColor = style.shadowColor || DEFAULT_COMMON_STYLE.shadowColor;\n    }\n    return styleChanged;\n}\nfunction bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetAll, scope) {\n    var style = getStyle(el, scope.inHover);\n    var prevStyle = forceSetAll\n        ? null\n        : (prevEl && getStyle(prevEl, scope.inHover) || {});\n    if (style === prevStyle) {\n        return false;\n    }\n    var styleChanged = bindCommonProps(ctx, style, prevStyle, forceSetAll, scope);\n    if (forceSetAll || style.fill !== prevStyle.fill) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        isValidStrokeFillStyle(style.fill) && (ctx.fillStyle = style.fill);\n    }\n    if (forceSetAll || style.stroke !== prevStyle.stroke) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        isValidStrokeFillStyle(style.stroke) && (ctx.strokeStyle = style.stroke);\n    }\n    if (forceSetAll || style.opacity !== prevStyle.opacity) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n    if (el.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var newLineWidth = lineWidth / ((style.strokeNoScale && el.getLineScale) ? el.getLineScale() : 1);\n        if (ctx.lineWidth !== newLineWidth) {\n            if (!styleChanged) {\n                flushPathDrawn(ctx, scope);\n                styleChanged = true;\n            }\n            ctx.lineWidth = newLineWidth;\n        }\n    }\n    for (var i = 0; i < STROKE_PROPS.length; i++) {\n        var prop = STROKE_PROPS[i];\n        var propName = prop[0];\n        if (forceSetAll || style[propName] !== prevStyle[propName]) {\n            if (!styleChanged) {\n                flushPathDrawn(ctx, scope);\n                styleChanged = true;\n            }\n            ctx[propName] = style[propName] || prop[1];\n        }\n    }\n    return styleChanged;\n}\nfunction bindImageStyle(ctx, el, prevEl, forceSetAll, scope) {\n    return bindCommonProps(ctx, getStyle(el, scope.inHover), prevEl && getStyle(prevEl, scope.inHover), forceSetAll, scope);\n}\nfunction setContextTransform(ctx, el) {\n    var m = el.transform;\n    var dpr = ctx.dpr || 1;\n    if (m) {\n        ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n    }\n    else {\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n}\nfunction updateClipStatus(clipPaths, ctx, scope) {\n    var allClipped = false;\n    for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        allClipped = allClipped || clipPath.isZeroArea();\n        setContextTransform(ctx, clipPath);\n        ctx.beginPath();\n        clipPath.buildPath(ctx, clipPath.shape);\n        ctx.clip();\n    }\n    scope.allClipped = allClipped;\n}\nfunction isTransformChanged(m0, m1) {\n    if (m0 && m1) {\n        return m0[0] !== m1[0]\n            || m0[1] !== m1[1]\n            || m0[2] !== m1[2]\n            || m0[3] !== m1[3]\n            || m0[4] !== m1[4]\n            || m0[5] !== m1[5];\n    }\n    else if (!m0 && !m1) {\n        return false;\n    }\n    return true;\n}\nvar DRAW_TYPE_PATH = 1;\nvar DRAW_TYPE_IMAGE = 2;\nvar DRAW_TYPE_TEXT = 3;\nvar DRAW_TYPE_INCREMENTAL = 4;\nfunction canPathBatch(style) {\n    var hasFill = styleHasFill(style);\n    var hasStroke = styleHasStroke(style);\n    return !(style.lineDash\n        || !(+hasFill ^ +hasStroke)\n        || (hasFill && typeof style.fill !== 'string')\n        || (hasStroke && typeof style.stroke !== 'string')\n        || style.strokePercent < 1\n        || style.strokeOpacity < 1\n        || style.fillOpacity < 1);\n}\nfunction flushPathDrawn(ctx, scope) {\n    scope.batchFill && ctx.fill();\n    scope.batchStroke && ctx.stroke();\n    scope.batchFill = '';\n    scope.batchStroke = '';\n}\nfunction getStyle(el, inHover) {\n    return inHover ? (el.__hoverStyle || el.style) : el.style;\n}\nexport function brushSingle(ctx, el) {\n    brush(ctx, el, { inHover: false, viewWidth: 0, viewHeight: 0 }, true);\n}\nexport function brush(ctx, el, scope, isLast) {\n    var m = el.transform;\n    if (!el.shouldBePainted(scope.viewWidth, scope.viewHeight, false, false)) {\n        el.__dirty &= ~REDRAW_BIT;\n        el.__isRendered = false;\n        return;\n    }\n    var clipPaths = el.__clipPaths;\n    var prevElClipPaths = scope.prevElClipPaths;\n    var forceSetTransform = false;\n    var forceSetStyle = false;\n    if (!prevElClipPaths || isClipPathChanged(clipPaths, prevElClipPaths)) {\n        if (prevElClipPaths && prevElClipPaths.length) {\n            flushPathDrawn(ctx, scope);\n            ctx.restore();\n            forceSetStyle = forceSetTransform = true;\n            scope.prevElClipPaths = null;\n            scope.allClipped = false;\n            scope.prevEl = null;\n        }\n        if (clipPaths && clipPaths.length) {\n            flushPathDrawn(ctx, scope);\n            ctx.save();\n            updateClipStatus(clipPaths, ctx, scope);\n            forceSetTransform = true;\n        }\n        scope.prevElClipPaths = clipPaths;\n    }\n    if (scope.allClipped) {\n        el.__isRendered = false;\n        return;\n    }\n    el.beforeBrush && el.beforeBrush();\n    el.innerBeforeBrush();\n    var prevEl = scope.prevEl;\n    if (!prevEl) {\n        forceSetStyle = forceSetTransform = true;\n    }\n    var canBatchPath = el instanceof Path\n        && el.autoBatch\n        && canPathBatch(el.style);\n    if (forceSetTransform || isTransformChanged(m, prevEl.transform)) {\n        flushPathDrawn(ctx, scope);\n        setContextTransform(ctx, el);\n    }\n    else if (!canBatchPath) {\n        flushPathDrawn(ctx, scope);\n    }\n    var style = getStyle(el, scope.inHover);\n    if (el instanceof Path) {\n        if (scope.lastDrawType !== DRAW_TYPE_PATH) {\n            forceSetStyle = true;\n            scope.lastDrawType = DRAW_TYPE_PATH;\n        }\n        bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetStyle, scope);\n        if (!canBatchPath || (!scope.batchFill && !scope.batchStroke)) {\n            ctx.beginPath();\n        }\n        brushPath(ctx, el, style, canBatchPath);\n        if (canBatchPath) {\n            scope.batchFill = style.fill || '';\n            scope.batchStroke = style.stroke || '';\n        }\n    }\n    else {\n        if (el instanceof TSpan) {\n            if (scope.lastDrawType !== DRAW_TYPE_TEXT) {\n                forceSetStyle = true;\n                scope.lastDrawType = DRAW_TYPE_TEXT;\n            }\n            bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetStyle, scope);\n            brushText(ctx, el, style);\n        }\n        else if (el instanceof ZRImage) {\n            if (scope.lastDrawType !== DRAW_TYPE_IMAGE) {\n                forceSetStyle = true;\n                scope.lastDrawType = DRAW_TYPE_IMAGE;\n            }\n            bindImageStyle(ctx, el, prevEl, forceSetStyle, scope);\n            brushImage(ctx, el, style);\n        }\n        else if (el.getTemporalDisplayables) {\n            if (scope.lastDrawType !== DRAW_TYPE_INCREMENTAL) {\n                forceSetStyle = true;\n                scope.lastDrawType = DRAW_TYPE_INCREMENTAL;\n            }\n            brushIncremental(ctx, el, scope);\n        }\n    }\n    if (canBatchPath && isLast) {\n        flushPathDrawn(ctx, scope);\n    }\n    el.innerAfterBrush();\n    el.afterBrush && el.afterBrush();\n    scope.prevEl = el;\n    el.__dirty = 0;\n    el.__isRendered = true;\n}\nfunction brushIncremental(ctx, el, scope) {\n    var displayables = el.getDisplayables();\n    var temporalDisplayables = el.getTemporalDisplayables();\n    ctx.save();\n    var innerScope = {\n        prevElClipPaths: null,\n        prevEl: null,\n        allClipped: false,\n        viewWidth: scope.viewWidth,\n        viewHeight: scope.viewHeight,\n        inHover: scope.inHover\n    };\n    var i;\n    var len;\n    for (i = el.getCursor(), len = displayables.length; i < len; i++) {\n        var displayable = displayables[i];\n        displayable.beforeBrush && displayable.beforeBrush();\n        displayable.innerBeforeBrush();\n        brush(ctx, displayable, innerScope, i === len - 1);\n        displayable.innerAfterBrush();\n        displayable.afterBrush && displayable.afterBrush();\n        innerScope.prevEl = displayable;\n    }\n    for (var i_1 = 0, len_1 = temporalDisplayables.length; i_1 < len_1; i_1++) {\n        var displayable = temporalDisplayables[i_1];\n        displayable.beforeBrush && displayable.beforeBrush();\n        displayable.innerBeforeBrush();\n        brush(ctx, displayable, innerScope, i_1 === len_1 - 1);\n        displayable.innerAfterBrush();\n        displayable.afterBrush && displayable.afterBrush();\n        innerScope.prevEl = displayable;\n    }\n    el.clearTemporalDisplayables();\n    el.notClear = true;\n    ctx.restore();\n}\n","function isSafeNum(num) {\n    return isFinite(num);\n}\nexport function createLinearGradient(ctx, obj, rect) {\n    var x = obj.x == null ? 0 : obj.x;\n    var x2 = obj.x2 == null ? 1 : obj.x2;\n    var y = obj.y == null ? 0 : obj.y;\n    var y2 = obj.y2 == null ? 0 : obj.y2;\n    if (!obj.global) {\n        x = x * rect.width + rect.x;\n        x2 = x2 * rect.width + rect.x;\n        y = y * rect.height + rect.y;\n        y2 = y2 * rect.height + rect.y;\n    }\n    x = isSafeNum(x) ? x : 0;\n    x2 = isSafeNum(x2) ? x2 : 1;\n    y = isSafeNum(y) ? y : 0;\n    y2 = isSafeNum(y2) ? y2 : 0;\n    var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n    return canvasGradient;\n}\nexport function createRadialGradient(ctx, obj, rect) {\n    var width = rect.width;\n    var height = rect.height;\n    var min = Math.min(width, height);\n    var x = obj.x == null ? 0.5 : obj.x;\n    var y = obj.y == null ? 0.5 : obj.y;\n    var r = obj.r == null ? 0.5 : obj.r;\n    if (!obj.global) {\n        x = x * width + rect.x;\n        y = y * height + rect.y;\n        r = r * min;\n    }\n    x = isSafeNum(x) ? x : 0.5;\n    y = isSafeNum(y) ? y : 0.5;\n    r = r >= 0 && isSafeNum(r) ? r : 0.5;\n    var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n    return canvasGradient;\n}\nexport function getCanvasGradient(ctx, obj, rect) {\n    var canvasGradient = obj.type === 'radial'\n        ? createRadialGradient(ctx, obj, rect)\n        : createLinearGradient(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n    for (var i = 0; i < colorStops.length; i++) {\n        canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n    return canvasGradient;\n}\nexport function isClipPathChanged(clipPaths, prevClipPaths) {\n    if (clipPaths === prevClipPaths || (!clipPaths && !prevClipPaths)) {\n        return false;\n    }\n    if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n        return true;\n    }\n    for (var i = 0; i < clipPaths.length; i++) {\n        if (clipPaths[i] !== prevClipPaths[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nexport function getSize(root, whIdx, opts) {\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n        return parseFloat(opts[wh]);\n    }\n    var stl = document.defaultView.getComputedStyle(root);\n    return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n        - (parseInt10(stl[plt]) || 0)\n        - (parseInt10(stl[prb]) || 0)) | 0;\n}\n"],"names":["pathProxyForDraw","PathProxy","styleHasStroke","style","stroke","lineWidth","isValidStrokeFillStyle","strokeOrFill","styleHasFill","fill","doFillPath","ctx","fillOpacity","originalGlobalAlpha","globalAlpha","opacity","doStrokePath","strokeOpacity","createCanvasPattern","pattern","el","image","createOrUpdateImage","__image","isImageReady","canvasPattern","createPattern","repeat","DOMMatrix","setTransform","matrix","translateSelf","x","y","rotateSelf","rotation","RADIAN_TO_DEGREE","scaleSelf","scaleX","scaleY","SHADOW_NUMBER_PROPS","STROKE_PROPS","bindCommonProps","prevStyle","forceSetAll","scope","styleChanged","flushPathDrawn","Math","max","min","isNaN","DEFAULT_COMMON_STYLE","blend","globalCompositeOperation","i","length","propName","dpr","shadowColor","bindPathAndTextCommonStyle","prevEl","getStyle","inHover","fillStyle","strokeStyle","hasStroke","newLineWidth","strokeNoScale","getLineScale","prop","setContextTransform","m","transform","batchFill","batchStroke","__hoverStyle","brushSingle","brush","viewWidth","viewHeight","isLast","shouldBePainted","__dirty","REDRAW_BIT","__isRendered","clipPaths","__clipPaths","prevElClipPaths","forceSetTransform","forceSetStyle","isClipPathChanged","restore","allClipped","save","clipPath","isZeroArea","beginPath","buildPath","shape","clip","updateClipStatus","beforeBrush","innerBeforeBrush","m0","m1","canBatchPath","Path","autoBatch","hasFill","lineDash","strokePercent","canPathBatch","lastDrawType","inBatch","_a","strokePart","firstDraw","path","silent","createPathProxy","dirtyFlag","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","hasStrokePattern","fillGradient","strokeGradient","fillPattern","strokePattern","rect","getBoundingRect","getCanvasGradient","__canvasFillGradient","__canvasStrokeGradient","__canvasFillPattern","__canvasStrokePattern","lineDashOffset","scale","getGlobalScale","setScale","segmentIgnoreThreshold","setLineDash","getLineDash","needsRebuild","SHAPE_CHANGED_BIT","setDPR","setContext","reset","toStatic","pathUpdated","rebuildPath","strokeFirst","brushPath","TSpan","text","font","DEFAULT_FONT","textAlign","textBaseline","strokeText","fillText","brushText","ZRImage","bindImageStyle","onload","width","getWidth","height","getHeight","aspect","sWidth","sHeight","sx","sy","drawImage","brushImage","getTemporalDisplayables","displayables","getDisplayables","temporalDisplayables","len","innerScope","getCursor","displayable","innerAfterBrush","afterBrush","i_1","len_1","clearTemporalDisplayables","notClear","brushIncremental","isSafeNum","num","isFinite","obj","canvasGradient","type","r","global","createRadialGradient","x2","y2","createLinearGradient","addColorStop","offset","color","prevClipPaths","parseInt10","val","parseInt","getSize","root","whIdx","opts","wh","cwh","plt","prb","parseFloat","stl","document","defaultView","getComputedStyle"],"sourceRoot":""}