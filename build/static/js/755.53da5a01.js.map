{"version":3,"file":"static/js/755.53da5a01.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/pie/labelLayout.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nimport { parsePercent } from '../../util/number.js';\nimport { Point } from '../../util/graphic.js';\nimport { each, isNumber } from 'zrender/lib/core/util.js';\nimport { limitTurnAngle, limitSurfaceAngle } from '../../label/labelGuideHelper.js';\nimport { shiftLayoutOnY } from '../../label/labelLayoutHelper.js';\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy); // horizontal r is always same with original r because x is not changed.\n\n      var rA = r + item.len;\n      var rA2 = rA * rA; // Use ellipse implicit function to calculate x\n\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      var newX = cx + (dx + item.len2) * dir;\n      var deltaX = newX - item.label.x;\n      var newTargetWidth = item.targetTextWidth - deltaX * dir; // text x is changed, so need to recalculate width.\n\n      constrainTextWidth(item, newTargetWidth, true);\n      item.label.x = newX;\n    }\n  } // Adjust X based on the shifted y. Make tight labels aligned on an ellipse curve.\n\n\n  function recalculateX(items) {\n    // Extremes of\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy >= semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir; // horizontal r is always same with original r because x is not changed.\n\n        var rA = r + item.len; // Canculate rB based on the topest / bottemest label.\n\n        var rB = Math.abs(dx) < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if (shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (!isPositionCenter(layout) && layout.linePoints) {\n      if (layout.labelStyleWidth != null) {\n        continue;\n      }\n\n      var label = layout.label;\n      var linePoints = layout.linePoints;\n      var targetTextWidth = void 0;\n\n      if (layout.labelAlignTo === 'edge') {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else if (layout.labelAlignTo === 'labelLine') {\n        if (label.x < cx) {\n          targetTextWidth = leftmostX - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - rightmostX - layout.bleedMargin;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      layout.targetTextWidth = targetTextWidth;\n      constrainTextWidth(layout, targetTextWidth);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (!isPositionCenter(layout) && layout.linePoints) {\n      var label = layout.label;\n      var linePoints = layout.linePoints;\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var padding = label.style.padding;\n      var paddingH = padding ? padding[1] + padding[3] : 0; // textRect.width already contains paddingH if bgColor is set\n\n      var extraPaddingH = label.style.backgroundColor ? 0 : paddingH;\n      var realTextWidth = layout.rect.width + extraPaddingH;\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n/**\n * Set max width of each label, and then wrap each label to the max width.\n *\n * @param layout label layout\n * @param availableWidth max width for the label to display\n * @param forceRecalculate recaculate the text layout even if the current width\n * is smaller than `availableWidth`. This is useful when the text was previously\n * wrapped by calling `constrainTextWidth` but now `availableWidth` changed, in\n * which case, previous wrapping should be redo.\n */\n\n\nfunction constrainTextWidth(layout, availableWidth, forceRecalculate) {\n  if (forceRecalculate === void 0) {\n    forceRecalculate = false;\n  }\n\n  if (layout.labelStyleWidth != null) {\n    // User-defined style.width has the highest priority.\n    return;\n  }\n\n  var label = layout.label;\n  var style = label.style;\n  var textRect = layout.rect;\n  var bgColor = style.backgroundColor;\n  var padding = style.padding;\n  var paddingH = padding ? padding[1] + padding[3] : 0;\n  var overflow = style.overflow; // textRect.width already contains paddingH if bgColor is set\n\n  var oldOuterWidth = textRect.width + (bgColor ? 0 : paddingH);\n\n  if (availableWidth < oldOuterWidth || forceRecalculate) {\n    var oldHeight = textRect.height;\n\n    if (overflow && overflow.match('break')) {\n      // Temporarily set background to be null to calculate\n      // the bounding box without backgroud.\n      label.setStyle('backgroundColor', null); // Set constraining width\n\n      label.setStyle('width', availableWidth - paddingH); // This is the real bounding box of the text without padding\n\n      var innerRect = label.getBoundingRect();\n      label.setStyle('width', Math.ceil(innerRect.width));\n      label.setStyle('backgroundColor', bgColor);\n    } else {\n      var availableInnerWidth = availableWidth - paddingH;\n      var newWidth = availableWidth < oldOuterWidth // Current text is too wide, use `availableWidth` as max width.\n      ? availableInnerWidth : // Current available width is enough, but the text may have\n      // already been wrapped with a smaller available width.\n      forceRecalculate ? availableInnerWidth > layout.unconstrainedWidth // Current available is larger than text width,\n      // so don't constrain width (otherwise it may have\n      // empty space in the background).\n      ? null // Current available is smaller than text width, so\n      // use the current available width as constraining\n      // width.\n      : availableInnerWidth : // Current available width is enough, so no need to\n      // constrain.\n      null;\n      label.setStyle('width', newWidth);\n    }\n\n    var newRect = label.getBoundingRect();\n    textRect.width = newRect.width;\n    var margin = (label.style.margin || 0) + 2.1;\n    textRect.height = newRect.height + margin;\n    textRect.y -= (textRect.height - oldHeight) / 2;\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  // Not change x for center label\n  return sectorShape.position === 'center';\n}\n\nexport default function pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = parsePercent(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      each(label.states, setNotShow);\n      each(labelLine.states, setNotShow);\n      label.ignore = labelLine.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          // Adjust textX because text align of edge is opposite\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var PI = Math.PI;\n    var labelRotate = 0;\n    var rotate = labelModel.get('rotate');\n\n    if (isNumber(rotate)) {\n      labelRotate = rotate * (PI / 180);\n    } else if (labelPosition === 'center') {\n      labelRotate = 0;\n    } else if (rotate === 'radial' || rotate === true) {\n      var radialAngle = nx < 0 ? -midAngle + PI : -midAngle;\n      labelRotate = radialAngle;\n    } else if (rotate === 'tangential' && labelPosition !== 'outside' && labelPosition !== 'outer') {\n      var rad = Math.atan2(nx, ny);\n\n      if (rad < 0) {\n        rad = PI * 2 + rad;\n      }\n\n      var isDown = ny > 0;\n\n      if (isDown) {\n        rad = PI + rad;\n      }\n\n      labelRotate = rad - PI;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    }); // Not sectorShape the inside label\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform()); // Text has a default 1px stroke. Exclude this.\n\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect,\n        unconstrainedWidth: textRect.width,\n        labelStyleWidth: label.style.width\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        each(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        each(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        limitTurnAngle(linePoints, layout.minTurnAngle);\n        limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        }); // Set the anchor to the midpoint of sector\n\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { extend, retrieve3 } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport labelLayout from './labelLayout.js';\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getSectorCornerRadius } from '../helper/pieHelper.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nimport { getBasicPieLayout } from './pieLayout.js';\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\n\nvar PiePiece =\n/** @class */\nfunction (_super) {\n  __extends(PiePiece, _super);\n\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n\n    _this.z2 = 2;\n    var text = new graphic.Text();\n\n    _this.setTextContent(text);\n\n    _this.updateData(data, idx, startAngle, true);\n\n    return _this;\n  }\n\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n\n      if (seriesModel.ecModel.ssr) {\n        // Use scale animation in SSR mode(opacity?)\n        // Because CSS SVG animation doesn't support very customized shape animation.\n        graphic.initProps(sector, {\n          scaleX: 0,\n          scaleY: 0\n        }, seriesModel, {\n          dataIndex: idx,\n          isFrom: true\n        });\n        sector.originX = sectorShape.cx;\n        sector.originY = sectorShape.cy;\n      } else if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n          if (startAngle != null) {\n            sector.setShape({\n              startAngle: startAngle,\n              endAngle: startAngle\n            });\n            graphic.initProps(sector, {\n              shape: {\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          } else {\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n              shape: {\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          }\n        }\n    } else {\n      saveOldStyle(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    setStatesStylesFromModel(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n\n    this._updateLabel(seriesModel, data, idx);\n\n    sector.ensureState('emphasis').shape = extend({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\n    extend(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    extend(sector.ensureState('blur'), {\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && extend(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    extend(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    toggleHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  };\n\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\n        stroke: visualColor,\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\n\nvar PieView =\n/** @class */\nfunction (_super) {\n  __extends(PieView, _super);\n\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: getBasicPieLayout(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    labelLayout(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n\n  PieView.prototype.dispose = function () {};\n\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n\n  PieView.type = 'pie';\n  return PieView;\n}(ChartView);\n\nexport default PieView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as modelUtil from '../../util/model.js';\nimport { getPercentSeats } from '../../util/number.js';\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper.js';\nimport LegendVisualProvider from '../../visual/LegendVisualProvider.js';\nimport SeriesModel from '../../model/Series.js';\n\nvar PieSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(PieSeriesModel, _super);\n\n  function PieSeriesModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.init = function (option) {\n    _super.prototype.init.apply(this, arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n\n    this._defaultLabelLine(option);\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.mergeOption = function () {\n    _super.prototype.mergeOption.apply(this, arguments);\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.getInitialData = function () {\n    var data = createSeriesDataSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    this.seats = getPercentSeats(valueList, data.hostModel.get('percentPrecision'));\n    return data;\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.getDataParams = function (dataIndex) {\n    var params = _super.prototype.getDataParams.call(this, dataIndex);\n\n    params.percent = this.seats[dataIndex];\n    params.$vars.push('percent');\n    return params;\n  };\n\n  PieSeriesModel.prototype._defaultLabelLine = function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  };\n\n  PieSeriesModel.type = 'series.pie';\n  PieSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    colorBy: 'data',\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // If the angle of a sector less than `minShowLabelAngle`,\n    // the label will not be displayed.\n    minShowLabelAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: null,\n    height: null,\n    label: {\n      // color: 'inherit',\n      // If rotate around circle\n      rotate: 0,\n      show: true,\n      overflow: 'truncate',\n      // 'outer', 'inside', 'center'\n      position: 'outer',\n      // 'none', 'labelLine', 'edge'. Works only when position is 'outer'\n      alignTo: 'none',\n      // Closest distance between label and chart edge.\n      // Works only position is 'outer' and alignTo is 'edge'.\n      edgeDistance: '25%',\n      // Works only position is 'outer' and alignTo is not 'edge'.\n      bleedMargin: 10,\n      // Distance between text and label line.\n      distanceToLabelLine: 5 // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      minTurnAngle: 90,\n      maxSurfaceAngle: 90,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderJoin: 'round'\n    },\n    showEmptyCircle: true,\n    emptyCircleStyle: {\n      color: 'lightgray',\n      opacity: 1\n    },\n    labelLayout: {\n      // Hide the overlapped label.\n      hideOverlap: true\n    },\n    emphasis: {\n      scale: true,\n      scaleSize: 5\n    },\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // Animation type. Valid values: expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    // Animation type when update. Valid values: transition, expansion\n    animationTypeUpdate: 'transition',\n    animationEasingUpdate: 'cubicInOut',\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicInOut'\n  };\n  return PieSeriesModel;\n}(SeriesModel);\n\nexport default PieSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { createLegacyDataSelectAction } from '../../legacy/dataSelectAction.js';\nimport pieLayout from '../pie/pieLayout.js';\nimport dataFilter from '../../processor/dataFilter.js';\nimport { curry } from 'zrender/lib/core/util.js';\nimport PieView from './PieView.js';\nimport PieSeriesModel from './PieSeries.js';\nimport negativeDataFilter from '../../processor/negativeDataFilter.js';\nexport function install(registers) {\n  registers.registerChartView(PieView);\n  registers.registerSeriesModel(PieSeriesModel);\n  createLegacyDataSelectAction('pie', registers.registerAction);\n  registers.registerLayout(curry(pieLayout, 'pie'));\n  registers.registerProcessor(dataFilter('pie'));\n  registers.registerProcessor(negativeDataFilter('pie'));\n}"],"names":["RADIAN","Math","PI","adjustSingleSide","list","cx","cy","r","dir","viewWidth","viewHeight","viewLeft","viewTop","farthestX","length","len","i","position","labelAlignTo","dx","label","x","linePoints","shiftLayoutOnY","items","topSemi","maxY","bottomSemi","item","semi","y","dy","abs","len2","rA","rB","sqrt","push","recalculateXOnSemiToAlignOnEllipseCurve","recalculateX","rB2","rA2","newX","deltaX","constrainTextWidth","targetTextWidth","layout","availableWidth","forceRecalculate","labelStyleWidth","style","textRect","rect","bgColor","backgroundColor","padding","paddingH","overflow","oldOuterWidth","width","oldHeight","height","match","setStyle","innerRect","getBoundingRect","ceil","availableInnerWidth","newWidth","unconstrainedWidth","newRect","margin","isPositionCenter","sectorShape","pieLabelLayout","seriesModel","data","getData","labelLayoutList","hasLabelRotate","minShowLabelRadian","get","viewRect","getLayout","setNotShow","el","ignore","each","idx","sector","getItemGraphicEl","shape","getTextContent","labelLine","getTextGuideLine","itemModel","getItemModel","labelModel","getModel","labelPosition","labelDistance","edgeDistance","parsePercent","bleedMargin","labelLineModel","labelLineLen","labelLineLen2","endAngle","startAngle","states","key","isLabelShown","textX","textY","textAlign","midAngle","nx","cos","ny","sin","isLabelInside","x1","r0","y1","x2","y2","x3","labelRotate","rotate","isNumber","rad","atan2","rotation","verticalAlign","align","selectState","select","clone","applyTransform","getComputedTransform","minTurnAngle","maxSurfaceAngle","surfaceNormal","Point","setTextConfig","inside","leftList","rightList","leftmostX","Number","MAX_VALUE","rightmostX","min","max","isAlignToEdge","extraPaddingH","realTextWidth","dist","avoidOverlap","notShowLabel","isNaN","limitTurnAngle","limitSurfaceAngle","setShape","points","__hostTarget","textGuideLineConfig","anchor","PiePiece","_super","_this","call","this","z2","text","graphic","setTextContent","updateData","__extends","prototype","firstCreate","hostModel","emphasisModel","getItemLayout","extend","getSectorCornerRadius","animationType","getShallow","ecModel","ssr","scaleX","scaleY","dataIndex","isFrom","originX","originY","saveOldStyle","useStyle","getItemVisual","setStatesStylesFromModel","offset","cursorStyle","attr","_updateLabel","ensureState","labelText","toggleHoverEmphasis","visualColor","fill","visualOpacity","opacity","setLabelStyle","getLabelStatesModels","labelFetcher","labelDataIndex","inheritColor","defaultOpacity","defaultText","getFormattedLabel","getName","removeTextGuideLine","polyline","setTextGuideLine","setLabelLineStyle","getLabelLineStatesModels","stroke","retrieve3","PieView","apply","arguments","ignoreLabelLineUpdate","render","api","payload","oldData","_data","group","count","s","_emptyCircleSector","remove","getBasicPieLayout","getItemStyle","add","diff","piePiece","setItemGraphicEl","update","newIdx","oldIdx","off","execute","labelLayout","dispose","containPoint","point","itemLayout","radius","type","ChartView","PieSeriesModel","init","option","legendVisualProvider","LegendVisualProvider","zrUtil","getRawData","_defaultLabelLine","mergeOption","getInitialData","createSeriesDataSimply","coordDimensions","encodeDefaulter","makeSeriesEncodeForNameBased","valueList","mapDimension","value","seats","getPercentSeats","getDataParams","params","percent","$vars","modelUtil","labelLineNormalOpt","labelLineEmphasisOpt","emphasis","show","defaultOption","z","legendHoverLink","colorBy","center","clockwise","minAngle","minShowLabelAngle","selectedOffset","percentPrecision","stillShowZeroSum","left","top","right","bottom","alignTo","distanceToLabelLine","length2","smooth","lineStyle","itemStyle","borderWidth","borderJoin","showEmptyCircle","emptyCircleStyle","color","hideOverlap","scale","scaleSize","avoidLabelOverlap","animationDuration","animationTypeUpdate","animationEasingUpdate","animationDurationUpdate","animationEasing","SeriesModel","install","registers","registerChartView","registerSeriesModel","createLegacyDataSelectAction","registerAction","registerLayout","curry","pieLayout","registerProcessor","dataFilter","negativeDataFilter"],"sourceRoot":""}