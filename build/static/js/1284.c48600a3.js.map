{"version":3,"file":"static/js/1284.c48600a3.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/tree/traversalHelper.js","../node_modules/echarts/lib/chart/tree/treeLayout.js","../node_modules/echarts/lib/chart/tree/treeVisual.js","../node_modules/echarts/lib/chart/tree/install.js","../node_modules/echarts/lib/chart/tree/treeAction.js","../node_modules/echarts/lib/chart/tree/layoutHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexport { eachAfter, eachBefore };","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { eachAfter, eachBefore } from './traversalHelper.js';\nimport { init, firstWalk, secondWalk, separation as sep, radialCoordinate, getViewRect } from './layoutHelper.js';\nexport default function treeLayout(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left_1 = realRoot;\n    var right_1 = realRoot;\n    var bottom_1 = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left_1.getLayout().x) {\n        left_1 = node;\n      }\n\n      if (x > right_1.getLayout().x) {\n        right_1 = node;\n      }\n\n      if (node.depth > bottom_1.depth) {\n        bottom_1 = node;\n      }\n    });\n    var delta = left_1 === right_1 ? 1 : separation(left_1, right_1) / 2;\n    var tx_1 = delta - left_1.getLayout().x;\n    var kx_1 = 0;\n    var ky_1 = 0;\n    var coorX_1 = 0;\n    var coorY_1 = 0;\n\n    if (layout === 'radial') {\n      kx_1 = width / (right_1.getLayout().x + delta + tx_1); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky_1 = height / (bottom_1.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n        coorY_1 = (node.depth - 1) * ky_1;\n        var finalCoor = radialCoordinate(coorX_1, coorY_1);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX_1,\n          rawY: coorY_1\n        }, true);\n      });\n    } else {\n      var orient_1 = seriesModel.getOrient();\n\n      if (orient_1 === 'RL' || orient_1 === 'LR') {\n        ky_1 = height / (right_1.getLayout().x + delta + tx_1);\n        kx_1 = width / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY_1 = (node.getLayout().x + tx_1) * ky_1;\n          coorX_1 = orient_1 === 'LR' ? (node.depth - 1) * kx_1 : width - (node.depth - 1) * kx_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      } else if (orient_1 === 'TB' || orient_1 === 'BT') {\n        kx_1 = width / (right_1.getLayout().x + delta + tx_1);\n        ky_1 = height / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n          coorY_1 = orient_1 === 'TB' ? (node.depth - 1) * ky_1 : height - (node.depth - 1) * ky_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      }\n    }\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { extend } from 'zrender/lib/core/util.js';\nexport default function treeVisual(ecModel) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    var data = seriesModel.getData();\n    var tree = data.tree;\n    tree.eachNode(function (node) {\n      var model = node.getModel(); // TODO Optimize\n\n      var style = model.getModel('itemStyle').getItemStyle();\n      var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style');\n      extend(existsStyle, style);\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport TreeView from './TreeView.js';\nimport TreeSeriesModel from './TreeSeries.js';\nimport treeLayout from './treeLayout.js';\nimport treeVisual from './treeVisual.js';\nimport { installTreeAction } from './treeAction.js';\nexport function install(registers) {\n  registers.registerChartView(TreeView);\n  registers.registerSeriesModel(TreeSeriesModel);\n  registers.registerLayout(treeLayout);\n  registers.registerVisual(treeVisual);\n  installTreeAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { updateCenterAndZoom } from '../../action/roamHelper.js';\nexport function installTreeAction(registers) {\n  registers.registerAction({\n    type: 'treeExpandAndCollapse',\n    event: 'treeExpandAndCollapse',\n    update: 'update'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'tree',\n      query: payload\n    }, function (seriesModel) {\n      var dataIndex = payload.dataIndex;\n      var tree = seriesModel.getData().tree;\n      var node = tree.getNodeByDataIndex(dataIndex);\n      node.isExpand = !node.isExpand;\n    });\n  });\n  registers.registerAction({\n    type: 'treeRoam',\n    event: 'treeRoam',\n    // Here we set 'none' instead of 'update', because roam action\n    // just need to update the transform matrix without having to recalculate\n    // the layout. So don't need to go through the whole update process, such\n    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n    update: 'none'\n  }, function (payload, ecModel, api) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'tree',\n      query: payload\n    }, function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n      var res = updateCenterAndZoom(coordSys, payload, undefined, api);\n      seriesModel.setCenter && seriesModel.setCenter(res.center);\n      seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The tree layoutHelper implementation was originally copied from\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\n* some modifications made for this project.\n* (see more details in the comment of the specific method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n */\nimport * as layout from '../../util/layout.js';\n/**\n * Initialize all computational message for following algorithm.\n */\n\nexport function init(inRoot) {\n  var root = inRoot;\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n */\n\nexport function firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes all real x-coordinates by summing up the modifiers recursively.\n */\n\nexport function secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\nexport function separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate.\n */\n\nexport function radialCoordinate(rad, r) {\n  rad -= Math.PI / 2;\n  return {\n    x: r * Math.cos(rad),\n    y: r * Math.sin(rad)\n  };\n}\n/**\n * Get the layout position of the whole view.\n */\n\nexport function getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n *\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Shifts the current subtree rooted at wr.\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}"],"names":["eachBefore","root","callback","node","nodes","pop","isExpand","children","length","i","push","treeLayout","ecModel","api","eachSeriesByType","seriesModel","layoutInfo","getViewRect","layout","get","width","height","separation","Math","PI","min","sep","node1","node2","parentNode","depth","virtualRoot","getData","tree","realRoot","init","next","eachAfter","firstWalk","hierNode","modifier","prelim","secondWalk","left_1","right_1","bottom_1","x","getLayout","delta","tx_1","kx_1","ky_1","coorX_1","coorY_1","finalCoor","radialCoordinate","setLayout","y","rawX","rawY","orient_1","getOrient","commonLayout","treeVisual","data","eachNode","style","getModel","getItemStyle","existsStyle","ensureUniqueItemVisual","dataIndex","extend","install","registers","registerChartView","TreeView","registerSeriesModel","TreeSeriesModel","registerLayout","registerVisual","registerAction","type","event","update","payload","eachComponent","mainType","subType","query","getNodeByDataIndex","coordSys","coordinateSystem","res","updateCenterAndZoom","undefined","setCenter","center","setZoom","zoom","installTreeAction","inRoot","defaultAncestor","ancestor","change","shift","thread","child","siblings","subtreeW","n","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","apportion","nodeX","cb","arguments","defaultSeparation","rad","r","cos","sin","getBoxLayoutParams","getWidth","getHeight","wl","wr"],"sourceRoot":""}