{"version":3,"file":"static/js/5255.ae558286.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/candlestick/CandlestickView.js","../node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","../node_modules/echarts/lib/chart/candlestick/preprocessor.js","../node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","../node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","../node_modules/echarts/lib/chart/candlestick/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport ChartView from '../../view/Chart.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel } from '../../util/states.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nvar SKIP_PROPS = ['color', 'borderColor'];\n\nvar CandlestickView =\n/** @class */\nfunction (_super) {\n  __extends(CandlestickView, _super);\n\n  function CandlestickView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CandlestickView.type;\n    return _this;\n  }\n\n  CandlestickView.prototype.render = function (seriesModel, ecModel, api) {\n    // If there is clipPath created in large mode. Remove it.\n    this.group.removeClipPath(); // Clear previously rendered progressive elements.\n\n    this._progressiveEls = null;\n\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  };\n\n  CandlestickView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  };\n\n  CandlestickView.prototype.incrementalRender = function (params, seriesModel, ecModel, api) {\n    this._progressiveEls = [];\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  };\n\n  CandlestickView.prototype.eachRendered = function (cb) {\n    graphic.traverseElements(this._progressiveEls || this.group, cb);\n  };\n\n  CandlestickView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  CandlestickView.prototype._renderNormal = function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var needsClip = seriesModel.get('clip', true);\n    var coord = seriesModel.coordinateSystem;\n    var clipArea = coord.getArea && coord.getArea(); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n\n        if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n          return;\n        }\n\n        var el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n        group.remove(el);\n        return;\n      }\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        saveOldStyle(el);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  };\n\n  CandlestickView.prototype._renderLarge = function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  CandlestickView.prototype._incrementalRenderNormal = function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var itemLayout = data.getItemLayout(dataIndex);\n      var el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n\n      this._progressiveEls.push(el);\n    }\n  };\n\n  CandlestickView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    createLarge(seriesModel, this.group, this._progressiveEls, true);\n  };\n\n  CandlestickView.prototype.remove = function (ecModel) {\n    this._clear();\n  };\n\n  CandlestickView.prototype._clear = function () {\n    this.group.removeAll();\n    this._data = null;\n  };\n\n  CandlestickView.type = 'candlestick';\n  return CandlestickView;\n}(ChartView);\n\nvar NormalBoxPathShape =\n/** @class */\nfunction () {\n  function NormalBoxPathShape() {}\n\n  return NormalBoxPathShape;\n}();\n\nvar NormalBoxPath =\n/** @class */\nfunction (_super) {\n  __extends(NormalBoxPath, _super);\n\n  function NormalBoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'normalCandlestickBox';\n    return _this;\n  }\n\n  NormalBoxPath.prototype.getDefaultShape = function () {\n    return new NormalBoxPathShape();\n  };\n\n  NormalBoxPath.prototype.buildPath = function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  };\n\n  return NormalBoxPath;\n}(Path);\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction isNormalBoxClipped(clipArea, itemLayout) {\n  var clipped = true;\n\n  for (var i = 0; i < itemLayout.ends.length; i++) {\n    // If any point are in the region.\n    if (clipArea.contain(itemLayout.ends[i][0], itemLayout.ends[i][1])) {\n      clipped = false;\n      break;\n    }\n  }\n\n  return clipped;\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.strokeNoScale = true;\n  el.__simpleBox = isSimpleBox;\n  setStatesStylesFromModel(el, itemModel);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPathShape =\n/** @class */\nfunction () {\n  function LargeBoxPathShape() {}\n\n  return LargeBoxPathShape;\n}();\n\nvar LargeBoxPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeBoxPath, _super);\n\n  function LargeBoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeCandlestickBox';\n    return _this;\n  }\n\n  LargeBoxPath.prototype.getDefaultShape = function () {\n    return new LargeBoxPathShape();\n  };\n\n  LargeBoxPath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  };\n\n  return LargeBoxPath;\n}(Path);\n\nfunction createLarge(seriesModel, group, progressiveEls, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1,\n    ignoreCoarsePointer: true\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1,\n    ignoreCoarsePointer: true\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n\n  if (progressiveEls) {\n    progressiveEls.push(elP, elN);\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  // TODO put in visual?\n  var borderColor = seriesModel.get(['itemStyle', sign > 0 ? 'borderColor' : 'borderColor0']) || seriesModel.get(['itemStyle', sign > 0 ? 'color' : 'color0']); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n}\n\nexport default CandlestickView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series.js';\nimport { WhiskerBoxCommonMixin } from '../helper/whiskerBoxCommon.js';\nimport { mixin } from 'zrender/lib/core/util.js';\n\nvar CandlestickSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(CandlestickSeriesModel, _super);\n\n  function CandlestickSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CandlestickSeriesModel.type;\n    _this.defaultValueDimensions = [{\n      name: 'open',\n      defaultTooltip: true\n    }, {\n      name: 'close',\n      defaultTooltip: true\n    }, {\n      name: 'lowest',\n      defaultTooltip: true\n    }, {\n      name: 'highest',\n      defaultTooltip: true\n    }];\n    return _this;\n  }\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return dimension name\n   */\n\n\n  CandlestickSeriesModel.prototype.getShadowDim = function () {\n    return 'open';\n  };\n\n  CandlestickSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  };\n\n  CandlestickSeriesModel.type = 'series.candlestick';\n  CandlestickSeriesModel.dependencies = ['xAxis', 'yAxis', 'grid'];\n  CandlestickSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    clip: true,\n    itemStyle: {\n      color: '#eb5454',\n      color0: '#47b262',\n      borderColor: '#eb5454',\n      borderColor0: '#47b262',\n      // borderColor: '#d24040',\n      // borderColor0: '#398f4f',\n      borderWidth: 1\n    },\n    emphasis: {\n      scale: true,\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 3e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationEasing: 'linear',\n    animationDuration: 300\n  };\n  return CandlestickSeriesModel;\n}(SeriesModel);\n\nmixin(CandlestickSeriesModel, WhiskerBoxCommonMixin, true);\nexport default CandlestickSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport default function candlestickPreprocessor(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport createRenderPlanner from '../helper/createRenderPlanner.js';\nimport { extend } from 'zrender/lib/core/util.js';\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar candlestickVisual = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    } // Only visible series has each data be visual encoded\n\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    var isLargeRender = seriesModel.pipelineContext.large;\n    return !isLargeRender && {\n      progress: function (params, data) {\n        var dataIndex;\n\n        while ((dataIndex = params.next()) != null) {\n          var itemModel = data.getItemModel(dataIndex);\n          var sign = data.getItemLayout(dataIndex).sign;\n          var style = itemModel.getItemStyle();\n          style.fill = getColor(sign, itemModel);\n          style.stroke = getBorderColor(sign, itemModel) || style.fill;\n          var existsStyle = data.ensureUniqueItemVisual(dataIndex, 'style');\n          extend(existsStyle, style);\n        }\n      }\n    };\n  }\n};\nexport default candlestickVisual;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { subPixelOptimize } from '../../util/graphic.js';\nimport createRenderPlanner from '../helper/createRenderPlanner.js';\nimport { parsePercent } from '../../util/number.js';\nimport { map, retrieve2 } from 'zrender/lib/core/util.js';\nimport { createFloat32Array } from '../../util/vendor.js';\nvar candlestickLayout = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDimI = data.getDimensionIndex(data.mapDimension(coordDims[cDimIdx]));\n    var vDimsI = map(data.mapDimensionsAll(coordDims[vDimIdx]), data.getDimensionIndex, data);\n    var openDimI = vDimsI[0];\n    var closeDimI = vDimsI[1];\n    var lowestDimI = vDimsI[2];\n    var highestDimI = vDimsI[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDimI < 0 || vDimsI.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n      var store = data.getStore();\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = store.get(cDimI, dataIndex);\n        var openVal = store.get(openDimI, dataIndex);\n        var closeVal = store.get(closeDimI, dataIndex);\n        var lowestVal = store.get(lowestDimI, dataIndex);\n        var highestVal = store.get(highestDimI, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(store, dataIndex, openVal, closeVal, closeDimI),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = createFloat32Array(params.count * 4);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n      var store = data.getStore();\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = store.get(cDimI, dataIndex);\n        var openVal = store.get(openDimI, dataIndex);\n        var closeVal = store.get(closeDimI, dataIndex);\n        var lowestVal = store.get(lowestDimI, dataIndex);\n        var highestVal = store.get(highestDimI, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 3;\n          continue;\n        }\n\n        points[offset++] = getSign(store, dataIndex, openVal, closeVal, closeDimI);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(store, dataIndex, openVal, closeVal, closeDimI) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? store.get(closeDimI, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nexport default candlestickLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport CandlestickView from './CandlestickView.js';\nimport CandlestickSeriesModel from './CandlestickSeries.js';\nimport preprocessor from './preprocessor.js';\nimport candlestickVisual from './candlestickVisual.js';\nimport candlestickLayout from './candlestickLayout.js';\nexport function install(registers) {\n  registers.registerChartView(CandlestickView);\n  registers.registerSeriesModel(CandlestickSeriesModel);\n  registers.registerPreprocessor(preprocessor);\n  registers.registerVisual(candlestickVisual);\n  registers.registerLayout(candlestickLayout);\n}"],"names":["SKIP_PROPS","CandlestickView","_super","_this","apply","this","arguments","type","__extends","prototype","render","seriesModel","ecModel","api","group","removeClipPath","_progressiveEls","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","_incrementalRenderNormal","eachRendered","cb","graphic","traverseElements","isLargeDraw","pipelineContext","large","data","getData","oldData","_data","isSimpleBox","getLayout","needsClip","get","coord","coordinateSystem","clipArea","getArea","removeAll","diff","add","newIdx","hasValue","itemLayout","getItemLayout","isNormalBoxClipped","el","createNormalBox","shape","points","ends","setBoxCommon","setItemGraphicEl","update","oldIdx","getItemGraphicEl","remove","saveOldStyle","execute","createLarge","clipPath","createClipPath","setClipPath","dataIndex","next","incremental","push","ChartView","NormalBoxPathShape","NormalBoxPath","opts","call","getDefaultShape","buildPath","ctx","__simpleBox","moveTo","lineTo","closePath","Path","isInit","transInit","z2","clipped","i","length","contain","itemModel","getItemModel","useStyle","getItemVisual","style","strokeNoScale","setStatesStylesFromModel","zrUtil","point","slice","initBaseline","LargeBoxPathShape","LargeBoxPath","__sign","x","progressiveEls","largePoints","elP","ignoreCoarsePointer","elN","setLargeStyle","sign","borderColor","itemStyle","getModel","getItemStyle","fill","stroke","CandlestickSeriesModel","defaultValueDimensions","name","defaultTooltip","getShadowDim","brushSelector","selectors","rect","brushRect","dependencies","defaultOption","z","legendHoverLink","layout","clip","color","color0","borderColor0","borderWidth","emphasis","scale","barMaxWidth","barMinWidth","barWidth","largeThreshold","progressive","progressiveThreshold","progressiveChunkMode","animationEasing","animationDuration","SeriesModel","mixin","WhiskerBoxCommonMixin","candlestickPreprocessor","option","series","seriesItem","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","seriesType","plan","createRenderPlanner","performRawSeries","reset","getColor","model","getBorderColor","isSeriesFiltered","progress","existsStyle","ensureUniqueItemVisual","extend","getSign","store","openVal","closeVal","closeDimI","coordSys","candleWidth","extent","baseAxis","getBaseAxis","bandWidth","getBandWidth","getExtent","Math","abs","count","parsePercent","retrieve2","max","min","calculateCandleWidth","coordDims","cDimI","getDimensionIndex","mapDimension","vDimsI","map","mapDimensionsAll","openDimI","lowestDimI","highestDimI","setLayout","createFloat32Array","offset","tmpIn","tmpOut","getStore","axisDimVal","lowestVal","highestVal","isNaN","NaN","dataToPoint","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","addBodyEnd","subPixelOptimizePoint","setItemLayout","makeBrushRect","val","p","start","point1","point2","subPixelOptimize","pmin","pmax","y","width","height","install","registers","registerChartView","registerSeriesModel","registerPreprocessor","preprocessor","registerVisual","candlestickVisual","registerLayout","candlestickLayout"],"sourceRoot":""}