{"version":3,"file":"static/js/1292.d3225ee4.js","mappings":"wMAiDIA,EAEJ,SAAUC,GAGR,SAASD,IACP,IAAIE,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAGhE,OADAF,EAAMI,KAAON,EAAUM,KAChBJ,CACT,CAiEA,OAxEAK,EAAAA,EAAAA,IAAUP,EAAWC,GASrBD,EAAUQ,UAAUC,KAAO,SAAUC,EAASC,GAC5CP,KAAKM,QAAUA,EACfN,KAAKO,IAAMA,EACXP,KAAKQ,OACJR,KAAKS,iBAAmB,IAAIC,EAAAA,EAAgBH,EAAII,UAAUC,GAAG,QAASC,EAAAA,GAAYb,KAAKc,SAAUd,OAAOe,OAC3G,EAEAnB,EAAUQ,UAAUY,OAAS,SAAUC,EAAYX,EAASC,EAAKW,GAC/DlB,KAAKQ,MAAQS,EAEbjB,KAAKmB,kBAAkBF,EAAYX,EAASC,EAAKW,EACnD,EAEAtB,EAAUQ,UAAUgB,gBAAkB,SAAUH,EAAYX,EAASC,EAAKW,IAIxEG,EAAAA,EAAAA,GAAaf,GAEbN,KAAKmB,kBAAkBF,EAAYX,EAASC,EAAKW,EACnD,EAEAtB,EAAUQ,UAAUkB,aAAe,SAAUL,EAAYX,EAASC,EAAKW,GACrElB,KAAKoB,gBAAgBH,EAAYX,EAASC,EAAKW,EACjD,EAEAtB,EAAUQ,UAAUmB,WAAa,SAAUN,EAAYX,EAASC,EAAKW,GACnElB,KAAKmB,kBAAkBF,EAAYX,EAASC,EAAKW,EACnD,EAEAtB,EAAUQ,UAAUe,kBAAoB,SAAUF,EAAYX,EAASC,EAAKW,KAExEA,GAAWA,EAAQM,QAAUP,EAAWQ,KAAOzB,KAAKS,iBAAiBiB,UAAUT,EAAWU,mBAAmBC,cAAcrB,IAAMsB,YAAYZ,EAAWa,aAAaC,aAAad,EAAWe,MAAMC,QACvM,EAIArC,EAAUQ,UAAU8B,QAAU,WAC5BlC,KAAKS,iBAAiByB,SACxB,EAEAtC,EAAUQ,UAAUU,SAAW,SAAUqB,GACvC,IAAIC,EAAUpC,KAAKQ,MAAMiB,GACrBO,EAAQhC,KAAKQ,MAAMmB,mBAAmBU,gBAAgBF,EAAWH,MAAOhC,KAAKM,WAK/E6B,EAAWG,OAASH,EAAWI,gBAAkBvC,KAAKO,IAAIiC,eAAe,CACzEtC,KAAM,QACNuC,QAASL,EACTJ,MAAOnB,EAAAA,GAAamB,GACpBR,MAAOY,IAETD,EAAWG,OAAStC,KAAKO,IAAIiC,eAAe,CAC1CtC,KAAM,WACNuC,QAASL,EACTJ,MAAOnB,EAAAA,GAAamB,GACpBR,MAAOY,GAEX,EAEAxC,EAAUM,KAAO,QACVN,CACT,CA1EA,C,SA0EE8C,GAEF,I,iCC7EIC,EAEJ,SAAU9C,GAGR,SAAS8C,IACP,IAAI7C,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAchE,OAZAF,EAAMI,KAAOyC,EAAWzC,KAKxBJ,EAAMkC,MAAQ,GAMdlC,EAAMgC,YAAc,CAAC,EACdhC,CACT,CAoEA,OAtFAK,EAAAA,EAAAA,IAAUwC,EAAY9C,GAoBtB8C,EAAWvC,UAAUwC,cAAgB,SAAUC,EAAWC,GACxD,IAAIC,EAAa/C,KAAKgD,QACrBF,GAAUG,EAAAA,GAAmCF,EAAYF,EAAW,CAAC,UAAW,eACjF,IAAIK,EAAUH,EAAWG,QAAUH,EAAWG,SAAW,CAAC,EAE1DH,EAAWI,WAAaJ,EAAWI,YAAc,CAC/CC,MA/B2B,QAkCxBF,EAAQG,eAAe,WAG1BH,EAAQI,MAAQ,EAEpB,EAMAX,EAAWvC,UAAUmD,SAAW,SAAUvB,GAWnCA,IAILhC,KAAKgC,MAAQnB,EAAAA,GAAWmB,GAAO,SAAUwB,GACvC,OAAOC,EAAoBzD,KAAKgD,OAAQQ,EAC1C,GAAGxD,MACL,EAMA2C,EAAWvC,UAAUsD,eAAiB,SAAU5B,GAC9C9B,KAAK8B,YAAc2B,EAAoBzD,KAAKgD,OAAQlB,GACpD9B,KAAK2D,UAAY3D,KAAK8B,YAAY6B,SACpC,EAEAhB,EAAWzC,KAAO,QAClByC,EAAWiB,aAAe,CAAC,MAAO,OAAQ,QAAS,QAAS,WAAY,UACxEjB,EAAWkB,cAAgB,CACzBC,YAAa,MACbH,UAAW,OACXI,UAAW,SACXC,eAAe,EACfC,WAAY,CACVC,YAAa,EACbd,MAAO,wBACPe,YAAa,WAEfC,aAAc,UACdC,cAAe,EACf9B,eAAe,EACf+B,EAAG,KAEE3B,CACT,CAxFA,CAwFE4B,EAAAA,GAEF,SAASd,EAAoBT,EAAQlB,GACnC,OAAOjB,EAAAA,GAAa,CAClB8C,UAAWX,EAAOW,UAClBI,UAAWf,EAAOe,UAClBC,cAAehB,EAAOgB,cACtBC,WAAY,IAAIO,EAAAA,EAAMxB,EAAOiB,YAAYQ,eACzClC,cAAeS,EAAOT,cACtB+B,EAAGtB,EAAOsB,GACTxC,GAAa,EAClB,CAEA,Q,oBCtGO,SAAS4C,EAAQC,GACtBA,EAAUC,sBAAsBhF,GAChC+E,EAAUE,uBAAuBlC,GACjCgC,EAAUG,qBAAqBC,EAAAA,GAC/BJ,EAAUK,eAAeL,EAAUM,SAASC,OAAOC,MAAOC,EAAAA,GAC1DT,EAAUU,eAAe,CACvBnF,KAAM,QACNoF,MAAO,QACPC,OAAQ,iBACP,SAAUrE,EAASZ,GACpBA,EAAQkF,cAAc,CACpBC,SAAU,QACVC,MAAOxE,IACN,SAAUD,GACXA,EAAWsC,SAASrC,EAAQc,MAC9B,GACF,IAuBA2C,EAAUU,eAAe,CACvBnF,KAAM,cACNoF,MAAO,gBACPC,OAAQ,QACPI,EAAAA,IACHhB,EAAUU,eAAe,CACvBnF,KAAM,WACNoF,MAAO,WACPC,OAAQ,QACPI,EAAAA,KACHC,EAAAA,EAAAA,IAAgB,QAASC,EAAAA,EAC3B,C","sources":["../node_modules/echarts/lib/component/brush/BrushView.js","../node_modules/echarts/lib/component/brush/BrushModel.js","../node_modules/echarts/lib/component/brush/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport BrushController from '../helper/BrushController.js';\nimport { layoutCovers } from './visualEncoding.js';\nimport ComponentView from '../../view/Component.js';\n\nvar BrushView =\n/** @class */\nfunction (_super) {\n  __extends(BrushView, _super);\n\n  function BrushView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BrushView.type;\n    return _this;\n  }\n\n  BrushView.prototype.init = function (ecModel, api) {\n    this.ecModel = ecModel;\n    this.api = api;\n    this.model;\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  };\n\n  BrushView.prototype.render = function (brushModel, ecModel, api, payload) {\n    this.model = brushModel;\n\n    this._updateController(brushModel, ecModel, api, payload);\n  };\n\n  BrushView.prototype.updateTransform = function (brushModel, ecModel, api, payload) {\n    // PENDING: `updateTransform` is a little tricky, whose layout need\n    // to be calculate mandatorily and other stages will not be performed.\n    // Take care the correctness of the logic. See #11754 .\n    layoutCovers(ecModel);\n\n    this._updateController(brushModel, ecModel, api, payload);\n  };\n\n  BrushView.prototype.updateVisual = function (brushModel, ecModel, api, payload) {\n    this.updateTransform(brushModel, ecModel, api, payload);\n  };\n\n  BrushView.prototype.updateView = function (brushModel, ecModel, api, payload) {\n    this._updateController(brushModel, ecModel, api, payload);\n  };\n\n  BrushView.prototype._updateController = function (brushModel, ecModel, api, payload) {\n    // Do not update controller when drawing.\n    (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n  }; // updateLayout: updateController,\n  // updateVisual: updateController,\n\n\n  BrushView.prototype.dispose = function () {\n    this._brushController.dispose();\n  };\n\n  BrushView.prototype._onBrush = function (eventParam) {\n    var modelId = this.model.id;\n    var areas = this.model.brushTargetManager.setOutputRanges(eventParam.areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!eventParam.isEnd || eventParam.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n    eventParam.isEnd && this.api.dispatchAction({\n      type: 'brushEnd',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  };\n\n  BrushView.type = 'brush';\n  return BrushView;\n}(ComponentView);\n\nexport default BrushView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as visualSolution from '../../visual/visualSolution.js';\nimport Model from '../../model/Model.js';\nimport ComponentModel from '../../model/Component.js';\nvar DEFAULT_OUT_OF_BRUSH_COLOR = '#ddd';\n\nvar BrushModel =\n/** @class */\nfunction (_super) {\n  __extends(BrushModel, _super);\n\n  function BrushModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BrushModel.type;\n    /**\n     * @readOnly\n     */\n\n    _this.areas = [];\n    /**\n     * Current brush painting area settings.\n     * @readOnly\n     */\n\n    _this.brushOption = {};\n    return _this;\n  }\n\n  BrushModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  };\n  /**\n   * If `areas` is null/undefined, range state remain.\n   */\n\n\n  BrushModel.prototype.setAreas = function (areas) {\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.assert(zrUtil.isArray(areas));\n      zrUtil.each(areas, function (area) {\n        zrUtil.assert(area.brushType, 'Illegal areas');\n      });\n    } // If areas is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n\n\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  };\n  /**\n   * Set the current painting brush option.\n   */\n\n\n  BrushModel.prototype.setBrushOption = function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  };\n\n  BrushModel.type = 'brush';\n  BrushModel.dependencies = ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'];\n  BrushModel.defaultOption = {\n    seriesIndex: 'all',\n    brushType: 'rect',\n    brushMode: 'single',\n    transformable: true,\n    brushStyle: {\n      borderWidth: 1,\n      color: 'rgba(210,219,238,0.3)',\n      borderColor: '#D2DBEE'\n    },\n    throttleType: 'fixRate',\n    throttleDelay: 0,\n    removeOnClick: true,\n    z: 10000\n  };\n  return BrushModel;\n}(ComponentModel);\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nexport default BrushModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport brushPreprocessor from './preprocessor.js';\nimport BrushView from './BrushView.js';\nimport BrushModel from './BrushModel.js';\nimport brushVisual from './visualEncoding.js'; // TODO\n\nimport BrushFeature from '../toolbox/feature/Brush.js';\nimport { registerFeature } from '../toolbox/featureManager.js';\nimport { noop } from 'zrender/lib/core/util.js';\nexport function install(registers) {\n  registers.registerComponentView(BrushView);\n  registers.registerComponentModel(BrushModel);\n  registers.registerPreprocessor(brushPreprocessor);\n  registers.registerVisual(registers.PRIORITY.VISUAL.BRUSH, brushVisual);\n  registers.registerAction({\n    type: 'brush',\n    event: 'brush',\n    update: 'updateVisual'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'brush',\n      query: payload\n    }, function (brushModel) {\n      brushModel.setAreas(payload.areas);\n    });\n  });\n  /**\n   * payload: {\n   *      brushComponents: [\n   *          {\n   *              brushId,\n   *              brushIndex,\n   *              brushName,\n   *              series: [\n   *                  {\n   *                      seriesId,\n   *                      seriesIndex,\n   *                      seriesName,\n   *                      rawIndices: [21, 34, ...]\n   *                  },\n   *                  ...\n   *              ]\n   *          },\n   *          ...\n   *      ]\n   * }\n   */\n\n  registers.registerAction({\n    type: 'brushSelect',\n    event: 'brushSelected',\n    update: 'none'\n  }, noop);\n  registers.registerAction({\n    type: 'brushEnd',\n    event: 'brushEnd',\n    update: 'none'\n  }, noop);\n  registerFeature('brush', BrushFeature);\n}"],"names":["BrushView","_super","_this","apply","this","arguments","type","__extends","prototype","init","ecModel","api","model","_brushController","BrushController","getZr","on","zrUtil","_onBrush","mount","render","brushModel","payload","_updateController","updateTransform","layoutCovers","updateVisual","updateView","$from","id","setPanels","brushTargetManager","makePanelOpts","enableBrush","brushOption","updateCovers","areas","slice","dispose","eventParam","modelId","setOutputRanges","isEnd","removeOnClick","dispatchAction","brushId","ComponentView","BrushModel","optionUpdated","newOption","isInit","thisOption","option","visualSolution","inBrush","outOfBrush","color","hasOwnProperty","liftZ","setAreas","area","generateBrushOption","setBrushOption","brushType","dependencies","defaultOption","seriesIndex","brushMode","transformable","brushStyle","borderWidth","borderColor","throttleType","throttleDelay","z","ComponentModel","Model","getItemStyle","install","registers","registerComponentView","registerComponentModel","registerPreprocessor","brushPreprocessor","registerVisual","PRIORITY","VISUAL","BRUSH","brushVisual","registerAction","event","update","eachComponent","mainType","query","noop","registerFeature","BrushFeature"],"sourceRoot":""}