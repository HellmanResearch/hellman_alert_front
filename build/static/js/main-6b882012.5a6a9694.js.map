{"version":3,"file":"static/js/main-6b882012.5a6a9694.js","mappings":"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","sources":["reportWebVitals.ts","store/Server.ts","store/login.ts","store/index.ts"],"sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { defaultUrl } from \"@/contanst\";\nimport { message,notification } from \"antd\";\nimport axios, { AxiosRequestConfig } from \"axios\";\n\nimport Web3 from \"web3\";\nimport store from \".\";\n\n\naxios.interceptors.response.use(\n  (response) => {\n    if (response.status > 299) {\n      throw new Error(response.data?.detail || '接口错误');\n    }\n    return response;\n  },\n  (err) => {\n    if (err.response?.status == 401) {\n      message.warning('No permission to access resource');\n    } else if (err.response?.status == 403) {\n       notification.error({\n        message: 'Login expired',\n        description: `${err.response?.data?.detail || err.response?.data || err}`,\n      });\n       //重新登录\n         loginSign();\n    } else {\n      if (err.response?.data?.detail) { \n          notification.error({\n        message: 'Network Error',\n        description: `${err.response?.data?.detail || err.response?.data || err}`,\n      });\n      }\n     \n    }\n    return Promise.reject(err);\n  }\n);\n\n\n\nconst web3 = new Web3(\n  Web3.givenProvider || \"ws://some.local-or-remote.node:8546\"\n);\n\nexport const loginSign = (public_key?: string) => {\n    if (public_key) { \n        return new Promise((resove,reject) => { \n             axios.get(\n              `${defaultUrl}users/users/signature-content?public_key=${public_key}`,\n            )\n              .then(async (response:any) => {\n              const sign = await web3.eth.personal.sign(\n                response.data.signature_content,\n                public_key,\n                \"test password!\"\n              );\n              //login\n              if (sign) {\n                axios.get(\n                  `${defaultUrl}users/users/login-signature?public_key=${public_key}&signature=${sign}`, {\n                    headers: {\n                      'Cookie':'sessionid=g2kgiwg46urlojurpicv99p2rnx8wnse'\n                    }\n                  }\n                  )\n                    .then((result) => {\n                        resove(result)\n                        store.dispatch({ type: \"user/login\", payload: result.data });\n                  });\n              }\n            });\n        })\n    }\n \n  return new Promise((resove, reject) => {\n    if (window.ethereum) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then(async (res: any) => {\n          const public_key = res[0];\n          axios.get(\n            `${defaultUrl}users/users/signature-content?public_key=${public_key}`,\n          )\n            .then(async (response: any) => {\n              const sign = await web3.eth.personal.sign(\n                response.data.signature_content,\n                public_key,\n                \"test password!\"\n              );\n              //login\n              if (sign) {\n                axios.get(\n                  `${defaultUrl}users/users/login-signature?public_key=${public_key}&signature=${sign}`,\n                  \n                )\n                  .then((result) => {\n                    resove(result)\n                    store.dispatch({ type: \"user/login\", payload: result.data });\n                  });\n              }\n            });\n\n        })\n    }\n    });\n  \n\n }","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {},\n  reducers: {\n      login: (state, action) => {\n          let newState = { ...state, ...action.payload }\n          delete newState.cancel;\n          if (action.payload.cancel) { \n              newState= {}\n          }\n          localStorage.setItem('login', JSON.stringify(newState))\n          return newState;\n    },\n  },\n});\n\nexport default userSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './login'\nexport default configureStore({\n    reducer:{\n        user:userReducer\n    }\n})\n\n/*\n\"key\": \"string\",\n  \"display\": \"string\",\n  \"fields_attr\": {},\n  \"rule_template\": \"string\",\n  \"rules_hint\": \"string\",\n  \"query_attr\": {},\n  \"query_template\": \"string\",\n  \"group\": 0\n}\n*/"],"names":["onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","response","status","Error","data","detail","err","message","notification","description","loginSign","Promise","reject","web3","Web3","public_key","resove","defaultUrl","eth","personal","sign","signature_content","headers","result","store","type","payload","window","ethereum","request","method","res","createSlice","name","initialState","reducers","login","state","action","newState","cancel","localStorage","setItem","JSON","stringify","configureStore","reducer","user","userReducer"],"sourceRoot":""}