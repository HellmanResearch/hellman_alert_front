{"version":3,"file":"static/js/1388.36748c15.js","mappings":"sMAKIA,EAAO,OACPC,EAAYC,KAAKC,MASjBC,EAAc,CAAC,UAAW,aAAc,YACxCC,GAAiBC,EAAAA,EAAAA,IAAIF,GAAa,SAAUG,GAAQ,MAAO,UAAYA,EAAKC,aAAe,IAChF,SAASC,EAAgBC,EAAYC,EAAOC,EAAIC,GAC3D,IAAIC,EAA2B,MAAjBH,EAAMG,QAAkB,EAAIH,EAAMG,QAChD,GAAIF,aAAcG,EAAAA,GACdL,EAAW,UAAWI,OAD1B,CAIA,GAhBJ,SAAqBH,GACjB,IAAIK,EAAOL,EAAMK,KACjB,OAAe,MAARA,GAAgBA,IAAShB,CACpC,CAaQiB,CAAYN,GAAQ,CACpB,IAAIK,GAAOE,EAAAA,EAAAA,IAAeP,EAAMK,MAChCN,EAAW,OAAQM,EAAKG,OACxB,IAAIC,EAAmC,MAArBT,EAAMS,YAClBT,EAAMS,YAAcJ,EAAKF,QAAUA,EACnCE,EAAKF,QAAUA,GACjBD,GAAeO,EAAc,IAC7BV,EAAW,eAAgBU,EAEnC,MAEIV,EAAW,OAAQV,GAEvB,GAzBJ,SAAuBW,GACnB,IAAIU,EAASV,EAAMU,OACnB,OAAiB,MAAVA,GAAkBA,IAAWrB,CACxC,CAsBQsB,CAAcX,GAAQ,CACtB,IAAIU,GAASH,EAAAA,EAAAA,IAAeP,EAAMU,QAClCX,EAAW,SAAUW,EAAOF,OAC5B,IAAII,EAAcZ,EAAMa,cAClBZ,EAAGa,eACH,EACFC,EAAeH,GAAeZ,EAAMgB,WAAa,GAAKJ,EAAc,EACpEK,EAAuC,MAAvBjB,EAAMiB,cACpBjB,EAAMiB,cAAgBP,EAAOP,QAAUA,EACvCO,EAAOP,QAAUA,EACnBe,EAAclB,EAAMkB,YAUxB,IATIhB,GAA+B,IAAhBa,IACfhB,EAAW,eAAgBgB,IAE3Bb,GAAegB,IACfnB,EAAW,cAAemB,EAAc,SAAW,SAEnDhB,GAAee,EAAgB,IAC/BlB,EAAW,iBAAkBkB,GAE7BjB,EAAMmB,SAAU,CAChB,IAAIC,GAAKC,EAAAA,EAAAA,GAAYpB,GAAKkB,EAAWC,EAAG,GAAIE,EAAiBF,EAAG,GAC5DD,IACAG,EAAiBhC,EAAUgC,GAAkB,GAC7CvB,EAAW,mBAAoBoB,EAASI,KAAK,OACzCD,GAAkBpB,IAClBH,EAAW,oBAAqBuB,GAG5C,MACSpB,GACLH,EAAW,mBAAoBV,GAEnC,IAAK,IAAImC,EAAI,EAAGA,EAAI/B,EAAYgC,OAAQD,IAAK,CACzC,IAAIE,EAAWjC,EAAY+B,GAC3B,GAAItB,GAAeF,EAAM0B,KAAcC,EAAAA,GAAmBD,GAAW,CACjE,IAAIE,EAAM5B,EAAM0B,IAAaC,EAAAA,GAAmBD,GAChDE,GAAO7B,EAAWL,EAAe8B,GAAII,EACzC,CACJ,CACJ,MACS1B,GACLH,EAAW,SAAUV,EAxDzB,CA0DJ,C,mHC3EIwC,GAAYC,EAAAA,EAAAA,IAAY,GAAI,IAChC,SAASC,EAAQC,GACb,YAAaC,IAAND,CACX,CACA,SAASE,EAAMF,GACX,YAAaC,IAAND,CACX,CACA,SAASG,EAAkBC,EAAUC,EAAUC,GAE3C,IADA,IAAI3C,EAAM,CAAC,EACF6B,EAAIa,EAAUb,GAAKc,IAAUd,EAAG,CACrC,IAAIe,EAAMH,EAASZ,GAAGe,SACVN,IAARM,IAMA5C,EAAI4C,GAAOf,EAEnB,CACA,OAAO7B,CACX,CACA,SAAS6C,EAAUC,EAAQC,GACvB,IAAIC,EAAYF,EAAOF,MAAQG,EAAOH,IAEtC,OADgBE,EAAOG,MAAQF,EAAOE,KAClBD,CACxB,CACA,SAASE,EAAUC,GACf,IAAItB,EACAY,EAAWU,EAAMV,SACjBQ,EAAME,EAAMF,IAChB,GAAIV,EAAMU,GAAM,CACZ,IAAIG,EAAOD,EAAMC,KAAMC,EAAAA,EAAAA,IAAcJ,GAErC,GADAK,EAAYpB,EAAWiB,IACnBI,EAAAA,EAAAA,IAAQd,GACR,IAAKZ,EAAI,EAAGA,EAAIY,EAASX,SAAUD,EAAG,CAClC,IAAI2B,EAAKf,EAASZ,GACR,MAAN2B,GACAC,EAAAA,GAAgBL,EAAKF,EAAUM,GAEvC,MAEKjB,EAAMY,EAAMO,SAAUC,EAAAA,EAAAA,IAASR,EAAMO,OAC1CD,EAAAA,GAAgBL,EAAKK,EAAAA,GAAmBN,EAAMO,MAEtD,MAEIP,EAAMC,IAAMK,EAAAA,GAAmBN,EAAMO,MAEzC,OAAOP,EAAMC,GACjB,CACA,SAASQ,EAAUC,EAAWC,EAAQC,EAAQC,EAAUrB,GACpD,KAAOqB,GAAYrB,IAAUqB,EAAU,CACnC,IAAIR,EAAKO,EAAOC,GACN,MAANR,GACAC,EAAAA,GAAiBI,EAAWX,EAAUM,GAAKM,EAEnD,CACJ,CACA,SAASG,EAAaJ,EAAWE,EAAQC,EAAUrB,GAC/C,KAAOqB,GAAYrB,IAAUqB,EAAU,CACnC,IAAIR,EAAKO,EAAOC,GAChB,GAAU,MAANR,EACA,GAAIjB,EAAMiB,EAAGP,KAAM,CACf,IAAIiB,EAAWT,EAAAA,GAAeD,EAAGJ,KACjCK,EAAAA,GAAgBS,EAAUV,EAAGJ,IACjC,MAEIK,EAAAA,GAAgBI,EAAWL,EAAGJ,IAG1C,CACJ,CACO,SAASE,EAAYa,EAAUhB,GAClC,IAAIP,EACAQ,EAAMD,EAAMC,IACZgB,EAAWD,GAAYA,EAASE,OAAS,CAAC,EAC1CA,EAAQlB,EAAMkB,OAAS,CAAC,EAC5B,GAAID,IAAaC,EAAjB,CAGA,IAAKzB,KAAOyB,EAAO,CACf,IAAIC,EAAMD,EAAMzB,GACNwB,EAASxB,KACP0B,KACI,IAARA,EACAlB,EAAImB,aAAa3B,EAAK,KAET,IAAR0B,EACLlB,EAAIoB,gBAAgB5B,GA1FxB,MA6FQA,EAAI6B,WAAW,GACfrB,EAAImB,aAAa3B,EAAK0B,GAET,gBAAR1B,GAAiC,UAARA,EAC9BQ,EAAIsB,eAAeC,EAAAA,GAAO/B,EAAK0B,GAlGnC,KAoGS1B,EAAI6B,WAAW,GACpBrB,EAAIsB,eAAeE,EAAAA,GAAehC,EAAK0B,GArG3C,KAuGS1B,EAAI6B,WAAW,GACpBrB,EAAIsB,eAAeG,EAAAA,GAASjC,EAAK0B,GAGjClB,EAAImB,aAAa3B,EAAK0B,GAItC,CACA,IAAK1B,KAAOwB,EACFxB,KAAOyB,GACTjB,EAAIoB,gBAAgB5B,EAhC5B,CAmCJ,CAiFA,SAASkC,EAAWX,EAAUhB,GAC1B,IAAIC,EAAOD,EAAMC,IAAMe,EAASf,IAC5B2B,EAAQZ,EAAS1B,SACjBe,EAAKL,EAAMV,SACX0B,IAAahB,IAGjBG,EAAYa,EAAUhB,GAClBf,EAAQe,EAAMO,MACVnB,EAAMwC,IAAUxC,EAAMiB,GAClBuB,IAAUvB,GA1F1B,SAAwBK,EAAWkB,EAAOC,GAatC,IAZA,IAQIC,EACAC,EACAC,EAVAC,EAAc,EACdC,EAAc,EACdC,EAAYP,EAAMjD,OAAS,EAC3ByD,EAAgBR,EAAM,GACtBS,EAAcT,EAAMO,GACpBG,EAAYT,EAAMlD,OAAS,EAC3B4D,EAAgBV,EAAM,GACtBW,EAAcX,EAAMS,GAKjBL,GAAeE,GAAaD,GAAeI,GACzB,MAAjBF,EACAA,EAAgBR,IAAQK,GAEJ,MAAfI,EACLA,EAAcT,IAAQO,GAEA,MAAjBI,EACLA,EAAgBV,IAAQK,GAEJ,MAAfM,EACLA,EAAcX,IAAQS,GAEjB5C,EAAU0C,EAAeG,IAC9BZ,EAAWS,EAAeG,GAC1BH,EAAgBR,IAAQK,GACxBM,EAAgBV,IAAQK,IAEnBxC,EAAU2C,EAAaG,IAC5Bb,EAAWU,EAAaG,GACxBH,EAAcT,IAAQO,GACtBK,EAAcX,IAAQS,IAEjB5C,EAAU0C,EAAeI,IAC9Bb,EAAWS,EAAeI,GAC1BlC,EAAAA,GAAiBI,EAAW0B,EAAcnC,IAAKK,EAAAA,GAAgB+B,EAAYpC,MAC3EmC,EAAgBR,IAAQK,GACxBO,EAAcX,IAAQS,IAEjB5C,EAAU2C,EAAaE,IAC5BZ,EAAWU,EAAaE,GACxBjC,EAAAA,GAAiBI,EAAW2B,EAAYpC,IAAKmC,EAAcnC,KAC3DoC,EAAcT,IAAQO,GACtBI,EAAgBV,IAAQK,KAGpBjD,EAAQ6C,KACRA,EAAczC,EAAkBuC,EAAOK,EAAaE,IAGpDlD,EADJ8C,EAAWD,EAAYS,EAAc9C,QAKjCuC,EAAYJ,EAAMG,IACJjC,MAAQyC,EAAczC,IAJpCQ,EAAAA,GAAiBI,EAAWX,EAAUwC,GAAgBH,EAAcnC,MAQhE0B,EAAWK,EAAWO,GACtBX,EAAMG,QAAY5C,EAClBmB,EAAAA,GAAiBI,EAAWsB,EAAU/B,IAAKmC,EAAcnC,MAGjEsC,EAAgBV,IAAQK,KAG5BD,GAAeE,GAAaD,GAAeI,KACvCL,EAAcE,EAEd1B,EAAUC,EADuB,MAAxBmB,EAAMS,EAAY,GAAa,KAAOT,EAAMS,EAAY,GAAGrC,IACvC4B,EAAOK,EAAaI,GAGjDxB,EAAaJ,EAAWkB,EAAOK,EAAaE,GAGxD,CAYgBM,CAAexC,EAAK2B,EAAOvB,GAG1BjB,EAAMiB,IACPjB,EAAM4B,EAAST,OACfD,EAAAA,GAAmBL,EAAK,IAE5BQ,EAAUR,EAAK,KAAMI,EAAI,EAAGA,EAAG1B,OAAS,IAEnCS,EAAMwC,GACXd,EAAab,EAAK2B,EAAO,EAAGA,EAAMjD,OAAS,GAEtCS,EAAM4B,EAAST,OACpBD,EAAAA,GAAmBL,EAAK,IAGvBe,EAAST,OAASP,EAAMO,OACzBnB,EAAMwC,IACNd,EAAab,EAAK2B,EAAO,EAAGA,EAAMjD,OAAS,GAE/C2B,EAAAA,GAAmBL,EAAKD,EAAMO,OAEtC,CACe,SAASmC,EAAM1B,EAAUhB,GACpC,GAAIN,EAAUsB,EAAUhB,GACpB2B,EAAWX,EAAUhB,OAEpB,CACD,IAAIC,EAAMe,EAASf,IACf0C,EAAWrC,EAAAA,GAAeL,GAC9BF,EAAUC,GACO,OAAb2C,IACArC,EAAAA,GAAiBqC,EAAU3C,EAAMC,IAAKK,EAAAA,GAAgBL,IACtDa,EAAa6B,EAAU,CAAC3B,GAAW,EAAG,GAE9C,CACA,OAAOhB,CACX,C","sources":["../node_modules/zrender/lib/svg/mapStyleToAttrs.js","../node_modules/zrender/lib/svg/patch.js"],"sourcesContent":["import { DEFAULT_PATH_STYLE } from '../graphic/Path.js';\nimport ZRImage from '../graphic/Image.js';\nimport { getLineDash } from '../canvas/dashStyle.js';\nimport { map } from '../core/util.js';\nimport { normalizeColor } from './helper.js';\nvar NONE = 'none';\nvar mathRound = Math.round;\nfunction pathHasFill(style) {\n    var fill = style.fill;\n    return fill != null && fill !== NONE;\n}\nfunction pathHasStroke(style) {\n    var stroke = style.stroke;\n    return stroke != null && stroke !== NONE;\n}\nvar strokeProps = ['lineCap', 'miterLimit', 'lineJoin'];\nvar svgStrokeProps = map(strokeProps, function (prop) { return \"stroke-\" + prop.toLowerCase(); });\nexport default function mapStyleToAttrs(updateAttr, style, el, forceUpdate) {\n    var opacity = style.opacity == null ? 1 : style.opacity;\n    if (el instanceof ZRImage) {\n        updateAttr('opacity', opacity);\n        return;\n    }\n    if (pathHasFill(style)) {\n        var fill = normalizeColor(style.fill);\n        updateAttr('fill', fill.color);\n        var fillOpacity = style.fillOpacity != null\n            ? style.fillOpacity * fill.opacity * opacity\n            : fill.opacity * opacity;\n        if (forceUpdate || fillOpacity < 1) {\n            updateAttr('fill-opacity', fillOpacity);\n        }\n    }\n    else {\n        updateAttr('fill', NONE);\n    }\n    if (pathHasStroke(style)) {\n        var stroke = normalizeColor(style.stroke);\n        updateAttr('stroke', stroke.color);\n        var strokeScale = style.strokeNoScale\n            ? el.getLineScale()\n            : 1;\n        var strokeWidth = (strokeScale ? (style.lineWidth || 0) / strokeScale : 0);\n        var strokeOpacity = style.strokeOpacity != null\n            ? style.strokeOpacity * stroke.opacity * opacity\n            : stroke.opacity * opacity;\n        var strokeFirst = style.strokeFirst;\n        if (forceUpdate || strokeWidth !== 1) {\n            updateAttr('stroke-width', strokeWidth);\n        }\n        if (forceUpdate || strokeFirst) {\n            updateAttr('paint-order', strokeFirst ? 'stroke' : 'fill');\n        }\n        if (forceUpdate || strokeOpacity < 1) {\n            updateAttr('stroke-opacity', strokeOpacity);\n        }\n        if (style.lineDash) {\n            var _a = getLineDash(el), lineDash = _a[0], lineDashOffset = _a[1];\n            if (lineDash) {\n                lineDashOffset = mathRound(lineDashOffset || 0);\n                updateAttr('stroke-dasharray', lineDash.join(','));\n                if (lineDashOffset || forceUpdate) {\n                    updateAttr('stroke-dashoffset', lineDashOffset);\n                }\n            }\n        }\n        else if (forceUpdate) {\n            updateAttr('stroke-dasharray', NONE);\n        }\n        for (var i = 0; i < strokeProps.length; i++) {\n            var propName = strokeProps[i];\n            if (forceUpdate || style[propName] !== DEFAULT_PATH_STYLE[propName]) {\n                var val = style[propName] || DEFAULT_PATH_STYLE[propName];\n                val && updateAttr(svgStrokeProps[i], val);\n            }\n        }\n    }\n    else if (forceUpdate) {\n        updateAttr('stroke', NONE);\n    }\n}\n","import { isArray, isObject } from '../core/util.js';\nimport { createElement, createVNode, XMLNS, XML_NAMESPACE, XLINKNS } from './core.js';\nimport * as api from './domapi.js';\nvar colonChar = 58;\nvar xChar = 120;\nvar emptyNode = createVNode('', '');\nfunction isUndef(s) {\n    return s === undefined;\n}\nfunction isDef(s) {\n    return s !== undefined;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var map = {};\n    for (var i = beginIdx; i <= endIdx; ++i) {\n        var key = children[i].key;\n        if (key !== undefined) {\n            if (process.env.NODE_ENV !== 'production') {\n                if (map[key] != null) {\n                    console.error(\"Duplicate key \" + key);\n                }\n            }\n            map[key] = i;\n        }\n    }\n    return map;\n}\nfunction sameVnode(vnode1, vnode2) {\n    var isSameKey = vnode1.key === vnode2.key;\n    var isSameTag = vnode1.tag === vnode2.tag;\n    return isSameTag && isSameKey;\n}\nfunction createElm(vnode) {\n    var i;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n        var elm = (vnode.elm = createElement(tag));\n        updateAttrs(emptyNode, vnode);\n        if (isArray(children)) {\n            for (i = 0; i < children.length; ++i) {\n                var ch = children[i];\n                if (ch != null) {\n                    api.appendChild(elm, createElm(ch));\n                }\n            }\n        }\n        else if (isDef(vnode.text) && !isObject(vnode.text)) {\n            api.appendChild(elm, api.createTextNode(vnode.text));\n        }\n    }\n    else {\n        vnode.elm = api.createTextNode(vnode.text);\n    }\n    return vnode.elm;\n}\nfunction addVnodes(parentElm, before, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        var ch = vnodes[startIdx];\n        if (ch != null) {\n            api.insertBefore(parentElm, createElm(ch), before);\n        }\n    }\n}\nfunction removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        var ch = vnodes[startIdx];\n        if (ch != null) {\n            if (isDef(ch.tag)) {\n                var parent_1 = api.parentNode(ch.elm);\n                api.removeChild(parent_1, ch.elm);\n            }\n            else {\n                api.removeChild(parentElm, ch.elm);\n            }\n        }\n    }\n}\nexport function updateAttrs(oldVnode, vnode) {\n    var key;\n    var elm = vnode.elm;\n    var oldAttrs = oldVnode && oldVnode.attrs || {};\n    var attrs = vnode.attrs || {};\n    if (oldAttrs === attrs) {\n        return;\n    }\n    for (key in attrs) {\n        var cur = attrs[key];\n        var old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, '');\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key === 'xmlns:xlink' || key === 'xmlns') {\n                    elm.setAttributeNS(XMLNS, key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    elm.setAttributeNS(XML_NAMESPACE, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    elm.setAttributeNS(XLINKNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nfunction updateChildren(parentElm, oldCh, newCh) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx;\n    var idxInOld;\n    var elmToMove;\n    var before;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\n            patchVnode(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\n            patchVnode(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\n            patchVnode(oldStartVnode, newEndVnode);\n            api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\n            patchVnode(oldEndVnode, newStartVnode);\n            api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (isUndef(oldKeyToIdx)) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (isUndef(idxInOld)) {\n                api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.tag !== newStartVnode.tag) {\n                    api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\n                }\n                else {\n                    patchVnode(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                }\n            }\n            newStartVnode = newCh[++newStartIdx];\n        }\n    }\n    if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n        if (oldStartIdx > oldEndIdx) {\n            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);\n        }\n        else {\n            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n        }\n    }\n}\nfunction patchVnode(oldVnode, vnode) {\n    var elm = (vnode.elm = oldVnode.elm);\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (oldVnode === vnode) {\n        return;\n    }\n    updateAttrs(oldVnode, vnode);\n    if (isUndef(vnode.text)) {\n        if (isDef(oldCh) && isDef(ch)) {\n            if (oldCh !== ch) {\n                updateChildren(elm, oldCh, ch);\n            }\n        }\n        else if (isDef(ch)) {\n            if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, '');\n            }\n            addVnodes(elm, null, ch, 0, ch.length - 1);\n        }\n        else if (isDef(oldCh)) {\n            removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n        }\n        else if (isDef(oldVnode.text)) {\n            api.setTextContent(elm, '');\n        }\n    }\n    else if (oldVnode.text !== vnode.text) {\n        if (isDef(oldCh)) {\n            removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n        }\n        api.setTextContent(elm, vnode.text);\n    }\n}\nexport default function patch(oldVnode, vnode) {\n    if (sameVnode(oldVnode, vnode)) {\n        patchVnode(oldVnode, vnode);\n    }\n    else {\n        var elm = oldVnode.elm;\n        var parent_2 = api.parentNode(elm);\n        createElm(vnode);\n        if (parent_2 !== null) {\n            api.insertBefore(parent_2, vnode.elm, api.nextSibling(elm));\n            removeVnodes(parent_2, [oldVnode], 0, 0);\n        }\n    }\n    return vnode;\n}\n"],"names":["NONE","mathRound","Math","round","strokeProps","svgStrokeProps","map","prop","toLowerCase","mapStyleToAttrs","updateAttr","style","el","forceUpdate","opacity","ZRImage","fill","pathHasFill","normalizeColor","color","fillOpacity","stroke","pathHasStroke","strokeScale","strokeNoScale","getLineScale","strokeWidth","lineWidth","strokeOpacity","strokeFirst","lineDash","_a","getLineDash","lineDashOffset","join","i","length","propName","DEFAULT_PATH_STYLE","val","emptyNode","createVNode","isUndef","s","undefined","isDef","createKeyToOldIdx","children","beginIdx","endIdx","key","sameVnode","vnode1","vnode2","isSameKey","tag","createElm","vnode","elm","createElement","updateAttrs","isArray","ch","api","text","isObject","addVnodes","parentElm","before","vnodes","startIdx","removeVnodes","parent_1","oldVnode","oldAttrs","attrs","cur","setAttribute","removeAttribute","charCodeAt","setAttributeNS","XMLNS","XML_NAMESPACE","XLINKNS","patchVnode","oldCh","newCh","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","updateChildren","patch","parent_2"],"sourceRoot":""}