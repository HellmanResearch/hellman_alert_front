{"version":3,"file":"static/js/main-234957ad.d95ae55f.js","mappings":"wLAaA,aAAe,GAAqD,IAAlDA,EAAO,EAAPA,QACVC,GAAaC,EAAAA,EAAAA,QAAuB,MAgE1C,OA/DAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EACJ,GAAIH,GAAcA,EAAWI,QAAS,CACpC,IAAMC,EAAQC,EAAAA,GAAyBN,EAAWI,SAC9CC,GACFF,EAAWE,GACFE,UAAU,CACjBC,OAAM,UAAMT,aAAO,EAAPA,EAASS,OACrBC,OAAM,QACJC,KAAM,SACHX,aAAO,EAAPA,EAASU,OAEdE,QAAS,CACPC,MAAM,EACNC,UAAW,SAAUC,GACnB,IAAMC,EAAYC,MAAMC,QAAQH,EAAOI,OACnCJ,EAAOI,MAAM,GACbJ,EAAOI,MACX,MAAM,GAAN,OAAUJ,EAAOK,OAAM,YAAIL,EAAOM,KAAI,cACpCC,OAAON,GAAaM,OAAON,GAAWO,QAAQ,GAAKP,EAEvD,GAEFQ,SAAU,CACRb,KAAM,UAERc,OAAQzB,aAAO,EAAPA,EAASyB,SAGnBrB,EAAWG,EAAAA,GAAaN,EAAWI,QAAS,QAAQG,UAAU,CAC5DkB,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAEhBrB,MAAO,CACLE,KAAM,WACNoB,cAAe,CACbC,MAAO,QAGTC,MAAMjC,aAAO,EAAPA,EAASS,QAAS,IAE1BC,MAAO,CACLC,KAAM,SAERc,OAAQ,CACN,CACEQ,MAAMjC,aAAO,EAAPA,EAASyB,SAAU,GACzBd,KAAM,UAKhB,CACA,OAAO,WACDP,GACFA,EAAS8B,SAEb,CACF,GAAG,CAACjC,EAAYD,KAGd,gBAAKmC,GAAG,OAAOC,IAAKnC,EAAYoC,MAAO,CAAEC,MAAO,IAAMC,OAAQ,MAEjE,C,oJCxED,aAEE,OADiBC,EAAAA,EAAAA,OAEf,iBAAKC,UAAU,aAAY,WACzB,iBAAKA,UAAU,kBAAiB,WAC9B,iBACEA,UAAU,kBACVJ,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,OAAQ,WAEVC,QAAS,WACPC,OAAOC,KAAK,uBAEd,EAAE,WACF,iBAAMN,UAAU,WAAU,UAAEO,EAAAA,EAAAA,GAAO,cAEnC,iBAAMP,UAAU,YAAW,wCAe7B,iBAAKA,UAAU,mBAAkB,UAC9BQ,EAAAA,GAAAA,KAAiB,SAACC,GACjB,MAAkB,SAAdA,EAAKvC,MACA,cAAGwC,KAAI,iBAAYD,EAAKE,MAAO,UAAEJ,EAAAA,EAAAA,GAAOE,EAAKG,QAGpD,iBAEER,QAAS,WACHK,EAAKE,MACPN,OAAOC,KAAKG,EAAKE,KAErB,EAAE,UACDJ,EAAAA,EAAAA,GAAOE,EAAKG,MANRH,EAAKG,IAShB,KACA,gBACEC,IAAKC,EACLC,IAAI,GACJnB,MAAO,CAAEC,MAAO,GAAImB,WAAY,GAChCZ,QAAS,WACPC,OAAOC,KAAK,sCACd,KAEF,SAACW,EAAA,EAAgB,CACfrB,MAAO,CAAEsB,SAAU,GAAI3B,MAAO,OAAQyB,WAAY,GAClDZ,QAAS,WACPC,OAAOC,KAAK,QACd,KAEF,SAACa,EAAA,EAAW,CACVvB,MAAO,CAAEsB,SAAU,GAAI3B,MAAO,OAAQyB,WAAY,GAClDZ,QAAS,WACPC,OAAOC,KAAK,YACd,WAIN,gBAAKN,UAAU,mBAAkB,UAC/B,gBAAKA,UAAU,oBAAmB,SAC/BoB,OAAOC,KAAKC,EAAAA,IAAUC,KAAI,SAACd,GAC1B,OACE,SAAC,KAAO,CAACe,GAAIF,EAAAA,GAASb,GAAM,SACzBA,GAD+BA,EAItC,UAKT,C,+RCpFD,aACE,OAAwBgB,EAAAA,EAAAA,WAAS,GAAM,eAAhCrD,EAAI,KAAEsD,EAAO,KACdC,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,iCACE,SAAC,IAAM,CACL5B,UAAU,+BACVI,QAAS,WACPsB,GAAQ,EACV,EAAE,oBAGJ,UAAC,IAAK,CACJG,MAAM,GACNvB,KAAMlC,EACN0D,cAAe,gBACfC,OAAQ,KACRC,SAAU,WACRN,GAAQ,EACV,EAAE,WACF,cAAG1B,UAAU,sBAAqB,kCAClC,cAAGA,UAAU,qBAAoB,8DAGjC,UAAC,IAAM,CACLA,UAAU,6CACVI,QAxCY,WAKV,IAAD,EAHFC,OAAO4B,SAKJ,QAAN,EAAA5B,cAAM,OAAN,EAAQ4B,SACLC,QAAQ,CAAEC,OAAQ,wBAClBC,MAAK,SAACC,IACLC,EAAAA,EAAAA,GAAUD,EAAI,IAAID,MAAK,SAACC,GACtBV,EAAS,CAAEzD,KAAM,aAAcqE,QAASF,EAAI7C,MAC9C,IACAkC,GAAQ,EACV,IAVFrB,OAAOC,KAAK,uBAYhB,EAwB6B,WACrB,iBAAMN,UAAU,eAAc,uBAC9B,iBAAMA,UAAU,eAAc,UAAEO,EAAAA,EAAAA,GAAO,8BAKhD,E,+BCzCD,GAFwBiC,EAAAA,EAAAA,YAExB,WACE,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAAMnD,GAC1DiC,GAAWC,EAAAA,EAAAA,MACXkB,GAAW/C,EAAAA,EAAAA,MACjB,GAAwB0B,EAAAA,EAAAA,WAAS,GAAM,eAAhCrD,EAAI,KAAEsD,EAAO,KACpB,GAA0BD,EAAAA,EAAAA,UAAS,IAAG,eAA/BsB,EAAK,KAAEC,EAAQ,KAChBC,GAAUC,EAAAA,EAAAA,KACd,SAACC,GAAgB,OAAKA,aAAK,EAALA,EAAOC,KAAKC,UAAU,GAC5CC,EAAAA,IAuBF,OArBA5F,EAAAA,EAAAA,YAAU,WAKV,GAAG,KAiBD,UAAC,KAAM,CAACsC,UAAU,aAAY,WAC5B,iBACEA,UAAU,kBACVI,QAAS,WACP0C,EAAS,WACX,EAAE,WACF,gBAAK9C,UAAU,WAAWa,IAAK0C,KAC/B,kBAAMvD,UAAU,YAAW,0BAEzB,iBAAMA,UAAU,iBAAgB,yBAGpC,gBAAKA,UAAU,oBAAmB,SAC/BoB,OAAOC,KAAKC,EAAAA,IAAUC,KAAI,SAACd,GAC1B,OACE,SAAC,KAAO,CAACe,GAAIF,EAAAA,GAASb,GAAM,SACzB,gBAAG+C,EAAQ,EAARA,SAAQ,OACV,iBAAKxD,UAAU,YAAW,WACxB,0BAAOS,IACN+C,IAAY,iBAAMxD,UAAU,kBACzB,GALwBS,EAStC,OAEF,iBAAKT,UAAU,mBAAkB,UAC9BQ,EAAAA,GAAAA,KAAiB,SAACC,GACjB,MAAkB,SAAdA,EAAKvC,MACA,cAAGwC,KAAI,iBAAYD,EAAKE,MAAO,UAAEJ,EAAAA,EAAAA,GAAOE,EAAKG,QAGpD,iBAEER,QAAS,WACHK,EAAKE,MACPN,OAAOC,KAAKG,EAAKE,KAErB,EAAE,UACDJ,EAAAA,EAAAA,GAAOE,EAAKG,MANRH,EAAKG,IAShB,KAEA,SAAC,IAAO,CAACiB,MAAM,WAAU,UACvB,gBACEhB,IAAKC,EACLC,IAAI,GACJnB,MAAO,CAAEC,MAAO,GAAImB,WAAY,GAChCZ,QAAS,WACPC,OAAOC,KAAK,sCACd,OAGJ,SAAC,IAAO,CAACuB,MAAM,gBAAe,UAC5B,SAACZ,EAAA,EAAgB,CACfrB,MAAO,CAAEsB,SAAU,GAAI3B,MAAO,OAAQyB,WAAY,GAClDZ,QAAS,WACPC,OAAOC,KAAK,QACd,OAGJ,SAAC,IAAO,CAACuB,MAAM,cAAa,UAC1B,SAACV,EAAA,EAAW,CACVvB,MAAO,CAAEsB,SAAU,GAAI3B,MAAO,OAAQyB,WAAY,GAClDZ,QAAS,WACPC,OAAOC,KAAK,YACd,SAILmC,GACC,iBACEzC,UAAU,+BACVI,QAAS,WACPsB,GAAQ,GACR+B,EAAAA,EAAAA,IAAU,GAAD,OAAIC,EAAAA,GAAU,sBAAqBtB,MAAK,SAACC,GAAS,IAAD,EACxDW,GAAiB,QAAR,EAAAX,EAAI7C,YAAI,aAAR,EAAUuD,QAAS,GAC9B,GACF,EAAE,WACF,iBAAM/C,UAAU,OAAM,UAAEO,EAAAA,EAAAA,GAAO,uBAC/B,iBAAMP,UAAU,OAAM,mBAAK2D,OAAOV,GAASW,MAAM,EAAG,GAAE,cAAMD,OAC1DV,GACAW,OAAO,UAGX,SAAC,EAAK,KAER,SAAC,IAAK,CACJtD,KAAMlC,EACNyD,MAAM,GACNC,cAAc,YACdE,SAAU,kBAAMN,GAAQ,EAAM,EAC9BK,OAAQ,KAAK,UACb,iBACEnC,MAAO,CACLK,QAAS,OACTC,WAAY,SACZ2D,cAAe,UACf,WACF,eAAG7D,UAAU,QAAQJ,MAAO,CAAEL,MAAO,QAAS,wBAE5C,iBAAMK,MAAO,CAAEkE,WAAY,IAAK,SAAEf,QAEpC,SAAC,IAAM,CACL/C,UAAU,cACVJ,MAAO,CAAEoB,UAAW,IACpBZ,QA1HQ,WAChB,IAAMZ,EAAOkD,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IACzDY,EAAAA,EAAAA,KACQ,GAAD,OAAIC,EAAAA,GAAU,iCACdlE,IAEJ4C,MAAK,SAACC,GAELV,EAAS,CACPzD,KAAM,aACNqE,QAAS,CAAEwB,QAAQ,IAEvB,GACJ,EA6G6B,2BAO9B,E,yIChKD,aACE,OACE,iBAAK/D,UAAU,aAAY,WACzB,iBAAKA,UAAU,OAAM,WACnB,eAAIA,UAAU,QAAO,4BACrB,cAAGA,UAAU,OAAM,mDACnB,SAAC,IAAM,CAACA,UAAU,yBAAwB,qBAE5C,gBAAKA,UAAU,QAAO,UACpB,gBAAKa,IAAKmD,QAIjB,C,yJClBM,IAAMxD,EAAe,CAC1B,CAAEI,IAAK,UAAWD,KAAM,uCACxB,CAAEC,IAAK,SAAUD,KAAM,sCACvB,CAAEC,IAAK,QAASD,KAAM,8BAA8BzC,KAAK,SAK9CoD,EAAmC,CAE9C2C,QAAS,UACTC,cAAe,YACfC,UAAW,UAGAC,EAAY,EASVC,EAAUhE,OAAOiE,SAASC,SAAW,KAAOlE,OAAOiE,SAASE,MAAI,sBAChEd,EAAarD,OAAOiE,SAASC,SAAW,KAAOlE,OAAOiE,SAASE,KAAO,U","sources":["components/echarts/index.tsx","components/footer/index.tsx","components/login/index.tsx","components/header/index.tsx","components/noData/index.tsx","contanst.ts"],"sourcesContent":["/** @format */\n\n// 引入 ECharts 主模块\nimport * as echarts from \"echarts\";\n\n// 引入柱状图\nimport \"echarts/lib/chart/line\";\n// 引入提示框和标题组件\n//import \"echarts/lib/components/axis\";\nimport \"echarts/lib/component/tooltip\";\nimport \"echarts/lib/component/title\";\nimport { useEffect, useRef } from \"react\";\n\nexport default ({ options }: { options?: Record<string, any> }) => {\n  const echartsRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    let myCharts: any;\n    if (echartsRef && echartsRef.current) {\n      const chart = echarts.getInstanceByDom(echartsRef.current);\n      if (chart) {\n        myCharts = chart;\n        myCharts.setOption({\n          xAxis: { ...options?.xAxis },\n          yAxis: {\n            type: \"value\",\n            ...options?.yAxis,\n          },\n          tooltip: {\n            show: true,\n            formatter: function (params: any) {\n              const showValue = Array.isArray(params.value)\n                ? params.value[1]\n                : params.value;\n              return `${params.marker} ${params.name}:  ${\n                Number(showValue) ? Number(showValue).toFixed(2) : showValue\n              }`;\n            },\n          },\n          dataZoom: {\n            type: \"inside\",\n          },\n          series: options?.series,\n        });\n      } else {\n        myCharts = echarts.init(echartsRef.current, \"dark\").setOption({\n          grid: {\n            left: \"3%\",\n            right: \"4%\",\n            bottom: \"3%\",\n            containLabel: true,\n          },\n          xAxis: {\n            type: \"category\",\n            nameTextStyle: {\n              color: \"#fff\",\n            },\n\n            data: options?.xAxis || [],\n          },\n          yAxis: {\n            type: \"value\",\n          },\n          series: [\n            {\n              data: options?.series || [],\n              type: \"line\",\n            },\n          ],\n        });\n      }\n    }\n    return () => {\n      if (myCharts) {\n        myCharts.dispose();\n      }\n    };\n  }, [echartsRef, options]);\n\n  return (\n    <div id='main' ref={echartsRef} style={{ width: 1000, height: 400 }}></div>\n  );\n};\n","/** @format */\nimport logo from \"@/assets/images/logo.webp\";\nimport { linkList, listLinkType } from \"@/contanst\";\nimport { getSvg } from \"@/svgTypes\";\nimport { FileTextOutlined, ApiOutlined } from \"@ant-design/icons\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport \"./index.less\";\nimport editPng from \"@/assets/images/edit.png\";\n\nexport default () => {\n  const navigate = useNavigate();\n  return (\n    <div className='ssv-footer'>\n      <div className='ssv-footer-left'>\n        <div\n          className='ssv-footer-logo'\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            window.open(\"https://ssv.network/\");\n            // navigate(\"/metrics\");\n          }}>\n          <span className='logo_img'>{getSvg(\"ssv_svg\")}</span>\n          {/* <img className='logo_img' src={logo} /> */}\n          <span className='logo_text'>Powered by ssv.network</span>\n        </div>\n        {/* <div\n          style={{\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            window.open(\"https://ssv.network/\");\n          }}>\n          <span className='logo_text' style={{ fontSize: 14 }}>\n            Powered by ssv.network\n          </span>\n        </div> */}\n        <div className='ssv-footer-icons'>\n          {listLinkType.map((item) => {\n            if (item.type === \"send\") {\n              return <a href={`mailto:${item.link}`}>{getSvg(item.key)}</a>;\n            }\n            return (\n              <span\n                key={item.key}\n                onClick={() => {\n                  if (item.link) {\n                    window.open(item.link);\n                  }\n                }}>\n                {getSvg(item.key)}\n              </span>\n            );\n          })}\n          <img\n            src={editPng}\n            alt=''\n            style={{ width: 22, marginTop: -7 }}\n            onClick={() => {\n              window.open(\"https://forms.gle/fjFWvnYFVqf1TQ7s9\");\n            }}\n          />\n          <FileTextOutlined\n            style={{ fontSize: 22, color: \"#fff\", marginTop: -7 }}\n            onClick={() => {\n              window.open(\"/docs\");\n            }}\n          />\n          <ApiOutlined\n            style={{ fontSize: 22, color: \"#fff\", marginTop: -7 }}\n            onClick={() => {\n              window.open(\"/swagger/\");\n            }}\n          />\n        </div>\n      </div>\n      <div className='ssv-footer-right'>\n        <div className='ssv-footer-router'>\n          {Object.keys(linkList).map((item: string) => {\n            return (\n              <NavLink to={linkList[item]} key={item}>\n                {item}\n              </NavLink>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/** @format */\n\nimport { loginSign } from \"@/store/Server\";\nimport { getSvg } from \"@/svgTypes\";\nimport { Button, Modal } from \"antd\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./index.less\";\n\nexport default () => {\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    // 链接钱包\n    if (!window.ethereum) {\n      //未下载钱包 下载钱包 链接钱包\n      window.open(`https://metamask.io/`);\n    } else {\n      // 链接钱包\n      window?.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((res: any) => {\n          loginSign(res[0]).then((res: any) => {\n            dispatch({ type: \"user/login\", payload: res.data });\n          });\n          setShow(false);\n        });\n    }\n  };\n  return (\n    <>\n      <Button\n        className='ssv-header-login default-btn'\n        onClick={() => {\n          setShow(true);\n        }}>\n        Login\n      </Button>\n      <Modal\n        title=''\n        open={show}\n        wrapClassName={\"login-wallect\"}\n        footer={null}\n        onCancel={() => {\n          setShow(false);\n        }}>\n        <p className='login-wallect-title'>Connect your wallet</p>\n        <p className='login-wallect-text'>\n          Connect your wallet to create the notifications\n        </p>\n        <Button\n          className='default-btn wallect-btn header-wallect-btn'\n          onClick={handleClick}>\n          <span className='wallect-name'>Metamask</span>\n          <span className='wallect-icon'>{getSvg(\"wallect_Metamask\")}</span>\n        </Button>\n      </Modal>\n    </>\n  );\n};\n","/** @format */\n\nimport { Header } from \"antd/lib/layout/layout\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Menu, Popover, Modal, Tooltip, Button } from \"antd\";\nimport { FileTextOutlined, ApiOutlined } from \"@ant-design/icons\";\nimport { defaultUrl, linkList, listLinkType } from \"@/contanst\";\nimport logo from \"@/assets/images/logo.webp\";\nimport { getSvg } from \"@/svgTypes\";\nimport Login from \"../login\";\nimport \"./index.less\";\nimport { useEffect, useState } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { rootState } from \"@/type\";\nimport { loginSign } from \"@/store/Server\";\nimport editPng from \"@/assets/images/edit.png\";\nimport { DatePicker } from \"antd\";\nimport axios from \"axios\";\nconst { RangePicker } = DatePicker;\n\nexport default () => {\n  const login = JSON.parse(localStorage.getItem(\"login\") || \"{}\").id;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [show, setShow] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const account = useSelector(\n    (state: rootState) => state?.user.public_key,\n    shallowEqual\n  );\n  useEffect(() => {\n    if (!login) {\n      // 链接钱包\n      //loginSign();\n    }\n  }, []);\n\n  const handleOut = () => {\n    const data = JSON.parse(localStorage.getItem(\"login\") || \"\");\n    axios\n      .post(`${defaultUrl}users/users/logout`, {\n        ...data,\n      })\n      .then((res) => {\n        //退出登录\n        dispatch({\n          type: \"user/login\",\n          payload: { cancel: true },\n        });\n      });\n  };\n  return (\n    <Header className='ssv-header'>\n      <div\n        className='ssv-header-logo'\n        onClick={() => {\n          navigate(\"/metrics\");\n        }}>\n        <img className='logo_img' src={logo} />\n        <span className='logo_text'>\n          HellmanAlert\n          <span className='logo_text-test'>Beta</span>\n        </span>\n      </div>\n      <div className='ssv-header-router'>\n        {Object.keys(linkList).map((item: string) => {\n          return (\n            <NavLink to={linkList[item]} key={item}>\n              {({ isActive }) => (\n                <div className='link-item'>\n                  <span>{item}</span>\n                  {isActive && <span className='active-icon'></span>}\n                </div>\n              )}\n            </NavLink>\n          );\n        })}\n      </div>\n      <div className='ssv-header-icons'>\n        {listLinkType.map((item) => {\n          if (item.type === \"send\") {\n            return <a href={`mailto:${item.link}`}>{getSvg(item.key)}</a>;\n          }\n          return (\n            <span\n              key={item.key}\n              onClick={() => {\n                if (item.link) {\n                  window.open(item.link);\n                }\n              }}>\n              {getSvg(item.key)}\n            </span>\n          );\n        })}\n        {}\n        <Tooltip title='Feedback'>\n          <img\n            src={editPng}\n            alt=''\n            style={{ width: 22, marginTop: -7 }}\n            onClick={() => {\n              window.open(\"https://forms.gle/fjFWvnYFVqf1TQ7s9\");\n            }}\n          />\n        </Tooltip>\n        <Tooltip title='Documentation'>\n          <FileTextOutlined\n            style={{ fontSize: 22, color: \"#fff\", marginTop: -7 }}\n            onClick={() => {\n              window.open(\"/docs\");\n            }}\n          />\n        </Tooltip>\n        <Tooltip title='API Swagger'>\n          <ApiOutlined\n            style={{ fontSize: 22, color: \"#fff\", marginTop: -7 }}\n            onClick={() => {\n              window.open(\"/swagger/\");\n            }}\n          />\n        </Tooltip>\n      </div>\n      {login ? (\n        <div\n          className='wallet-logged default-border'\n          onClick={() => {\n            setShow(true);\n            axios.get(`${defaultUrl}users/users/token`).then((res) => {\n              setToken(res.data?.token || \"\");\n            });\n          }}>\n          <span className='icon'>{getSvg(\"wallect_Metamask\")}</span>\n          <span className='text'>{`${String(account).slice(0, 6)}...${String(\n            account\n          ).slice(-4)}`}</span>\n        </div>\n      ) : (\n        <Login />\n      )}\n      <Modal\n        open={show}\n        title=''\n        wrapClassName='ssv-modal'\n        onCancel={() => setShow(false)}\n        footer={null}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}>\n          <p className='title' style={{ color: \"#fff\" }}>\n            API Token:\n            <span style={{ marginLeft: 10 }}>{token}</span>\n          </p>\n          <Button\n            className='default-btn'\n            style={{ marginTop: 20 }}\n            onClick={handleOut}>\n            Logout\n          </Button>\n        </div>\n      </Modal>\n    </Header>\n  );\n};\n","/** @format */\n\nimport default_png from \"@/assets/images/default.webp\";\nimport { Button } from \"antd\";\nimport \"./index.less\";\n\nexport default () => {\n  return (\n    <div className='ssv-noData'>\n      <div className='left'>\n        <h3 className='title'>Subscriptions</h3>\n        <p className='text'>No data has been added to this list.</p>\n        <Button className='default-btn nodata-btn'>Add</Button>\n      </div>\n      <div className='right'>\n        <img src={default_png} />\n      </div>\n    </div>\n  );\n};\n","\nexport const listLinkType = [\n  { key: \"twitter\", link: \"https://twitter.com/HellmanResearch\" },\n  { key: \"githup\", link: \"https://github.com/HellmanResearch\" },\n  { key: \"email\", link: \"HellmanResearch@outlook.com\",type:'send' },\n];\n\n\n\nexport const linkList: Record<string, string> = {\n  //Dashboard: \"/dashboard\",\n  Metrics: \"metrics\",\n  Subscriptions: \"subscribe\",\n  Triggered: \"alerts\",\n};\n\nexport const page_size = 5;\n/*\nwindow.location.protocol + \"//\" + window.location.host + \"/api/v1/\" ||\nwindow.location.protocol + \"//\" + window.location.host ||\n*/\n\n//  export const defaultUrl = 'http://39.101.77.40/api/v1/';\n// export const tokenUrl = 'http://39.101.77.40/api/v1/'\n\n  export const tokenUrl =window.location.protocol + \"//\" + window.location.host || `http://39.101.77.40`\n  export const defaultUrl = window.location.protocol + \"//\" + window.location.host + \"/api/v1/\" ;\n"],"names":["options","echartsRef","useRef","useEffect","myCharts","current","chart","echarts","setOption","xAxis","yAxis","type","tooltip","show","formatter","params","showValue","Array","isArray","value","marker","name","Number","toFixed","dataZoom","series","grid","left","right","bottom","containLabel","nameTextStyle","color","data","dispose","id","ref","style","width","height","useNavigate","className","display","alignItems","cursor","onClick","window","open","getSvg","listLinkType","item","href","link","key","src","editPng","alt","marginTop","FileTextOutlined","fontSize","ApiOutlined","Object","keys","linkList","map","to","useState","setShow","dispatch","useDispatch","title","wrapClassName","footer","onCancel","ethereum","request","method","then","res","loginSign","payload","DatePicker","login","JSON","parse","localStorage","getItem","navigate","token","setToken","account","useSelector","state","user","public_key","shallowEqual","logo","isActive","axios","defaultUrl","String","slice","flexDirection","marginLeft","cancel","default_png","Metrics","Subscriptions","Triggered","page_size","tokenUrl","location","protocol","host"],"sourceRoot":""}