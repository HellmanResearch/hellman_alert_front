{"version":3,"file":"static/js/9737.fee49c56.js","mappings":"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","sources":["../node_modules/echarts/lib/util/format.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/innerStore.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { encodeHTML } from 'zrender/lib/core/dom.js';\nimport { parseDate, isNumeric, numericToNumber } from './number.js';\nimport { format as timeFormat, pad } from './time.js';\nimport { deprecateReplaceLog } from './log.js';\n/**\n * Add a comma each three digit.\n */\n\nexport function addCommas(x) {\n  if (!isNumeric(x)) {\n    return zrUtil.isString(x) ? x : '-';\n  }\n\n  var parts = (x + '').split('.');\n  return parts[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (parts.length > 1 ? '.' + parts[1] : '');\n}\nexport function toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\nexport var normalizeCssArray = zrUtil.normalizeCssArray;\nexport { encodeHTML };\n/**\n * Make value user readable for tooltip and label.\n * \"User readable\":\n *     Try to not print programmer-specific text like NaN, Infinity, null, undefined.\n *     Avoid to display an empty string, which users can not recognize there is\n *     a value and it might look like a bug.\n */\n\nexport function makeValueReadable(value, valueType, useUTC) {\n  var USER_READABLE_DEFUALT_TIME_PATTERN = '{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}';\n\n  function stringToUserReadable(str) {\n    return str && zrUtil.trim(str) ? str : '-';\n  }\n\n  function isNumberUserReadable(num) {\n    return !!(num != null && !isNaN(num) && isFinite(num));\n  }\n\n  var isTypeTime = valueType === 'time';\n  var isValueDate = value instanceof Date;\n\n  if (isTypeTime || isValueDate) {\n    var date = isTypeTime ? parseDate(value) : value;\n\n    if (!isNaN(+date)) {\n      return timeFormat(date, USER_READABLE_DEFUALT_TIME_PATTERN, useUTC);\n    } else if (isValueDate) {\n      return '-';\n    } // In other cases, continue to try to display the value in the following code.\n\n  }\n\n  if (valueType === 'ordinal') {\n    return zrUtil.isStringSafe(value) ? stringToUserReadable(value) : zrUtil.isNumber(value) ? isNumberUserReadable(value) ? value + '' : '-' : '-';\n  } // By default.\n\n\n  var numericResult = numericToNumber(value);\n  return isNumberUserReadable(numericResult) ? addCommas(numericResult) : zrUtil.isStringSafe(value) ? stringToUserReadable(value) : typeof value === 'boolean' ? value + '' : '-';\n}\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {Array.<Object>|Object} paramsList\n */\n\n\nexport function formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n */\n\nexport function formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\nexport function getTooltipMarker(inOpt, extraCssText) {\n  var opt = zrUtil.isString(inOpt) ? {\n    color: inOpt,\n    extraCssText: extraCssText\n  } : inOpt || {};\n  var color = opt.color;\n  var type = opt.type;\n  extraCssText = opt.extraCssText;\n  var renderMode = opt.renderMode || 'html';\n\n  if (!color) {\n    return '';\n  }\n\n  if (renderMode === 'html') {\n    return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' // Only support string\n    + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:4px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n  } else {\n    // Should better not to auto generate style name by auto-increment number here.\n    // Because this util is usually called in tooltip formatter, which is probably\n    // called repeatly when mouse move and the auto-increment number increases fast.\n    // Users can make their own style name by theirselves, make it unique and readable.\n    var markerId = opt.markerId || 'markerX';\n    return {\n      renderMode: renderMode,\n      content: '{' + markerId + '|}  ',\n      style: type === 'subItem' ? {\n        width: 4,\n        height: 4,\n        borderRadius: 2,\n        backgroundColor: color\n      } : {\n        width: 10,\n        height: 10,\n        borderRadius: 5,\n        backgroundColor: color\n      }\n    };\n  }\n}\n/**\n * @deprecated Use `time/format` instead.\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\nexport function formatTime(tpl, value, isUTC) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateReplaceLog('echarts.format.formatTime', 'echarts.time.format');\n  }\n\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = parseDate(value);\n  var getUTC = isUTC ? 'getUTC' : 'get';\n  var y = date[getUTC + 'FullYear']();\n  var M = date[getUTC + 'Month']() + 1;\n  var d = date[getUTC + 'Date']();\n  var h = date[getUTC + 'Hours']();\n  var m = date[getUTC + 'Minutes']();\n  var s = date[getUTC + 'Seconds']();\n  var S = date[getUTC + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', pad(y % 100 + '', 2)).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\nexport function capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n/**\n * @return Never be null/undefined.\n */\n\nexport function convertToColorString(color, defaultColor) {\n  defaultColor = defaultColor || 'transparent';\n  return zrUtil.isString(color) ? color : zrUtil.isObject(color) ? color.colorStops && (color.colorStops[0] || {}).color || defaultColor : defaultColor;\n}\nexport { truncateText } from 'zrender/lib/graphic/helper/parseText.js';\n/**\n * open new tab\n * @param link url\n * @param target blank or self\n */\n\nexport function windowOpen(link, target) {\n  /* global window */\n  if (target === '_blank' || target === 'blank') {\n    var blank = window.open();\n    blank.opener = null;\n    blank.location.href = link;\n  } else {\n    window.open(link, target);\n  }\n}\nexport { getTextRect } from '../legacy/getTextRect.js';","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as pathTool from 'zrender/lib/tool/path.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as vector from 'zrender/lib/core/vector.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport Transformable from 'zrender/lib/core/Transformable.js';\nimport ZRImage from 'zrender/lib/graphic/Image.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport ZRText from 'zrender/lib/graphic/Text.js';\nimport Circle from 'zrender/lib/graphic/shape/Circle.js';\nimport Ellipse from 'zrender/lib/graphic/shape/Ellipse.js';\nimport Sector from 'zrender/lib/graphic/shape/Sector.js';\nimport Ring from 'zrender/lib/graphic/shape/Ring.js';\nimport Polygon from 'zrender/lib/graphic/shape/Polygon.js';\nimport Polyline from 'zrender/lib/graphic/shape/Polyline.js';\nimport Rect from 'zrender/lib/graphic/shape/Rect.js';\nimport Line from 'zrender/lib/graphic/shape/Line.js';\nimport BezierCurve from 'zrender/lib/graphic/shape/BezierCurve.js';\nimport Arc from 'zrender/lib/graphic/shape/Arc.js';\nimport CompoundPath from 'zrender/lib/graphic/CompoundPath.js';\nimport LinearGradient from 'zrender/lib/graphic/LinearGradient.js';\nimport RadialGradient from 'zrender/lib/graphic/RadialGradient.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport OrientedBoundingRect from 'zrender/lib/core/OrientedBoundingRect.js';\nimport Point from 'zrender/lib/core/Point.js';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable.js';\nimport * as subPixelOptimizeUtil from 'zrender/lib/graphic/helper/subPixelOptimize.js';\nimport { extend, isArrayLike, map, defaults, isString, keys, each, hasOwn, isArray } from 'zrender/lib/core/util.js';\nimport { getECData } from './innerStore.js';\nimport { updateProps, initProps, removeElement, removeElementWithFadeOut, isElementRemoved } from '../animation/basicTransition.js';\n/**\n * @deprecated export for compatitable reason\n */\n\nexport { updateProps, initProps, removeElement, removeElementWithFadeOut, isElementRemoved };\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar _customShapeMap = {};\n/**\n * Extend shape with parameters\n */\n\nexport function extendShape(opts) {\n  return Path.extend(opts);\n}\nvar extendPathFromString = pathTool.extendFromString;\n/**\n * Extend path\n */\n\nexport function extendPath(pathData, opts) {\n  return extendPathFromString(pathData, opts);\n}\n/**\n * Register a user defined shape.\n * The shape class can be fetched by `getShapeClass`\n * This method will overwrite the registered shapes, including\n * the registered built-in shapes, if using the same `name`.\n * The shape can be used in `custom series` and\n * `graphic component` by declaring `{type: name}`.\n *\n * @param name\n * @param ShapeClass Can be generated by `extendShape`.\n */\n\nexport function registerShape(name, ShapeClass) {\n  _customShapeMap[name] = ShapeClass;\n}\n/**\n * Find shape class registered by `registerShape`. Usually used in\n * fetching user defined shape.\n *\n * [Caution]:\n * (1) This method **MUST NOT be used inside echarts !!!**, unless it is prepared\n * to use user registered shapes.\n * Because the built-in shape (see `getBuiltInShape`) will be registered by\n * `registerShape` by default. That enables users to get both built-in\n * shapes as well as the shapes belonging to themsleves. But users can overwrite\n * the built-in shapes by using names like 'circle', 'rect' via calling\n * `registerShape`. So the echarts inner featrues should not fetch shapes from here\n * in case that it is overwritten by users, except that some features, like\n * `custom series`, `graphic component`, do it deliberately.\n *\n * (2) In the features like `custom series`, `graphic component`, the user input\n * `{tpye: 'xxx'}` does not only specify shapes but also specify other graphic\n * elements like `'group'`, `'text'`, `'image'` or event `'path'`. Those names\n * are reserved names, that is, if some user register a shape named `'image'`,\n * the shape will not be used. If we intending to add some more reserved names\n * in feature, that might bring break changes (disable some existing user shape\n * names). But that case probably rearly happen. So we dont make more mechanism\n * to resolve this issue here.\n *\n * @param name\n * @return The shape class. If not found, return nothing.\n */\n\nexport function getShapeClass(name) {\n  if (_customShapeMap.hasOwnProperty(name)) {\n    return _customShapeMap[name];\n  }\n}\n/**\n * Create a path element from path data string\n * @param pathData\n * @param opts\n * @param rect\n * @param layout 'center' or 'cover' default to be cover\n */\n\nexport function makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param imageUrl image url\n * @param opts options\n * @param rect constrain rect\n * @param layout 'center' or 'cover'. Default to be 'cover'\n */\n\nexport function makeImage(imageUrl, rect, layout) {\n  var zrImg = new ZRImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        zrImg.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return zrImg;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  rect         element local bounding box\n * @param  boundingRect constraint bounding box\n * @return element position containing x, y, width, and height\n */\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nexport var mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param path\n * @param rect\n */\n\nexport function resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n */\n\nexport function subPixelOptimizeLine(shape, lineWidth) {\n  subPixelOptimizeUtil.subPixelOptimizeLine(shape, shape, {\n    lineWidth: lineWidth\n  });\n  return shape;\n}\n/**\n * Sub pixel optimize rect for canvas\n */\n\nexport function subPixelOptimizeRect(param) {\n  subPixelOptimizeUtil.subPixelOptimizeRect(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param position Coordinate, such as x, y\n * @param lineWidth Should be nonnegative integer.\n * @param positiveOrNegative Default false (negative).\n * @return Optimized position.\n */\n\nexport var subPixelOptimize = subPixelOptimizeUtil.subPixelOptimize;\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param target\n * @param [ancestor]\n */\n\nexport function getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param target [x, y]\n * @param transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param invert Whether use invert matrix.\n * @return [x, y]\n */\n\nexport function applyTransform(target, transform, invert) {\n  if (transform && !isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param direction 'left' 'right' 'top' 'bottom'\n * @param transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param invert Whether use invert matrix.\n * @return Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\nexport function transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n\nfunction isNotGroup(el) {\n  return !el.isGroup;\n}\n\nfunction isPath(el) {\n  return el.shape != null;\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nexport function groupTransition(g1, g2, animatableModel) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (isNotGroup(el) && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      x: el.x,\n      y: el.y,\n      rotation: el.rotation\n    };\n\n    if (isPath(el)) {\n      obj.shape = extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (isNotGroup(el) && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, getECData(el).dataIndex);\n      }\n    }\n  });\n}\nexport function clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * Return a new clipped rect. If rect size are negative, return undefined.\n */\n\nexport function clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\nexport function createIcon(iconStr, // Support 'image://' or 'path://' or direct svg path.\nopt, rect) {\n  var innerOpts = extend({\n    rectHover: true\n  }, opt);\n  var style = innerOpts.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), defaults(style, rect), new ZRImage(innerOpts)) : makePath(iconStr.replace('path://', ''), innerOpts, rect, 'center');\n  }\n}\n/**\n * Return `true` if the given line (line `a`) and the given polygon\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n */\n\nexport function linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n}\n/**\n * Return `true` if the given two lines (line `a` and line `b`)\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n */\n\nexport function lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\n  var mx = a2x - a1x;\n  var my = a2y - a1y;\n  var nx = b2x - b1x;\n  var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\n  //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\n\n  var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\n\n  if (nearZero(nmCrossProduct)) {\n    return false;\n  } // `vec_m` and `vec_n` are intersect iff\n  //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\n  //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\n  //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\n\n\n  var b1a1x = a1x - b1x;\n  var b1a1y = a1y - b1y;\n  var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\n\n  if (q < 0 || q > 1) {\n    return false;\n  }\n\n  var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\n\n  if (p < 0 || p > 1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Cross product of 2-dimension vector.\n */\n\nfunction crossProduct2d(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nexport function setTooltipConfig(opt) {\n  var itemTooltipOption = opt.itemTooltipOption;\n  var componentModel = opt.componentModel;\n  var itemName = opt.itemName;\n  var itemTooltipOptionObj = isString(itemTooltipOption) ? {\n    formatter: itemTooltipOption\n  } : itemTooltipOption;\n  var mainType = componentModel.mainType;\n  var componentIndex = componentModel.componentIndex;\n  var formatterParams = {\n    componentType: mainType,\n    name: itemName,\n    $vars: ['name']\n  };\n  formatterParams[mainType + 'Index'] = componentIndex;\n  var formatterParamsExtra = opt.formatterParamsExtra;\n\n  if (formatterParamsExtra) {\n    each(keys(formatterParamsExtra), function (key) {\n      if (!hasOwn(formatterParams, key)) {\n        formatterParams[key] = formatterParamsExtra[key];\n        formatterParams.$vars.push(key);\n      }\n    });\n  }\n\n  var ecData = getECData(opt.el);\n  ecData.componentMainType = mainType;\n  ecData.componentIndex = componentIndex;\n  ecData.tooltipConfig = {\n    name: itemName,\n    option: defaults({\n      content: itemName,\n      formatterParams: formatterParams\n    }, itemTooltipOptionObj)\n  };\n}\n\nfunction traverseElement(el, cb) {\n  var stopped; // TODO\n  // Polyfill for fixing zrender group traverse don't visit it's root issue.\n\n  if (el.isGroup) {\n    stopped = cb(el);\n  }\n\n  if (!stopped) {\n    el.traverse(cb);\n  }\n}\n\nexport function traverseElements(els, cb) {\n  if (els) {\n    if (isArray(els)) {\n      for (var i = 0; i < els.length; i++) {\n        traverseElement(els[i], cb);\n      }\n    } else {\n      traverseElement(els, cb);\n    }\n  }\n} // Register built-in shapes. These shapes might be overwirtten\n// by users, although we do not recommend that.\n\nregisterShape('circle', Circle);\nregisterShape('ellipse', Ellipse);\nregisterShape('sector', Sector);\nregisterShape('ring', Ring);\nregisterShape('polygon', Polygon);\nregisterShape('polyline', Polyline);\nregisterShape('rect', Rect);\nregisterShape('line', Line);\nregisterShape('bezierCurve', BezierCurve);\nregisterShape('arc', Arc);\nexport { Group, ZRImage as Image, ZRText as Text, Circle, Ellipse, Sector, Ring, Polygon, Polyline, Rect, Line, BezierCurve, Arc, IncrementalDisplayable, CompoundPath, LinearGradient, RadialGradient, BoundingRect, OrientedBoundingRect, Point, Path };","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { makeInner } from './model.js';\nexport var getECData = makeInner();\nexport var setCommonECData = function (seriesIndex, dataType, dataIdx, el) {\n  if (el) {\n    var ecData = getECData(el); // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n\n    ecData.dataIndex = dataIdx;\n    ecData.dataType = dataType;\n    ecData.seriesIndex = seriesIndex; // TODO: not store dataIndex on children.\n\n    if (el.type === 'group') {\n      el.traverse(function (child) {\n        var childECData = getECData(child);\n        childECData.seriesIndex = seriesIndex;\n        childECData.dataIndex = dataIdx;\n        childECData.dataType = dataType;\n      });\n    }\n  }\n};"],"names":["addCommas","x","isNumeric","zrUtil","parts","split","replace","length","toCamelCase","str","upperCaseFirst","toLowerCase","match","group1","toUpperCase","charAt","slice","normalizeCssArray","makeValueReadable","value","valueType","useUTC","stringToUserReadable","isNumberUserReadable","num","isNaN","isFinite","isTypeTime","isValueDate","Date","date","parseDate","timeFormat","numericResult","numericToNumber","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","seriesLen","$vars","i","alias","k","val","encodeHTML","formatTplSimple","param","key","getTooltipMarker","inOpt","extraCssText","opt","color","type","renderMode","content","markerId","style","width","height","borderRadius","backgroundColor","convertToColorString","defaultColor","colorStops","windowOpen","link","target","blank","window","open","opener","location","href","mathMax","Math","max","mathMin","min","_customShapeMap","extendShape","opts","Path","extendPathFromString","pathTool","extendPath","pathData","registerShape","name","ShapeClass","getShapeClass","hasOwnProperty","makePath","rect","layout","path","centerGraphic","getBoundingRect","resizePath","makeImage","imageUrl","zrImg","ZRImage","image","y","onload","img","boundingRect","setStyle","aspect","mergePath","applyTransform","m","calculateTransform","subPixelOptimizeLine","shape","lineWidth","subPixelOptimizeUtil","subPixelOptimizeRect","subPixelOptimize","getTransform","ancestor","mat","matrix","getLocalTransform","parent","transform","invert","isArrayLike","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","isNotGroup","el","isGroup","groupTransition","g1","g2","animatableModel","elMap1","g","elMap","traverse","anid","getElMap","oldEl","newProp","getAnimatableProps","attr","updateProps","getECData","dataIndex","obj","rotation","isPath","extend","clipPointsByRect","points","map","point","clipRectByRect","targetRect","x2","y2","createIcon","iconStr","innerOpts","rectHover","strokeNoScale","indexOf","defaults","linePolygonIntersect","a1x","a1y","a2x","a2y","p2","p","lineLineIntersect","b1x","b1y","b2x","b2y","mx","my","nx","ny","nmCrossProduct","crossProduct2d","b1a1x","b1a1y","q","x1","y1","setTooltipConfig","itemTooltipOption","componentModel","itemName","itemTooltipOptionObj","isString","formatter","mainType","componentIndex","formatterParams","componentType","formatterParamsExtra","each","keys","hasOwn","push","ecData","componentMainType","tooltipConfig","option","traverseElement","cb","stopped","traverseElements","els","isArray","Circle","Ellipse","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","makeInner","setCommonECData","seriesIndex","dataType","dataIdx","child","childECData"],"sourceRoot":""}