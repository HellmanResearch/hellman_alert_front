{"version":3,"file":"static/js/main-4f064d56.107eeb25.js","mappings":"qTAeA,aACE,IAAMA,GAAaC,EAAAA,EAAAA,KACjB,SAACC,GAAgB,aAAU,OAALA,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOC,YAAI,WAAN,EAAL,EAAaH,UAAU,GAC7CI,EAAAA,IAEIC,GAAWC,EAAAA,EAAAA,MA4BjB,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAwB,SAACC,EAAeC,GACpB,IAApBD,EAASE,QAAgBF,EAAS,KAAOT,GAE3CK,EAAS,CACPO,KAAM,aACNC,QAAS,CAAEC,QAAQ,IAGzB,EAOA,OANIC,OAAOC,SACTD,OAAOC,SAASC,GAAG,kBAAmBT,GAEtCU,QAAQC,IAAI,mCAGP,WACDJ,OAAOC,UACTD,OAAOC,SAASI,eACd,kBACAZ,EAGN,CACF,GAAG,IAEER,GAIH,SAAC,EAAAqB,SAAQ,CAACC,UAAU,mBAAY,UAC9B,UAAC,KAAM,YACL,SAAC,KAAK,CAACC,KAAK,WAAWC,SAAS,SAAC,IAAO,OACxC,SAAC,KAAK,CAACD,KAAK,aAAaC,SAAS,SAAC,IAAU,OAC7C,SAAC,KAAK,CAACD,KAAK,eAAeC,SAAS,SAAC,IAAO,OAC5C,SAAC,KAAK,CAACD,KAAK,qBAAqBC,SAAS,SAAC,IAAK,OAChD,SAAC,KAAK,CAACD,KAAK,iBAAiBC,SAAS,SAAC,IAAS,OAChD,SAAC,KAAK,CAACD,KAAK,0BAA0BC,SAAS,SAAC,IAAS,IAAI,UAC3D,SAAC,KAAK,CAACD,KAAK,QAAQC,SAAS,SAAC,IAAS,SAEzC,SAAC,KAAK,CAACD,KAAK,UAAUC,SAAS,SAAC,IAAK,IAAI,UACvC,SAAC,KAAK,CAACD,KAAK,YAAYC,SAAS,SAAC,IAAK,SAEzC,SAAC,KAAK,CAACD,KAAK,KAAKC,SAAS,SAAC,IAAO,YAhB/B,SAAC,IAAM,GAoBjB,E,gCCvDOC,EAAYC,EAAAA,EAAAA,QAEpB,SAASC,IACP,IAAMC,GAAUtB,EAAAA,EAAAA,MAehB,OAbAC,EAAAA,EAAAA,YAAU,WACJsB,aAAaC,QAAQ,UACvBC,EAAAA,EAAAA,IACO,GAAD,OAAIC,EAAAA,GAAU,qBACjBC,MAAK,SAACC,GACLN,EAAQ,CAAEhB,KAAM,aAAcC,QAASqB,EAAIC,MAC7C,IACCC,OAAM,SAACC,GACNT,EAAQ,CAAEhB,KAAM,aAAcC,QAAS,CAAEC,QAAQ,IACnD,GAEN,GAAG,KAGD,SAAC,KAAa,WACZ,UAAC,IAAM,CAACwB,UAAU,WAAU,WAC1B,SAAC,IAAM,KACP,SAACb,EAAO,WACN,SAACc,EAAM,OAET,SAAC,IAAM,QAIf,CAEA,MAAeC,EAAAA,KAAWb,E","sources":["Router.tsx","App.tsx"],"sourcesContent":["/** @format */\n\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, useParams } from \"react-router-dom\";\nimport Metrics from \"@/pages/metrics\";\nimport Subscribe from \"@/pages/subscribes/addItem\";\nimport Subscribes from \"@/pages/subscribes/\";\nimport History from \"@/pages/history\";\nimport { rootState } from \"./type\";\nimport NoData from \"@/components/noData\";\nimport Alert from \"@/pages/alert\";\nimport Email from \"@/pages/email\";\nimport { Suspense, useEffect } from \"react\";\nimport { message } from \"antd\";\n\nexport default () => {\n  const public_key = useSelector(\n    (state: rootState) => state?.user?.public_key,\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleAccountsChanged = (accounts: any, other: any) => {\n      if (accounts.length === 0 || accounts[0] !== public_key) {\n        //退出登录\n        dispatch({\n          type: \"user/login\",\n          payload: { cancel: true },\n        });\n      }\n    };\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", handleAccountsChanged);\n    } else {\n      console.log(\"=不支持钱包\");\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener(\n          \"accountsChanged\",\n          handleAccountsChanged\n        );\n      }\n    };\n  }, []);\n\n  if (!public_key) {\n    return <NoData />;\n  }\n  return (\n    <Suspense fallback={<div></div>}>\n      <Routes>\n        <Route path='/metrics' element={<Metrics />} />\n        <Route path='/subscribe' element={<Subscribes />} />\n        <Route path='/history/:id' element={<History />} />\n        <Route path='/confirm/:id/:sign' element={<Email />} />\n        <Route path='/subscribe/add' element={<Subscribe />} />\n        <Route path='/subscribe/:subscribeId' element={<Subscribe />}>\n          <Route path=':sign' element={<Subscribe />}></Route>\n        </Route>\n        <Route path='/alerts' element={<Alert />}>\n          <Route path=':id/:sign' element={<Alert />}></Route>\n        </Route>\n        <Route path='/*' element={<Metrics />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","/** @format */\n\nimport { Layout } from \"antd\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"@/components/header\";\nimport Footer from \"@/components/footer\";\nimport Router from \"./Router\";\nimport \"./index.less\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { defaultUrl } from \"./contanst\";\n\nconst { Content } = Layout;\n\nfunction App() {\n  const dispath = useDispatch();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"login\")) {\n      axios\n        .get(`${defaultUrl}users/users/self`)\n        .then((res) => {\n          dispath({ type: \"user/login\", payload: res.data });\n        })\n        .catch((err) => {\n          dispath({ type: \"user/login\", payload: { cancel: true } });\n        });\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Layout className='ssv-page'>\n        <Header />\n        <Content>\n          <Router />\n        </Content>\n        <Footer />\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default React.memo(App);\n"],"names":["public_key","useSelector","state","user","shallowEqual","dispatch","useDispatch","useEffect","handleAccountsChanged","accounts","other","length","type","payload","cancel","window","ethereum","on","console","log","removeListener","Suspense","fallback","path","element","Content","Layout","App","dispath","localStorage","getItem","axios","defaultUrl","then","res","data","catch","err","className","Router","React"],"sourceRoot":""}