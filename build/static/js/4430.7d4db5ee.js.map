{"version":3,"file":"static/js/4430.7d4db5ee.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/tree/TreeSeries.js","../node_modules/echarts/lib/chart/tree/TreeView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series.js';\nimport Tree from '../../data/Tree.js';\nimport Model from '../../model/Model.js';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup.js';\nimport { wrapTreePathInfo } from '../helper/treeHelper.js';\n\nvar TreeSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(TreeSeriesModel, _super);\n\n  function TreeSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.hasSymbolVisual = true; // Do it self.\n\n    _this.ignoreStyleOnData = true;\n    return _this;\n  }\n  /**\n   * Init a tree data structure from data in option series\n   */\n\n\n  TreeSeriesModel.prototype.getInitialData = function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var leavesModel = new Model(leaves, this, this.ecModel);\n    var tree = Tree.createTree(root, this, beforeLink);\n\n    function beforeLink(nodeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        var node = tree.getNodeByDataIndex(idx);\n\n        if (!(node && node.children.length && node.isExpand)) {\n          model.parentModel = leavesModel;\n        }\n\n        return model;\n      });\n    }\n\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // Add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  };\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n\n\n  TreeSeriesModel.prototype.getOrient = function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  };\n\n  TreeSeriesModel.prototype.setZoom = function (zoom) {\n    this.option.zoom = zoom;\n  };\n\n  TreeSeriesModel.prototype.setCenter = function (center) {\n    this.option.center = center;\n  };\n\n  TreeSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return createTooltipMarkup('nameValue', {\n      name: name,\n      value: value,\n      noValue: isNaN(value) || value == null\n    });\n  }; // Add tree path to tooltip param\n\n\n  TreeSeriesModel.prototype.getDataParams = function (dataIndex) {\n    var params = _super.prototype.getDataParams.apply(this, arguments);\n\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treeAncestors = wrapTreePathInfo(node, this);\n    params.collapsed = !node.isExpand;\n    return params;\n  };\n\n  TreeSeriesModel.type = 'series.tree'; // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n\n  TreeSeriesModel.layoutMode = 'box';\n  TreeSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // value can be 'polyline'\n    edgeShape: 'curve',\n    edgeForkPosition: '50%',\n    // true | false | 'move' | 'scale', see module:component/helper/RoamController.\n    roam: false,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.4,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      // borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 500\n  };\n  return TreeSeriesModel;\n}(SeriesModel);\n\nexport default TreeSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport { radialCoordinate } from './layoutHelper.js';\nimport * as bbox from 'zrender/lib/core/bbox.js';\nimport View from '../../coord/View.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper.js';\nimport { parsePercent } from '../../util/number.js';\nimport ChartView from '../../view/Chart.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport { setStatesStylesFromModel, setStatesFlag, setDefaultStateProxy, HOVER_STATE_BLUR } from '../../util/states.js';\n\nvar TreeEdgeShape =\n/** @class */\nfunction () {\n  function TreeEdgeShape() {\n    this.parentPoint = [];\n    this.childPoints = [];\n  }\n\n  return TreeEdgeShape;\n}();\n\nvar TreePath =\n/** @class */\nfunction (_super) {\n  __extends(TreePath, _super);\n\n  function TreePath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  TreePath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  TreePath.prototype.getDefaultShape = function () {\n    return new TreeEdgeShape();\n  };\n\n  TreePath.prototype.buildPath = function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  };\n\n  return TreePath;\n}(Path);\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreeView.type;\n    _this._mainGroup = new graphic.Group();\n    return _this;\n  }\n\n  TreeView.prototype.init = function (ecModel, api) {\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  };\n\n  TreeView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.x = layoutInfo.x + layoutInfo.width / 2;\n      group.y = layoutInfo.y + layoutInfo.height / 2;\n    } else {\n      group.x = layoutInfo.x;\n      group.y = layoutInfo.y;\n    }\n\n    this._updateViewCoordSys(seriesModel, api);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesModel.get('expandAndCollapse') === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  };\n\n  TreeView.prototype._updateViewCoordSys = function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'), api);\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      x: viewCoordSys.x,\n      y: viewCoordSys.y,\n      scaleX: viewCoordSys.scaleX,\n      scaleY: viewCoordSys.scaleY\n    });\n    this._min = min;\n    this._max = max;\n  };\n\n  TreeView.prototype._updateController = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      _this._updateNodeAndLinkScale(seriesModel); // Only update label layout on zoom\n\n\n      api.updateLabelLayout();\n    });\n  };\n\n  TreeView.prototype._updateNodeAndLinkScale = function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    data.eachItemGraphicEl(function (el, idx) {\n      el.setSymbolScale(nodeScale);\n    });\n  };\n\n  TreeView.prototype._getNodeGlobalScale = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupZoom = coordSys.scaleX || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  };\n\n  TreeView.prototype.dispose = function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n\n  TreeView.prototype.remove = function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  };\n\n  TreeView.type = 'tree';\n  return TreeView;\n}(ChartView);\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y);\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var visualColor = node.getVisual('style').fill;\n  var symbolInnerColor = node.isExpand === false && node.children.length !== 0 ? visualColor : '#fff';\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.__oldX,\n    y: sourceSymbolEl.__oldY,\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n    symbolEl.x = sourceOldLayout.x;\n    symbolEl.y = sourceOldLayout.y;\n  } else {\n    symbolEl.updateData(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  symbolEl.__oldX = symbolEl.x;\n  symbolEl.__oldY = symbolEl.y;\n  graphic.updateProps(symbolEl, {\n    x: targetLayout.x,\n    y: targetLayout.y\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesModel.get('layout') === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length_1 = realRoot.children.length;\n    var rad = void 0;\n    var isLeft = void 0;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true && realRoot.children.length) {\n      var center = {\n        x: (realRoot.children[0].getLayout().x + realRoot.children[length_1 - 1].getLayout().x) / 2,\n        y: (realRoot.children[0].getLayout().y + realRoot.children[length_1 - 1].getLayout().y) / 2\n      };\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var normalLabelModel = itemModel.getModel('label');\n    var rotate = normalLabelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    var textContent = symbolPath.getTextContent();\n\n    if (textContent) {\n      symbolPath.setTextConfig({\n        position: normalLabelModel.get('position') || textPosition,\n        rotation: rotate == null ? -rad : labelRotateRadian,\n        origin: 'center'\n      });\n      textContent.setStyle('verticalAlign', 'middle');\n    }\n  } // Handle status\n\n\n  var focus = itemModel.get(['emphasis', 'focus']);\n  var focusDataIndices = focus === 'relative' ? zrUtil.concatArray(node.getAncestorsIndices(), node.getDescendantIndices()) : focus === 'ancestor' ? node.getAncestorsIndices() : focus === 'descendant' ? node.getDescendantIndices() : null;\n\n  if (focusDataIndices) {\n    // Modify the focus to data indices.\n    getECData(symbolEl).focus = focusDataIndices;\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group);\n\n  if (symbolEl.__edge) {\n    symbolEl.onHoverStateChange = function (toState) {\n      if (toState !== 'blur') {\n        // NOTE: Ensure the parent elements will been blurred firstly.\n        // According to the return of getAncestorsIndices and getDescendantIndices\n        // TODO: A bit tricky.\n        var parentEl = node.parentNode && data.getItemGraphicEl(node.parentNode.dataIndex);\n\n        if (!(parentEl && parentEl.hoverState === HOVER_STATE_BLUR)) {\n          setStatesFlag(symbolEl.__edge, toState);\n        }\n      }\n    };\n  }\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group) {\n  var itemModel = node.getModel();\n  var edgeShape = seriesModel.get('edgeShape');\n  var layout = seriesModel.get('layout');\n  var orient = seriesModel.getOrient();\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n  var edgeForkPosition = seriesModel.get('edgeForkPosition');\n  var lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  var edge = symbolEl.__edge; // curve edge from node -> parent\n  // polyline edge from node -> children\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(layout, orient, curvature, sourceOldLayout, sourceOldLayout)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(layout, orient, curvature, sourceLayout, targetLayout)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreePath({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: orient,\n              forkPosition: edgeForkPosition\n            }\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          }\n        }, seriesModel);\n      }\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('The polyline edgeShape can only be used in orthogonal layout');\n      }\n    }\n  } // show all edge when edgeShape is 'curve', filter node `isExpand` is false when edgeShape is 'polyline'\n\n\n  if (edge && !(edgeShape === 'polyline' && !node.isExpand)) {\n    edge.useStyle(zrUtil.defaults({\n      strokeNoScale: true,\n      fill: null\n    }, lineStyle));\n    setStatesStylesFromModel(edge, itemModel, 'lineStyle');\n    setDefaultStateProxy(edge);\n    group.add(edge);\n  }\n}\n\nfunction removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt) {\n  var virtualRoot = data.tree.root;\n\n  var _a = getSourceNode(virtualRoot, node),\n      source = _a.source,\n      sourceLayout = _a.sourceLayout;\n\n  var symbolEl = data.getItemGraphicEl(node.dataIndex);\n\n  if (!symbolEl) {\n    return;\n  }\n\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesModel.get('edgeShape');\n  var layoutOpt = seriesModel.get('layout');\n  var orient = seriesModel.get('orient');\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.removeElement(edge, {\n        shape: getEdgeShape(layoutOpt, orient, curvature, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function () {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    } else if (edgeShape === 'polyline' && seriesModel.get('layout') === 'orthogonal') {\n      graphic.removeElement(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function () {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    }\n  }\n}\n\nfunction getSourceNode(virtualRoot, node) {\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  return {\n    source: source,\n    sourceLayout: sourceLayout\n  };\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var sourceLayout = getSourceNode(virtualRoot, node).sourceLayout; // Use same duration and easing with update to have more consistent animation.\n\n  var removeAnimationOpt = {\n    duration: seriesModel.get('animationDurationUpdate'),\n    easing: seriesModel.get('animationEasingUpdate')\n  };\n  graphic.removeElement(symbolEl, {\n    x: sourceLayout.x + 1,\n    y: sourceLayout.y + 1\n  }, seriesModel, {\n    cb: function () {\n      group.remove(symbolEl);\n      data.setItemGraphicEl(dataIndex, null);\n    },\n    removeOpt: removeAnimationOpt\n  });\n  symbolEl.fadeOut(null, data.hostModel, {\n    fadeLabel: true,\n    animation: removeAnimationOpt\n  }); // remove edge as parent node\n\n  node.children.forEach(function (childNode) {\n    removeNodeEdge(childNode, data, group, seriesModel, removeAnimationOpt);\n  }); // remove edge as child node\n\n  removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt);\n}\n\nfunction getEdgeShape(layoutOpt, orient, curvature, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (layoutOpt === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x || 0,\n      y1: radialCoor1.y || 0,\n      x2: radialCoor4.x || 0,\n      y2: radialCoor4.y || 0,\n      cpx1: radialCoor2.x || 0,\n      cpy1: radialCoor2.y || 0,\n      cpx2: radialCoor3.x || 0,\n      cpy2: radialCoor3.y || 0\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nexport default TreeView;"],"names":["TreeSeriesModel","_super","_this","apply","this","arguments","hasSymbolVisual","ignoreStyleOnData","__extends","prototype","getInitialData","option","root","name","children","data","leaves","leavesModel","Model","ecModel","tree","Tree","nodeData","wrapMethod","model","idx","node","getNodeByDataIndex","length","isExpand","parentModel","treeDepth","eachNode","depth","expandTreeDepth","expandAndCollapse","initialTreeDepth","item","hostTree","getRawDataItem","dataIndex","collapsed","getOrient","orient","get","setZoom","zoom","setCenter","center","formatTooltip","multipleSeries","dataType","getData","realRoot","value","getValue","parentNode","createTooltipMarkup","noValue","isNaN","getDataParams","params","treeAncestors","wrapTreePathInfo","type","layoutMode","defaultOption","z","coordinateSystem","left","top","right","bottom","layout","edgeShape","edgeForkPosition","roam","nodeScaleRatio","symbol","symbolSize","lineStyle","color","width","curveness","itemStyle","borderWidth","label","show","animationEasing","animationDuration","animationDurationUpdate","SeriesModel","TreeEdgeShape","parentPoint","childPoints","TreePath","opts","call","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","childLen","firstChildPos","lastChildPos","moveTo","lineTo","forkDim","otherDim","forkPosition","parsePercent","tmpPoint","i","point","Path","TreeView","_mainGroup","graphic","init","api","_controller","RoamController","getZr","_controllerHost","target","group","add","render","seriesModel","layoutInfo","x","y","height","_updateViewCoordSys","_updateController","oldData","_data","diff","newIdx","symbolNeedsDraw","updateNode","update","oldIdx","symbolEl","getItemGraphicEl","removeNode","remove","execute","_nodeScaleRatio","_updateNodeAndLinkScale","eachItemGraphicEl","el","off","on","dispatchAction","seriesId","id","points","each","getItemLayout","push","min","max","bbox","oldMin","_min","oldMax","_max","viewCoordSys","View","zoomLimit","setBoundingRect","attr","scaleX","scaleY","controller","controllerHost","setPointerChecker","e","rect","getBoundingRect","applyTransform","transform","contain","onIrrelevantElement","enable","getZoom","roamHelper","dx","dy","scale","originX","originY","updateLabelLayout","nodeScale","_getNodeGlobalScale","setSymbolScale","coordSys","groupZoom","dispose","removeAll","ChartView","isInit","itemModel","getModel","visualColor","getVisual","symbolInnerColor","virtualRoot","source","sourceSymbolEl","sourceLayout","getLayout","sourceOldLayout","__oldX","__oldY","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","SymbolClz","useNameLabel","updateData","__radialRawX","__radialRawY","setItemGraphicEl","symbolPath","getSymbolPath","rootLayout","length_1","rad","isLeft","Math","atan2","PI","textPosition","normalLabelModel","rotate","labelRotateRadian","textContent","getTextContent","setTextConfig","position","rotation","origin","setStyle","focus","focusDataIndices","zrUtil","getAncestorsIndices","getDescendantIndices","getECData","curvature","getLineStyle","edge","__edge","getEdgeShape","childLayout","useStyle","strokeNoScale","setStatesStylesFromModel","setDefaultStateProxy","drawEdge","onHoverStateChange","toState","parentEl","hoverState","HOVER_STATE_BLUR","setStatesFlag","removeNodeEdge","removeAnimationOpt","_a","getSourceNode","sourceEdge","undefined","layoutOpt","style","opacity","cb","removeOpt","duration","easing","fadeOut","hostModel","fadeLabel","animation","forEach","childNode","cpx1","cpy1","cpx2","cpy2","x1","x2","y1","y2","radialCoor1","radialCoordinate","radialCoor2","radialCoor3","radialCoor4"],"sourceRoot":""}