{"version":3,"file":"static/js/7091.7c151d5a.js","mappings":"8LAgDO,SAASA,EAA6BC,EAAYC,GACvD,SAASC,EAAiBC,EAASC,GACjC,IAAIC,EAAgB,GAQpB,OAPAF,EAAQG,cAAc,CACpBC,SAAU,SACVC,QAASR,EACTS,MAAOL,IACN,SAAUM,GACXL,EAAcM,KAAKD,EAAYE,YACjC,IACOP,CACT,EAEAQ,EAAAA,EAAAA,IAAK,CAAC,CAACb,EAAa,eAAgB,gBAAiB,CAACA,EAAa,SAAU,UAAW,CAACA,EAAa,WAAY,cAAc,SAAUc,GACxIb,EAAiBa,EAAU,IAAI,SAAUV,EAASD,EAASY,GACzDX,GAAUY,EAAAA,EAAAA,IAAO,CAAC,EAAGZ,GAMrBW,EAAIE,gBAAeD,EAAAA,EAAAA,IAAOZ,EAAS,CACjCc,KAAMJ,EAAU,GAChBF,YAAaV,EAAiBC,EAASC,KAE3C,GACF,GACF,CAEA,SAASe,EAA+BD,EAAME,EAAcC,EAAOlB,EAASC,GAC1E,IAAIkB,EAAkBJ,EAAOE,EAExBC,EAAME,SAASD,IAKlBnB,EAAQG,cAAc,CACpBC,SAAU,SACVC,QAAS,QACR,SAAUE,GAKX,IAJA,IAAIE,EAAcF,EAAYE,YAC1BY,EAAcd,EAAYe,OAAOD,YACjCE,EAAWtB,EAAQsB,SAEdC,EAAI,EAAGA,EAAID,EAASE,OAAQD,IACnC,GAAID,EAASC,GAAGf,cAAgBA,EAAa,CAC3C,IAAIiB,EAAOnB,EAAYoB,UACnBC,GAAYC,EAAAA,EAAAA,IAAeH,EAAMzB,EAAQ6B,mBAC7CZ,EAAMa,QAAQZ,EAAiB,CAC7BJ,KAAMI,EACNa,SAAUzB,EAAY0B,GACtBC,MAAMC,EAAAA,EAAAA,IAAQP,GAAaF,EAAKU,QAAQR,EAAU,IAAMF,EAAKU,QAAQR,GACrEL,UAAUc,EAAAA,EAAAA,IAAShB,GAAeA,GAAcR,EAAAA,EAAAA,IAAO,CAAC,EAAGQ,IAE/D,CAEJ,GAEJ,CAEO,SAASiB,EAAyBC,EAAerB,EAAON,GAC7D2B,EAAcC,GAAG,iBAAiB,SAAUC,GAC1C,IAAIzC,EAAUY,EAAI8B,WAEdD,EAAOE,aACT3B,EAA+B,MAAO,gBAAiBE,EAAOlB,EAASyC,GACvEzB,EAA+B,MAAO,gBAAiBE,EAAOlB,EAASyC,IACxC,WAAtBA,EAAOG,YAChB5B,EAA+B,MAAO,WAAYE,EAAOlB,EAASyC,GAClEzB,EAA+B,MAAO,WAAYE,EAAOlB,EAASyC,IACnC,aAAtBA,EAAOG,aAChB5B,EAA+B,MAAO,aAAcE,EAAOlB,EAASyC,GACpEzB,EAA+B,MAAO,aAAcE,EAAOlB,EAASyC,GAExE,GACF,C","sources":["../node_modules/echarts/lib/legacy/dataSelectAction.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { extend, each, isArray, isString } from 'zrender/lib/core/util.js';\nimport { deprecateReplaceLog, deprecateLog } from '../util/log.js';\nimport { queryDataIndex } from '../util/model.js'; // Legacy data selection action.\n// Inlucdes: pieSelect, pieUnSelect, pieToggleSelect, mapSelect, mapUnSelect, mapToggleSelect\n\nexport function createLegacyDataSelectAction(seriesType, ecRegisterAction) {\n  function getSeriesIndices(ecModel, payload) {\n    var seriesIndices = [];\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: seriesType,\n      query: payload\n    }, function (seriesModel) {\n      seriesIndices.push(seriesModel.seriesIndex);\n    });\n    return seriesIndices;\n  }\n\n  each([[seriesType + 'ToggleSelect', 'toggleSelect'], [seriesType + 'Select', 'select'], [seriesType + 'UnSelect', 'unselect']], function (eventsMap) {\n    ecRegisterAction(eventsMap[0], function (payload, ecModel, api) {\n      payload = extend({}, payload);\n\n      if (process.env.NODE_ENV !== 'production') {\n        deprecateReplaceLog(payload.type, eventsMap[1]);\n      }\n\n      api.dispatchAction(extend(payload, {\n        type: eventsMap[1],\n        seriesIndex: getSeriesIndices(ecModel, payload)\n      }));\n    });\n  });\n}\n\nfunction handleSeriesLegacySelectEvents(type, eventPostfix, ecIns, ecModel, payload) {\n  var legacyEventName = type + eventPostfix;\n\n  if (!ecIns.isSilent(legacyEventName)) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateLog(\"event \" + legacyEventName + \" is deprecated.\");\n    }\n\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'pie'\n    }, function (seriesModel) {\n      var seriesIndex = seriesModel.seriesIndex;\n      var selectedMap = seriesModel.option.selectedMap;\n      var selected = payload.selected;\n\n      for (var i = 0; i < selected.length; i++) {\n        if (selected[i].seriesIndex === seriesIndex) {\n          var data = seriesModel.getData();\n          var dataIndex = queryDataIndex(data, payload.fromActionPayload);\n          ecIns.trigger(legacyEventName, {\n            type: legacyEventName,\n            seriesId: seriesModel.id,\n            name: isArray(dataIndex) ? data.getName(dataIndex[0]) : data.getName(dataIndex),\n            selected: isString(selectedMap) ? selectedMap : extend({}, selectedMap)\n          });\n        }\n      }\n    });\n  }\n}\n\nexport function handleLegacySelectEvents(messageCenter, ecIns, api) {\n  messageCenter.on('selectchanged', function (params) {\n    var ecModel = api.getModel();\n\n    if (params.isFromClick) {\n      handleSeriesLegacySelectEvents('map', 'selectchanged', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'selectchanged', ecIns, ecModel, params);\n    } else if (params.fromAction === 'select') {\n      handleSeriesLegacySelectEvents('map', 'selected', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'selected', ecIns, ecModel, params);\n    } else if (params.fromAction === 'unselect') {\n      handleSeriesLegacySelectEvents('map', 'unselected', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'unselected', ecIns, ecModel, params);\n    }\n  });\n}"],"names":["createLegacyDataSelectAction","seriesType","ecRegisterAction","getSeriesIndices","ecModel","payload","seriesIndices","eachComponent","mainType","subType","query","seriesModel","push","seriesIndex","each","eventsMap","api","extend","dispatchAction","type","handleSeriesLegacySelectEvents","eventPostfix","ecIns","legacyEventName","isSilent","selectedMap","option","selected","i","length","data","getData","dataIndex","queryDataIndex","fromActionPayload","trigger","seriesId","id","name","isArray","getName","isString","handleLegacySelectEvents","messageCenter","on","params","getModel","isFromClick","fromAction"],"sourceRoot":""}