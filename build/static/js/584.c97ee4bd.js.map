{"version":3,"file":"static/js/584.c97ee4bd.js","mappings":"sIAiDIA,EAGF,WACEC,KAAKC,GAAK,EACVD,KAAKE,GAAK,EACVF,KAAKG,GAAK,EACVH,KAAKI,EAAI,EACTJ,KAAKK,WAAa,EAClBL,KAAKM,SAAqB,EAAVC,KAAKC,GACrBR,KAAKS,WAAY,CACnB,EAKEC,EAEJ,SAAUC,GAGR,SAASD,EAAYE,GACnB,IAAIC,EAAQF,EAAOG,KAAKd,KAAMY,IAASZ,KAGvC,OADAa,EAAME,KAAO,UACNF,CACT,CA6CA,OApDAG,EAAAA,EAAAA,IAAUN,EAAaC,GASvBD,EAAYO,UAAUC,gBAAkB,WACtC,OAAO,IAAInB,CACb,EAEAW,EAAYO,UAAUE,UAAY,SAAUC,EAAKC,GAC/C,IAAIpB,EAAKoB,EAAMpB,GACXC,EAAKmB,EAAMnB,GACXC,EAAKI,KAAKe,IAAID,EAAMlB,IAAM,EAAG,GAC7BC,EAAIG,KAAKe,IAAID,EAAMjB,EAAG,GACtBmB,EAAgB,IAAVnB,EAAID,GACVqB,EAAUrB,EAAKoB,EACflB,EAAagB,EAAMhB,WACnBC,EAAWe,EAAMf,SACjBG,EAAYY,EAAMZ,UAClBgB,EAAgB,EAAVlB,KAAKC,GACXkB,EAAiBjB,EAAYH,EAAWD,EAAaoB,EAAMpB,EAAaC,EAAWmB,EAElFC,IAEHrB,EAAaC,GAAYG,EAAYgB,GAAOA,IAG9C,IAAIE,EAAapB,KAAKqB,IAAIvB,GACtBwB,EAAatB,KAAKuB,IAAIzB,GACtB0B,EAAWxB,KAAKqB,IAAItB,GACpB0B,EAAWzB,KAAKuB,IAAIxB,GAEpBoB,GACFN,EAAIa,OAAON,EAAaxB,EAAKF,EAAI4B,EAAa1B,EAAKD,GACnDkB,EAAIc,IAAIP,EAAaH,EAAUvB,EAAI4B,EAAaL,EAAUtB,EAAIqB,GAAKhB,KAAKC,GAAKH,EAAYA,GAAaI,IAEtGW,EAAIa,OAAON,EAAavB,EAAIH,EAAI4B,EAAazB,EAAIF,GAGnDkB,EAAIc,IAAIjC,EAAIC,EAAIE,EAAGC,EAAYC,GAAWG,GAC1CW,EAAIc,IAAIH,EAAWP,EAAUvB,EAAI+B,EAAWR,EAAUtB,EAAIqB,EAAIjB,EAAqB,EAAVC,KAAKC,GAAQF,EAAWC,KAAKC,IAAKC,GAEhG,IAAPN,GACFiB,EAAIc,IAAIjC,EAAIC,EAAIC,EAAIG,EAAUD,EAAYI,EAG9C,EAEOC,CACT,CAtDA,CAsDEyB,EAAAA,IAEF,K","sources":["../node_modules/echarts/lib/util/shape/sausage.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { Path } from '../graphic.js';\n/**\n * Sausage: similar to sector, but have half circle on both sides\n */\n\nvar SausageShape =\n/** @class */\nfunction () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath =\n/** @class */\nfunction (_super) {\n  __extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var PI2 = Math.PI * 2;\n    var lessThanCircle = clockwise ? endAngle - startAngle < PI2 : startAngle - endAngle < PI2;\n\n    if (!lessThanCircle) {\n      // Normalize angles\n      startAngle = endAngle - (clockwise ? PI2 : -PI2);\n    }\n\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + cx, unitStartY * r0 + cy);\n      ctx.arc(unitStartX * rCenter + cx, unitStartY * rCenter + cy, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    } else {\n      ctx.moveTo(unitStartX * r + cx, unitStartY * r + cy);\n    }\n\n    ctx.arc(cx, cy, r, startAngle, endAngle, !clockwise);\n    ctx.arc(unitEndX * rCenter + cx, unitEndY * rCenter + cy, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(cx, cy, r0, endAngle, startAngle, clockwise);\n    } // ctx.closePath();\n\n  };\n\n  return SausagePath;\n}(Path);\n\nexport default SausagePath;"],"names":["SausageShape","this","cx","cy","r0","r","startAngle","endAngle","Math","PI","clockwise","SausagePath","_super","opts","_this","call","type","__extends","prototype","getDefaultShape","buildPath","ctx","shape","max","dr","rCenter","PI2","lessThanCircle","unitStartX","cos","unitStartY","sin","unitEndX","unitEndY","moveTo","arc","Path"],"sourceRoot":""}