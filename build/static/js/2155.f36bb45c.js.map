{"version":3,"file":"static/js/2155.f36bb45c.js","mappings":"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","sources":["../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/core/OrientedBoundingRect.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/zrender/lib/core/Point.js","../node_modules/zrender/lib/core/Transformable.js","../node_modules/zrender/lib/core/WeakMap.js"],"sourcesContent":["var Entry = (function () {\n    function Entry(val) {\n        this.value = val;\n    }\n    return Entry;\n}());\nexport { Entry };\nvar LinkedList = (function () {\n    function LinkedList() {\n        this._len = 0;\n    }\n    LinkedList.prototype.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n    LinkedList.prototype.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n    LinkedList.prototype.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n    LinkedList.prototype.len = function () {\n        return this._len;\n    };\n    LinkedList.prototype.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\nvar LRU = (function () {\n    function LRU(maxSize) {\n        this._list = new LinkedList();\n        this._maxSize = 10;\n        this._map = {};\n        this._maxSize = maxSize;\n    }\n    LRU.prototype.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            var entry = this._lastRemovedEntry;\n            if (len >= this._maxSize && len > 0) {\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n        return removed;\n    };\n    LRU.prototype.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n            return entry.value;\n        }\n    };\n    LRU.prototype.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n    LRU.prototype.len = function () {\n        return this._list.len();\n    };\n    return LRU;\n}());\nexport default LRU;\n","import Point from './Point.js';\nvar extent = [0, 0];\nvar extent2 = [0, 0];\nvar minTv = new Point();\nvar maxTv = new Point();\nvar OrientedBoundingRect = (function () {\n    function OrientedBoundingRect(rect, transform) {\n        this._corners = [];\n        this._axes = [];\n        this._origin = [0, 0];\n        for (var i = 0; i < 4; i++) {\n            this._corners[i] = new Point();\n        }\n        for (var i = 0; i < 2; i++) {\n            this._axes[i] = new Point();\n        }\n        if (rect) {\n            this.fromBoundingRect(rect, transform);\n        }\n    }\n    OrientedBoundingRect.prototype.fromBoundingRect = function (rect, transform) {\n        var corners = this._corners;\n        var axes = this._axes;\n        var x = rect.x;\n        var y = rect.y;\n        var x2 = x + rect.width;\n        var y2 = y + rect.height;\n        corners[0].set(x, y);\n        corners[1].set(x2, y);\n        corners[2].set(x2, y2);\n        corners[3].set(x, y2);\n        if (transform) {\n            for (var i = 0; i < 4; i++) {\n                corners[i].transform(transform);\n            }\n        }\n        Point.sub(axes[0], corners[1], corners[0]);\n        Point.sub(axes[1], corners[3], corners[0]);\n        axes[0].normalize();\n        axes[1].normalize();\n        for (var i = 0; i < 2; i++) {\n            this._origin[i] = axes[i].dot(corners[0]);\n        }\n    };\n    OrientedBoundingRect.prototype.intersect = function (other, mtv) {\n        var overlapped = true;\n        var noMtv = !mtv;\n        minTv.set(Infinity, Infinity);\n        maxTv.set(0, 0);\n        if (!this._intersectCheckOneSide(this, other, minTv, maxTv, noMtv, 1)) {\n            overlapped = false;\n            if (noMtv) {\n                return overlapped;\n            }\n        }\n        if (!this._intersectCheckOneSide(other, this, minTv, maxTv, noMtv, -1)) {\n            overlapped = false;\n            if (noMtv) {\n                return overlapped;\n            }\n        }\n        if (!noMtv) {\n            Point.copy(mtv, overlapped ? minTv : maxTv);\n        }\n        return overlapped;\n    };\n    OrientedBoundingRect.prototype._intersectCheckOneSide = function (self, other, minTv, maxTv, noMtv, inverse) {\n        var overlapped = true;\n        for (var i = 0; i < 2; i++) {\n            var axis = this._axes[i];\n            this._getProjMinMaxOnAxis(i, self._corners, extent);\n            this._getProjMinMaxOnAxis(i, other._corners, extent2);\n            if (extent[1] < extent2[0] || extent[0] > extent2[1]) {\n                overlapped = false;\n                if (noMtv) {\n                    return overlapped;\n                }\n                var dist0 = Math.abs(extent2[0] - extent[1]);\n                var dist1 = Math.abs(extent[0] - extent2[1]);\n                if (Math.min(dist0, dist1) > maxTv.len()) {\n                    if (dist0 < dist1) {\n                        Point.scale(maxTv, axis, -dist0 * inverse);\n                    }\n                    else {\n                        Point.scale(maxTv, axis, dist1 * inverse);\n                    }\n                }\n            }\n            else if (minTv) {\n                var dist0 = Math.abs(extent2[0] - extent[1]);\n                var dist1 = Math.abs(extent[0] - extent2[1]);\n                if (Math.min(dist0, dist1) < minTv.len()) {\n                    if (dist0 < dist1) {\n                        Point.scale(minTv, axis, dist0 * inverse);\n                    }\n                    else {\n                        Point.scale(minTv, axis, -dist1 * inverse);\n                    }\n                }\n            }\n        }\n        return overlapped;\n    };\n    OrientedBoundingRect.prototype._getProjMinMaxOnAxis = function (dim, corners, out) {\n        var axis = this._axes[dim];\n        var origin = this._origin;\n        var proj = corners[0].dot(axis) + origin[dim];\n        var min = proj;\n        var max = proj;\n        for (var i = 1; i < corners.length; i++) {\n            var proj_1 = corners[i].dot(axis) + origin[dim];\n            min = Math.min(proj_1, min);\n            max = Math.max(proj_1, max);\n        }\n        out[0] = min;\n        out[1] = max;\n    };\n    return OrientedBoundingRect;\n}());\nexport default OrientedBoundingRect;\n","import * as vec2 from './vector.js';\nimport BoundingRect from './BoundingRect.js';\nimport { devicePixelRatio as dpr } from '../config.js';\nimport { fromLine, fromCubic, fromQuadratic, fromArc } from './bbox.js';\nimport { cubicLength, cubicSubdivide, quadraticLength, quadraticSubdivide } from './curve.js';\nvar CMD = {\n    M: 1,\n    L: 2,\n    C: 3,\n    Q: 4,\n    A: 5,\n    Z: 6,\n    R: 7\n};\nvar tmpOutX = [];\nvar tmpOutY = [];\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathAbs = Math.abs;\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\nvar tmpAngles = [];\nfunction modPI2(radian) {\n    var n = Math.round(radian / PI * 1e8) / 1e8;\n    return (n % 2) * PI;\n}\nexport function normalizeArcAngles(angles, anticlockwise) {\n    var newStartAngle = modPI2(angles[0]);\n    if (newStartAngle < 0) {\n        newStartAngle += PI2;\n    }\n    var delta = newStartAngle - angles[0];\n    var newEndAngle = angles[1];\n    newEndAngle += delta;\n    if (!anticlockwise && newEndAngle - newStartAngle >= PI2) {\n        newEndAngle = newStartAngle + PI2;\n    }\n    else if (anticlockwise && newStartAngle - newEndAngle >= PI2) {\n        newEndAngle = newStartAngle - PI2;\n    }\n    else if (!anticlockwise && newStartAngle > newEndAngle) {\n        newEndAngle = newStartAngle + (PI2 - modPI2(newStartAngle - newEndAngle));\n    }\n    else if (anticlockwise && newStartAngle < newEndAngle) {\n        newEndAngle = newStartAngle - (PI2 - modPI2(newEndAngle - newStartAngle));\n    }\n    angles[0] = newStartAngle;\n    angles[1] = newEndAngle;\n}\nvar PathProxy = (function () {\n    function PathProxy(notSaveData) {\n        this.dpr = 1;\n        this._xi = 0;\n        this._yi = 0;\n        this._x0 = 0;\n        this._y0 = 0;\n        this._len = 0;\n        if (notSaveData) {\n            this._saveData = false;\n        }\n        if (this._saveData) {\n            this.data = [];\n        }\n    }\n    PathProxy.prototype.increaseVersion = function () {\n        this._version++;\n    };\n    PathProxy.prototype.getVersion = function () {\n        return this._version;\n    };\n    PathProxy.prototype.setScale = function (sx, sy, segmentIgnoreThreshold) {\n        segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n        if (segmentIgnoreThreshold > 0) {\n            this._ux = mathAbs(segmentIgnoreThreshold / dpr / sx) || 0;\n            this._uy = mathAbs(segmentIgnoreThreshold / dpr / sy) || 0;\n        }\n    };\n    PathProxy.prototype.setDPR = function (dpr) {\n        this.dpr = dpr;\n    };\n    PathProxy.prototype.setContext = function (ctx) {\n        this._ctx = ctx;\n    };\n    PathProxy.prototype.getContext = function () {\n        return this._ctx;\n    };\n    PathProxy.prototype.beginPath = function () {\n        this._ctx && this._ctx.beginPath();\n        this.reset();\n        return this;\n    };\n    PathProxy.prototype.reset = function () {\n        if (this._saveData) {\n            this._len = 0;\n        }\n        if (this._pathSegLen) {\n            this._pathSegLen = null;\n            this._pathLen = 0;\n        }\n        this._version++;\n    };\n    PathProxy.prototype.moveTo = function (x, y) {\n        this._drawPendingPt();\n        this.addData(CMD.M, x, y);\n        this._ctx && this._ctx.moveTo(x, y);\n        this._x0 = x;\n        this._y0 = y;\n        this._xi = x;\n        this._yi = y;\n        return this;\n    };\n    PathProxy.prototype.lineTo = function (x, y) {\n        var dx = mathAbs(x - this._xi);\n        var dy = mathAbs(y - this._yi);\n        var exceedUnit = dx > this._ux || dy > this._uy;\n        this.addData(CMD.L, x, y);\n        if (this._ctx && exceedUnit) {\n            this._ctx.lineTo(x, y);\n        }\n        if (exceedUnit) {\n            this._xi = x;\n            this._yi = y;\n            this._pendingPtDist = 0;\n        }\n        else {\n            var d2 = dx * dx + dy * dy;\n            if (d2 > this._pendingPtDist) {\n                this._pendingPtX = x;\n                this._pendingPtY = y;\n                this._pendingPtDist = d2;\n            }\n        }\n        return this;\n    };\n    PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n        this._drawPendingPt();\n        this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n        if (this._ctx) {\n            this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n        }\n        this._xi = x3;\n        this._yi = y3;\n        return this;\n    };\n    PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\n        this._drawPendingPt();\n        this.addData(CMD.Q, x1, y1, x2, y2);\n        if (this._ctx) {\n            this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n        }\n        this._xi = x2;\n        this._yi = y2;\n        return this;\n    };\n    PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n        this._drawPendingPt();\n        tmpAngles[0] = startAngle;\n        tmpAngles[1] = endAngle;\n        normalizeArcAngles(tmpAngles, anticlockwise);\n        startAngle = tmpAngles[0];\n        endAngle = tmpAngles[1];\n        var delta = endAngle - startAngle;\n        this.addData(CMD.A, cx, cy, r, r, startAngle, delta, 0, anticlockwise ? 0 : 1);\n        this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n        this._xi = mathCos(endAngle) * r + cx;\n        this._yi = mathSin(endAngle) * r + cy;\n        return this;\n    };\n    PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n        this._drawPendingPt();\n        if (this._ctx) {\n            this._ctx.arcTo(x1, y1, x2, y2, radius);\n        }\n        return this;\n    };\n    PathProxy.prototype.rect = function (x, y, w, h) {\n        this._drawPendingPt();\n        this._ctx && this._ctx.rect(x, y, w, h);\n        this.addData(CMD.R, x, y, w, h);\n        return this;\n    };\n    PathProxy.prototype.closePath = function () {\n        this._drawPendingPt();\n        this.addData(CMD.Z);\n        var ctx = this._ctx;\n        var x0 = this._x0;\n        var y0 = this._y0;\n        if (ctx) {\n            ctx.closePath();\n        }\n        this._xi = x0;\n        this._yi = y0;\n        return this;\n    };\n    PathProxy.prototype.fill = function (ctx) {\n        ctx && ctx.fill();\n        this.toStatic();\n    };\n    PathProxy.prototype.stroke = function (ctx) {\n        ctx && ctx.stroke();\n        this.toStatic();\n    };\n    PathProxy.prototype.len = function () {\n        return this._len;\n    };\n    PathProxy.prototype.setData = function (data) {\n        var len = data.length;\n        if (!(this.data && this.data.length === len) && hasTypedArray) {\n            this.data = new Float32Array(len);\n        }\n        for (var i = 0; i < len; i++) {\n            this.data[i] = data[i];\n        }\n        this._len = len;\n    };\n    PathProxy.prototype.appendPath = function (path) {\n        if (!(path instanceof Array)) {\n            path = [path];\n        }\n        var len = path.length;\n        var appendSize = 0;\n        var offset = this._len;\n        for (var i = 0; i < len; i++) {\n            appendSize += path[i].len();\n        }\n        if (hasTypedArray && (this.data instanceof Float32Array)) {\n            this.data = new Float32Array(offset + appendSize);\n        }\n        for (var i = 0; i < len; i++) {\n            var appendPathData = path[i].data;\n            for (var k = 0; k < appendPathData.length; k++) {\n                this.data[offset++] = appendPathData[k];\n            }\n        }\n        this._len = offset;\n    };\n    PathProxy.prototype.addData = function (cmd, a, b, c, d, e, f, g, h) {\n        if (!this._saveData) {\n            return;\n        }\n        var data = this.data;\n        if (this._len + arguments.length > data.length) {\n            this._expandData();\n            data = this.data;\n        }\n        for (var i = 0; i < arguments.length; i++) {\n            data[this._len++] = arguments[i];\n        }\n    };\n    PathProxy.prototype._drawPendingPt = function () {\n        if (this._pendingPtDist > 0) {\n            this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY);\n            this._pendingPtDist = 0;\n        }\n    };\n    PathProxy.prototype._expandData = function () {\n        if (!(this.data instanceof Array)) {\n            var newData = [];\n            for (var i = 0; i < this._len; i++) {\n                newData[i] = this.data[i];\n            }\n            this.data = newData;\n        }\n    };\n    PathProxy.prototype.toStatic = function () {\n        if (!this._saveData) {\n            return;\n        }\n        this._drawPendingPt();\n        var data = this.data;\n        if (data instanceof Array) {\n            data.length = this._len;\n            if (hasTypedArray && this._len > 11) {\n                this.data = new Float32Array(data);\n            }\n        }\n    };\n    PathProxy.prototype.getBoundingRect = function () {\n        min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n        max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n        var data = this.data;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n        var i;\n        for (i = 0; i < this._len;) {\n            var cmd = data[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = data[i];\n                yi = data[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            switch (cmd) {\n                case CMD.M:\n                    xi = x0 = data[i++];\n                    yi = y0 = data[i++];\n                    min2[0] = x0;\n                    min2[1] = y0;\n                    max2[0] = x0;\n                    max2[1] = y0;\n                    break;\n                case CMD.L:\n                    fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var startAngle = data[i++];\n                    var endAngle = data[i++] + startAngle;\n                    i += 1;\n                    var anticlockwise = !data[i++];\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                    break;\n                case CMD.Z:\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n            vec2.min(min, min, min2);\n            vec2.max(max, max, max2);\n        }\n        if (i === 0) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }\n        return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    };\n    PathProxy.prototype._calculateLength = function () {\n        var data = this.data;\n        var len = this._len;\n        var ux = this._ux;\n        var uy = this._uy;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n        if (!this._pathSegLen) {\n            this._pathSegLen = [];\n        }\n        var pathSegLen = this._pathSegLen;\n        var pathTotalLen = 0;\n        var segCount = 0;\n        for (var i = 0; i < len;) {\n            var cmd = data[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = data[i];\n                yi = data[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            var l = -1;\n            switch (cmd) {\n                case CMD.M:\n                    xi = x0 = data[i++];\n                    yi = y0 = data[i++];\n                    break;\n                case CMD.L: {\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    var dx = x2 - xi;\n                    var dy = y2 - yi;\n                    if (mathAbs(dx) > ux || mathAbs(dy) > uy || i === len - 1) {\n                        l = Math.sqrt(dx * dx + dy * dy);\n                        xi = x2;\n                        yi = y2;\n                    }\n                    break;\n                }\n                case CMD.C: {\n                    var x1 = data[i++];\n                    var y1 = data[i++];\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    var x3 = data[i++];\n                    var y3 = data[i++];\n                    l = cubicLength(xi, yi, x1, y1, x2, y2, x3, y3, 10);\n                    xi = x3;\n                    yi = y3;\n                    break;\n                }\n                case CMD.Q: {\n                    var x1 = data[i++];\n                    var y1 = data[i++];\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    l = quadraticLength(xi, yi, x1, y1, x2, y2, 10);\n                    xi = x2;\n                    yi = y2;\n                    break;\n                }\n                case CMD.A:\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var startAngle = data[i++];\n                    var delta = data[i++];\n                    var endAngle = delta + startAngle;\n                    i += 1;\n                    var anticlockwise = !data[i++];\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    l = mathMax(rx, ry) * mathMin(PI2, Math.abs(delta));\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R: {\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    l = width * 2 + height * 2;\n                    break;\n                }\n                case CMD.Z: {\n                    var dx = x0 - xi;\n                    var dy = y0 - yi;\n                    l = Math.sqrt(dx * dx + dy * dy);\n                    xi = x0;\n                    yi = y0;\n                    break;\n                }\n            }\n            if (l >= 0) {\n                pathSegLen[segCount++] = l;\n                pathTotalLen += l;\n            }\n        }\n        this._pathLen = pathTotalLen;\n        return pathTotalLen;\n    };\n    PathProxy.prototype.rebuildPath = function (ctx, percent) {\n        var d = this.data;\n        var ux = this._ux;\n        var uy = this._uy;\n        var len = this._len;\n        var x0;\n        var y0;\n        var xi;\n        var yi;\n        var x;\n        var y;\n        var drawPart = percent < 1;\n        var pathSegLen;\n        var pathTotalLen;\n        var accumLength = 0;\n        var segCount = 0;\n        var displayedLength;\n        var pendingPtDist = 0;\n        var pendingPtX;\n        var pendingPtY;\n        if (drawPart) {\n            if (!this._pathSegLen) {\n                this._calculateLength();\n            }\n            pathSegLen = this._pathSegLen;\n            pathTotalLen = this._pathLen;\n            displayedLength = percent * pathTotalLen;\n            if (!displayedLength) {\n                return;\n            }\n        }\n        lo: for (var i = 0; i < len;) {\n            var cmd = d[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = d[i];\n                yi = d[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            if (cmd !== CMD.L && pendingPtDist > 0) {\n                ctx.lineTo(pendingPtX, pendingPtY);\n                pendingPtDist = 0;\n            }\n            switch (cmd) {\n                case CMD.M:\n                    x0 = xi = d[i++];\n                    y0 = yi = d[i++];\n                    ctx.moveTo(xi, yi);\n                    break;\n                case CMD.L: {\n                    x = d[i++];\n                    y = d[i++];\n                    var dx = mathAbs(x - xi);\n                    var dy = mathAbs(y - yi);\n                    if (dx > ux || dy > uy) {\n                        if (drawPart) {\n                            var l = pathSegLen[segCount++];\n                            if (accumLength + l > displayedLength) {\n                                var t = (displayedLength - accumLength) / l;\n                                ctx.lineTo(xi * (1 - t) + x * t, yi * (1 - t) + y * t);\n                                break lo;\n                            }\n                            accumLength += l;\n                        }\n                        ctx.lineTo(x, y);\n                        xi = x;\n                        yi = y;\n                        pendingPtDist = 0;\n                    }\n                    else {\n                        var d2 = dx * dx + dy * dy;\n                        if (d2 > pendingPtDist) {\n                            pendingPtX = x;\n                            pendingPtY = y;\n                            pendingPtDist = d2;\n                        }\n                    }\n                    break;\n                }\n                case CMD.C: {\n                    var x1 = d[i++];\n                    var y1 = d[i++];\n                    var x2 = d[i++];\n                    var y2 = d[i++];\n                    var x3 = d[i++];\n                    var y3 = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            cubicSubdivide(xi, x1, x2, x3, t, tmpOutX);\n                            cubicSubdivide(yi, y1, y2, y3, t, tmpOutY);\n                            ctx.bezierCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2], tmpOutX[3], tmpOutY[3]);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n                    xi = x3;\n                    yi = y3;\n                    break;\n                }\n                case CMD.Q: {\n                    var x1 = d[i++];\n                    var y1 = d[i++];\n                    var x2 = d[i++];\n                    var y2 = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            quadraticSubdivide(xi, x1, x2, t, tmpOutX);\n                            quadraticSubdivide(yi, y1, y2, t, tmpOutY);\n                            ctx.quadraticCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2]);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.quadraticCurveTo(x1, y1, x2, y2);\n                    xi = x2;\n                    yi = y2;\n                    break;\n                }\n                case CMD.A:\n                    var cx = d[i++];\n                    var cy = d[i++];\n                    var rx = d[i++];\n                    var ry = d[i++];\n                    var startAngle = d[i++];\n                    var delta = d[i++];\n                    var psi = d[i++];\n                    var anticlockwise = !d[i++];\n                    var r = (rx > ry) ? rx : ry;\n                    var isEllipse = mathAbs(rx - ry) > 1e-3;\n                    var endAngle = startAngle + delta;\n                    var breakBuild = false;\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            endAngle = startAngle + delta * (displayedLength - accumLength) / l;\n                            breakBuild = true;\n                        }\n                        accumLength += l;\n                    }\n                    if (isEllipse && ctx.ellipse) {\n                        ctx.ellipse(cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise);\n                    }\n                    else {\n                        ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n                    }\n                    if (breakBuild) {\n                        break lo;\n                    }\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = d[i];\n                    y0 = yi = d[i + 1];\n                    x = d[i++];\n                    y = d[i++];\n                    var width = d[i++];\n                    var height = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var d_1 = displayedLength - accumLength;\n                            ctx.moveTo(x, y);\n                            ctx.lineTo(x + mathMin(d_1, width), y);\n                            d_1 -= width;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x + width, y + mathMin(d_1, height));\n                            }\n                            d_1 -= height;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x + mathMax(width - d_1, 0), y + height);\n                            }\n                            d_1 -= width;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x, y + mathMax(height - d_1, 0));\n                            }\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.rect(x, y, width, height);\n                    break;\n                case CMD.Z:\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            ctx.lineTo(xi * (1 - t) + x0 * t, yi * (1 - t) + y0 * t);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.closePath();\n                    xi = x0;\n                    yi = y0;\n            }\n        }\n    };\n    PathProxy.prototype.clone = function () {\n        var newProxy = new PathProxy();\n        var data = this.data;\n        newProxy.data = data.slice ? data.slice()\n            : Array.prototype.slice.call(data);\n        newProxy._len = this._len;\n        return newProxy;\n    };\n    PathProxy.CMD = CMD;\n    PathProxy.initDefaultProps = (function () {\n        var proto = PathProxy.prototype;\n        proto._saveData = true;\n        proto._ux = 0;\n        proto._uy = 0;\n        proto._pendingPtDist = 0;\n        proto._version = 0;\n    })();\n    return PathProxy;\n}());\nexport default PathProxy;\n","var Point = (function () {\n    function Point(x, y) {\n        this.x = x || 0;\n        this.y = y || 0;\n    }\n    Point.prototype.copy = function (other) {\n        this.x = other.x;\n        this.y = other.y;\n        return this;\n    };\n    Point.prototype.clone = function () {\n        return new Point(this.x, this.y);\n    };\n    Point.prototype.set = function (x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    };\n    Point.prototype.equal = function (other) {\n        return other.x === this.x && other.y === this.y;\n    };\n    Point.prototype.add = function (other) {\n        this.x += other.x;\n        this.y += other.y;\n        return this;\n    };\n    Point.prototype.scale = function (scalar) {\n        this.x *= scalar;\n        this.y *= scalar;\n    };\n    Point.prototype.scaleAndAdd = function (other, scalar) {\n        this.x += other.x * scalar;\n        this.y += other.y * scalar;\n    };\n    Point.prototype.sub = function (other) {\n        this.x -= other.x;\n        this.y -= other.y;\n        return this;\n    };\n    Point.prototype.dot = function (other) {\n        return this.x * other.x + this.y * other.y;\n    };\n    Point.prototype.len = function () {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    };\n    Point.prototype.lenSquare = function () {\n        return this.x * this.x + this.y * this.y;\n    };\n    Point.prototype.normalize = function () {\n        var len = this.len();\n        this.x /= len;\n        this.y /= len;\n        return this;\n    };\n    Point.prototype.distance = function (other) {\n        var dx = this.x - other.x;\n        var dy = this.y - other.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    };\n    Point.prototype.distanceSquare = function (other) {\n        var dx = this.x - other.x;\n        var dy = this.y - other.y;\n        return dx * dx + dy * dy;\n    };\n    Point.prototype.negate = function () {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    };\n    Point.prototype.transform = function (m) {\n        if (!m) {\n            return;\n        }\n        var x = this.x;\n        var y = this.y;\n        this.x = m[0] * x + m[2] * y + m[4];\n        this.y = m[1] * x + m[3] * y + m[5];\n        return this;\n    };\n    Point.prototype.toArray = function (out) {\n        out[0] = this.x;\n        out[1] = this.y;\n        return out;\n    };\n    Point.prototype.fromArray = function (input) {\n        this.x = input[0];\n        this.y = input[1];\n    };\n    Point.set = function (p, x, y) {\n        p.x = x;\n        p.y = y;\n    };\n    Point.copy = function (p, p2) {\n        p.x = p2.x;\n        p.y = p2.y;\n    };\n    Point.len = function (p) {\n        return Math.sqrt(p.x * p.x + p.y * p.y);\n    };\n    Point.lenSquare = function (p) {\n        return p.x * p.x + p.y * p.y;\n    };\n    Point.dot = function (p0, p1) {\n        return p0.x * p1.x + p0.y * p1.y;\n    };\n    Point.add = function (out, p0, p1) {\n        out.x = p0.x + p1.x;\n        out.y = p0.y + p1.y;\n    };\n    Point.sub = function (out, p0, p1) {\n        out.x = p0.x - p1.x;\n        out.y = p0.y - p1.y;\n    };\n    Point.scale = function (out, p0, scalar) {\n        out.x = p0.x * scalar;\n        out.y = p0.y * scalar;\n    };\n    Point.scaleAndAdd = function (out, p0, p1, scalar) {\n        out.x = p0.x + p1.x * scalar;\n        out.y = p0.y + p1.y * scalar;\n    };\n    Point.lerp = function (out, p0, p1, t) {\n        var onet = 1 - t;\n        out.x = onet * p0.x + t * p1.x;\n        out.y = onet * p0.y + t * p1.y;\n    };\n    return Point;\n}());\nexport default Point;\n","import * as matrix from './matrix.js';\nimport * as vector from './vector.js';\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\nfunction isNotAroundZero(val) {\n    return val > EPSILON || val < -EPSILON;\n}\nvar scaleTmp = [];\nvar tmpTransform = [];\nvar originTransform = matrix.create();\nvar abs = Math.abs;\nvar Transformable = (function () {\n    function Transformable() {\n    }\n    Transformable.prototype.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n    Transformable.prototype.setPosition = function (arr) {\n        this.x = arr[0];\n        this.y = arr[1];\n    };\n    Transformable.prototype.setScale = function (arr) {\n        this.scaleX = arr[0];\n        this.scaleY = arr[1];\n    };\n    Transformable.prototype.setSkew = function (arr) {\n        this.skewX = arr[0];\n        this.skewY = arr[1];\n    };\n    Transformable.prototype.setOrigin = function (arr) {\n        this.originX = arr[0];\n        this.originY = arr[1];\n    };\n    Transformable.prototype.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.x)\n            || isNotAroundZero(this.y)\n            || isNotAroundZero(this.scaleX - 1)\n            || isNotAroundZero(this.scaleY - 1)\n            || isNotAroundZero(this.skewX)\n            || isNotAroundZero(this.skewY);\n    };\n    Transformable.prototype.updateTransform = function () {\n        var parentTransform = this.parent && this.parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n        var m = this.transform;\n        if (!(needLocalTransform || parentTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n        m = m || matrix.create();\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n        if (parentTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parentTransform, m);\n            }\n            else {\n                matrix.copy(m, parentTransform);\n            }\n        }\n        this.transform = m;\n        this._resolveGlobalScaleRatio(m);\n    };\n    Transformable.prototype._resolveGlobalScaleRatio = function (m) {\n        var globalScaleRatio = this.globalScaleRatio;\n        if (globalScaleRatio != null && globalScaleRatio !== 1) {\n            this.getGlobalScale(scaleTmp);\n            var relX = scaleTmp[0] < 0 ? -1 : 1;\n            var relY = scaleTmp[1] < 0 ? -1 : 1;\n            var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n            var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n            m[0] *= sx;\n            m[1] *= sx;\n            m[2] *= sy;\n            m[3] *= sy;\n        }\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n    Transformable.prototype.getComputedTransform = function () {\n        var transformNode = this;\n        var ancestors = [];\n        while (transformNode) {\n            ancestors.push(transformNode);\n            transformNode = transformNode.parent;\n        }\n        while (transformNode = ancestors.pop()) {\n            transformNode.updateTransform();\n        }\n        return this.transform;\n    };\n    Transformable.prototype.setLocalTransform = function (m) {\n        if (!m) {\n            return;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var rotation = Math.atan2(m[1], m[0]);\n        var shearX = Math.PI / 2 + rotation - Math.atan2(m[3], m[2]);\n        sy = Math.sqrt(sy) * Math.cos(shearX);\n        sx = Math.sqrt(sx);\n        this.skewX = shearX;\n        this.skewY = 0;\n        this.rotation = -rotation;\n        this.x = +m[4];\n        this.y = +m[5];\n        this.scaleX = sx;\n        this.scaleY = sy;\n        this.originX = 0;\n        this.originY = 0;\n    };\n    Transformable.prototype.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var ox = this.originX;\n        var oy = this.originY;\n        if (ox || oy) {\n            originTransform[4] = ox;\n            originTransform[5] = oy;\n            matrix.mul(tmpTransform, m, originTransform);\n            tmpTransform[4] -= ox;\n            tmpTransform[5] -= oy;\n            m = tmpTransform;\n        }\n        this.setLocalTransform(m);\n    };\n    Transformable.prototype.getGlobalScale = function (out) {\n        var m = this.transform;\n        out = out || [];\n        if (!m) {\n            out[0] = 1;\n            out[1] = 1;\n            return out;\n        }\n        out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            out[0] = -out[0];\n        }\n        if (m[3] < 0) {\n            out[1] = -out[1];\n        }\n        return out;\n    };\n    Transformable.prototype.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n    Transformable.prototype.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n    Transformable.prototype.getLineScale = function () {\n        var m = this.transform;\n        return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n            ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n            : 1;\n    };\n    Transformable.prototype.copyTransform = function (source) {\n        copyTransform(this, source);\n    };\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        var ox = target.originX || 0;\n        var oy = target.originY || 0;\n        var sx = target.scaleX;\n        var sy = target.scaleY;\n        var ax = target.anchorX;\n        var ay = target.anchorY;\n        var rotation = target.rotation || 0;\n        var x = target.x;\n        var y = target.y;\n        var skewX = target.skewX ? Math.tan(target.skewX) : 0;\n        var skewY = target.skewY ? Math.tan(-target.skewY) : 0;\n        if (ox || oy || ax || ay) {\n            var dx = ox + ax;\n            var dy = oy + ay;\n            m[4] = -dx * sx - skewX * dy * sy;\n            m[5] = -dy * sy - skewY * dx * sx;\n        }\n        else {\n            m[4] = m[5] = 0;\n        }\n        m[0] = sx;\n        m[3] = sy;\n        m[1] = skewY * sx;\n        m[2] = skewX * sy;\n        rotation && matrix.rotate(m, m, rotation);\n        m[4] += ox + x;\n        m[5] += oy + y;\n        return m;\n    };\n    Transformable.initDefaultProps = (function () {\n        var proto = Transformable.prototype;\n        proto.scaleX =\n            proto.scaleY =\n                proto.globalScaleRatio = 1;\n        proto.x =\n            proto.y =\n                proto.originX =\n                    proto.originY =\n                        proto.skewX =\n                            proto.skewY =\n                                proto.rotation =\n                                    proto.anchorX =\n                                        proto.anchorY = 0;\n    })();\n    return Transformable;\n}());\n;\nexport var TRANSFORMABLE_PROPS = [\n    'x', 'y', 'originX', 'originY', 'anchorX', 'anchorY', 'rotation', 'scaleX', 'scaleY', 'skewX', 'skewY'\n];\nexport function copyTransform(target, source) {\n    for (var i = 0; i < TRANSFORMABLE_PROPS.length; i++) {\n        var propName = TRANSFORMABLE_PROPS[i];\n        target[propName] = source[propName];\n    }\n}\nexport default Transformable;\n","var wmUniqueIndex = Math.round(Math.random() * 9);\nvar supportDefineProperty = typeof Object.defineProperty === 'function';\nvar WeakMap = (function () {\n    function WeakMap() {\n        this._id = '__ec_inner_' + wmUniqueIndex++;\n    }\n    WeakMap.prototype.get = function (key) {\n        return this._guard(key)[this._id];\n    };\n    WeakMap.prototype.set = function (key, value) {\n        var target = this._guard(key);\n        if (supportDefineProperty) {\n            Object.defineProperty(target, this._id, {\n                value: value,\n                enumerable: false,\n                configurable: true\n            });\n        }\n        else {\n            target[this._id] = value;\n        }\n        return this;\n    };\n    WeakMap.prototype[\"delete\"] = function (key) {\n        if (this.has(key)) {\n            delete this._guard(key)[this._id];\n            return true;\n        }\n        return false;\n    };\n    WeakMap.prototype.has = function (key) {\n        return !!this._guard(key)[this._id];\n    };\n    WeakMap.prototype._guard = function (key) {\n        if (key !== Object(key)) {\n            throw TypeError('Value of WeakMap is not a non-null object.');\n        }\n        return key;\n    };\n    return WeakMap;\n}());\nexport default WeakMap;\n"],"names":["Entry","val","this","value","LinkedList","_len","prototype","insert","entry","insertEntry","head","tail","next","prev","remove","len","clear","LRU","maxSize","_list","_maxSize","_map","put","key","list","map","removed","_lastRemovedEntry","leastUsedEntry","get","extent","extent2","minTv","Point","maxTv","OrientedBoundingRect","rect","transform","_corners","_axes","_origin","i","fromBoundingRect","corners","axes","x","y","x2","width","y2","height","set","normalize","dot","intersect","other","mtv","overlapped","noMtv","Infinity","_intersectCheckOneSide","self","inverse","axis","_getProjMinMaxOnAxis","dist0","Math","abs","dist1","min","dim","out","origin","proj","max","length","proj_1","CMD","M","L","C","Q","A","Z","R","tmpOutX","tmpOutY","min2","max2","mathMin","mathMax","mathCos","cos","mathSin","sin","mathAbs","PI","PI2","hasTypedArray","Float32Array","tmpAngles","modPI2","radian","round","normalizeArcAngles","angles","anticlockwise","newStartAngle","delta","newEndAngle","PathProxy","notSaveData","dpr","_xi","_yi","_x0","_y0","_saveData","data","proto","increaseVersion","_version","getVersion","setScale","sx","sy","segmentIgnoreThreshold","_ux","_uy","setDPR","setContext","ctx","_ctx","getContext","beginPath","reset","_pathSegLen","_pathLen","moveTo","_drawPendingPt","addData","lineTo","dx","dy","exceedUnit","_pendingPtDist","d2","_pendingPtX","_pendingPtY","bezierCurveTo","x1","y1","x3","y3","quadraticCurveTo","arc","cx","cy","r","startAngle","endAngle","arcTo","radius","w","h","closePath","x0","y0","fill","toStatic","stroke","setData","appendPath","path","Array","appendSize","offset","appendPathData","k","cmd","a","b","c","d","e","f","g","arguments","_expandData","newData","getBoundingRect","Number","MAX_VALUE","xi","yi","isFirst","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","vec2","BoundingRect","_calculateLength","ux","uy","pathSegLen","pathTotalLen","segCount","l","sqrt","cubicLength","quadraticLength","rebuildPath","percent","displayedLength","pendingPtX","pendingPtY","drawPart","accumLength","pendingPtDist","lo","t","cubicSubdivide","quadraticSubdivide","psi","isEllipse","breakBuild","ellipse","d_1","clone","newProxy","slice","call","initDefaultProps","copy","equal","add","scale","scalar","scaleAndAdd","sub","lenSquare","distance","distanceSquare","negate","m","toArray","fromArray","input","p","p2","p0","p1","lerp","onet","mIdentity","matrix","isNotAroundZero","scaleTmp","tmpTransform","originTransform","Transformable","getLocalTransform","setPosition","arr","scaleX","scaleY","setSkew","skewX","skewY","setOrigin","originX","originY","needLocalTransform","rotation","updateTransform","parentTransform","parent","_resolveGlobalScaleRatio","globalScaleRatio","getGlobalScale","relX","relY","invTransform","getComputedTransform","transformNode","ancestors","push","pop","setLocalTransform","atan2","shearX","decomposeTransform","ox","oy","transformCoordToLocal","v2","vector","transformCoordToGlobal","getLineScale","copyTransform","source","target","ax","anchorX","ay","anchorY","tan","TRANSFORMABLE_PROPS","propName","wmUniqueIndex","random","supportDefineProperty","Object","defineProperty","WeakMap","_id","_guard","enumerable","configurable","has","TypeError"],"sourceRoot":""}