{"version":3,"file":"static/js/7863.8f49802a.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/bar/BarSeries.js","../node_modules/echarts/lib/chart/bar/BarView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseBarSeriesModel from './BaseBarSeries.js';\nimport createSeriesData from '../helper/createSeriesData.js';\nimport { inheritDefaultOption } from '../../util/component.js';\n\nvar BarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getInitialData = function () {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true,\n      createInvertedIndices: !!this.get('realtimeSort', true) || null\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  };\n  /**\n   * @override\n   */\n\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\n    // If clipped\n    // Only available on cartesian2d\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeriesModel);\n\nexport default BarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport { extend, each, map } from 'zrender/lib/core/util.js';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut, traverseElements } from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation, labelInner } from '../../label/labelStyle.js';\nimport { throttle } from '../../util/throttle.js';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport Sausage from '../../util/shape/sausage.js';\nimport ChartView from '../../view/Chart.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { warn } from '../../util/log.js';\nimport { createSectorCalculateTextPosition, setSectorTextRotation } from '../../label/sectorLabel.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView =\n/** @class */\nfunction (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n\n    this._removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      // Clear previously rendered progressive elements.\n      this._progressiveEls = null;\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Reset\n    this._progressiveEls = []; // Do not support progressive in normal mode.\n\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype.eachRendered = function (cb) {\n    traverseElements(this._progressiveEls || this.group, cb);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex) || !isValidLayout[coord.type](layout)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n\n      if (realtimeSortCfg) {\n        /**\n         * Force label animation because even if the element is\n         * ignored because it's clipped, it may not be clipped after\n         * changing order. Then, if not using forceLabelAnimation,\n         * the label animation was never started, in which case,\n         * the label will be the final value and doesn't have label\n         * animation.\n         */\n        el.forceLabelAnimation = true;\n      }\n\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex) || !isValidLayout[coord.type](layout)) {\n        group.remove(el);\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } else {\n        saveOldStyle(el);\n      }\n\n      if (realtimeSortCfg) {\n        el.forceLabelAnimation = true;\n      }\n\n      if (isChangeOrder) {\n        var textEl = el.getTextContent();\n\n        if (textEl) {\n          var labelInnerStore = labelInner(textEl);\n\n          if (labelInnerStore.prevValue != null) {\n            /**\n             * Set preValue to be value so that no new label\n             * should be started, otherwise, it will take a full\n             * `animationDurationUpdate` time to finish the\n             * animation, which is not expected.\n             */\n            labelInnerStore.prevValue = labelInnerStore.value;\n          }\n        }\n      } // Not change anything if only order changed.\n      // Especially not change label.\n      else {\n          updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n        }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, this._progressiveEls, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\n    var group = this.group;\n\n    if (clipPath) {\n      group.setClipPath(clipPath);\n    } else {\n      group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this; // If no data in the first frame, wait for data to initSort\n\n\n    if (!data.count()) {\n      return;\n    }\n\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n        var shape = el && el.shape;\n        return shape && // The result should be consistent with the initial sort by data value.\n        // Do not support the case that both positive and negative exist.\n        Math.abs(baseAxis.isHorizontal() ? shape.height : shape.width) // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n        || 0;\n      };\n\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n  /*\n   * Consider the case when A and B changed order, whose representing\n   * bars are both out of sight, we don't wish to trigger reorder action\n   * as long as the order in the view doesn't change.\n   */\n\n\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult\n    });\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Beause if data changed and the bar show again, its transition animaiton\n    // will begin at this place.\n\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: layout,\n      z2: 1\n    });\n    sector.name = 'item';\n    var positionMap = createPolarPositionMapping(isRadial);\n    sector.calculateTextPosition = createSectorCalculateTextPosition(positionMap, {\n      isRoundCap: ShapeClass === Sausage\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\n\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\n\nfunction checkPropertiesNotValid(obj, props) {\n  for (var i = 0; i < props.length; i++) {\n    if (!isFinite(obj[props[i]])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar rectPropties = ['x', 'y', 'width', 'height'];\nvar polarPropties = ['cx', 'cy', 'r', 'startAngle', 'endAngle'];\nvar isValidLayout = {\n  cartesian2d: function (layout) {\n    return !checkPropertiesNotValid(layout, rectPropties);\n  },\n  polar: function (layout) {\n    return !checkPropertiesNotValid(layout, polarPropties);\n  }\n};\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle,\n      clockwise: layout.clockwise\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction createPolarPositionMapping(isRadial) {\n  return function (isRadial) {\n    var arcOrAngle = isRadial ? 'Arc' : 'Angle';\n    return function (position) {\n      switch (position) {\n        case 'start':\n        case 'insideStart':\n        case 'end':\n        case 'insideEnd':\n          return position + arcOrAngle;\n\n        default:\n          return position;\n      }\n    };\n  }(isRadial);\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(['itemStyle', 'borderRadius']) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isPolar ? isHorizontalOrRadial ? layout.r >= layout.r0 ? 'endArc' : 'startArc' : layout.endAngle >= layout.startAngle ? 'endAngle' : 'startAngle' : isHorizontalOrRadial ? layout.height >= 0 ? 'bottom' : 'top' : layout.width >= 0 ? 'right' : 'left';\n  var labelStatesModels = getLabelStatesModels(itemModel);\n  setLabelStyle(el, labelStatesModels, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    inheritColor: style.fill,\n    defaultOpacity: style.opacity,\n    defaultOutsidePosition: labelPositionOutside\n  });\n  var label = el.getTextContent();\n\n  if (isPolar && label) {\n    var position = itemModel.get(['label', 'position']);\n    el.textConfig.inside = position === 'middle' ? true : null;\n    setSectorTextRotation(el, position === 'outside' ? labelPositionOutside : position, createPolarPositionMapping(isHorizontalOrRadial), itemModel.get(['label', 'rotate']));\n  }\n\n  setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n    return getDefaultInterpolatedLabel(data, value);\n  });\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  // Has no border.\n  var borderColor = itemModel.get(['itemStyle', 'borderColor']);\n\n  if (!borderColor || borderColor === 'none') {\n    return 0;\n  }\n\n  var lineWidth = itemModel.get(['itemStyle', 'borderWidth']) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape =\n/** @class */\nfunction () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath =\n/** @class */\nfunction (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var baseDimIdx = this.baseDimIdx;\n    var valueDimIdx = 1 - this.baseDimIdx;\n    var startPoint = [];\n    var size = [];\n    var barWidth = this.barWidth;\n\n    for (var i = 0; i < points.length; i += 3) {\n      size[baseDimIdx] = barWidth;\n      size[valueDimIdx] = points[i + 2];\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      startPoint[valueDimIdx] = points[i + valueDimIdx];\n      ctx.rect(startPoint[0], startPoint[1], size[0], size[1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, progressiveEls, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('size');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var bgPoints = data.getLayout('largeBackgroundPoints');\n\n  if (bgPoints) {\n    var bgEl = new LargePath({\n      shape: {\n        points: bgPoints\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.baseDimIdx = baseDimIdx;\n    bgEl.largeDataIndices = largeDataIndices;\n    bgEl.barWidth = barWidth;\n    bgEl.useStyle(backgroundModel.getItemStyle());\n    group.add(bgEl);\n    progressiveEls && progressiveEls.push(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    ignoreCoarsePointer: true,\n    z2: 1\n  });\n  el.baseDimIdx = baseDimIdx;\n  el.largeDataIndices = largeDataIndices;\n  el.barWidth = barWidth;\n  group.add(el);\n  el.useStyle(data.getVisual('style')); // Enable tooltip and user mouse/touch event handlers.\n\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n\n  progressiveEls && progressiveEls.push(el);\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.largeDataIndices;\n  var startPoint = [];\n  var size = [];\n  var barWidth = largePath.barWidth;\n\n  for (var i = 0, len = points.length / 3; i < len; i++) {\n    var ii = i * 3;\n    size[baseDimIdx] = barWidth;\n    size[valueDimIdx] = points[ii + 2];\n    startPoint[baseDimIdx] = points[ii + baseDimIdx];\n    startPoint[valueDimIdx] = points[ii + valueDimIdx];\n\n    if (size[valueDimIdx] < 0) {\n      startPoint[valueDimIdx] += size[valueDimIdx];\n      size[valueDimIdx] = -size[valueDimIdx];\n    }\n\n    if (x >= startPoint[0] && x <= startPoint[0] + size[0] && y >= startPoint[1] && y <= startPoint[1] + size[1]) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nexport default BarView;"],"names":["BarSeriesModel","_super","_this","apply","this","arguments","type","__extends","prototype","getInitialData","createSeriesData","useEncodeDefaulter","createInvertedIndices","get","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","brushSelector","dataIndex","data","selectors","rect","getItemLayout","dependencies","defaultOption","inheritDefaultOption","BaseBarSeriesModel","clip","roundCap","showBackground","backgroundStyle","color","borderColor","borderWidth","borderType","borderRadius","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","opacity","select","itemStyle","realtimeSort","mathMax","Math","max","mathMin","min","BarView","call","_isFirstFrame","render","seriesModel","ecModel","api","payload","_model","_removeOnRenderedListener","_updateDrawMode","coordinateSystemType","_progressiveEls","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","_updateLargeClip","incrementalRender","params","_incrementalRenderLarge","eachRendered","cb","traverseElements","group","isLargeDraw","pipelineContext","large","isHorizontalOrRadial","getData","oldData","_data","coord","coordinateSystem","baseAxis","getBaseAxis","isHorizontal","dim","animationModel","isAnimationEnabled","realtimeSortCfg","coordSys","realtimeSortOption","process","otherAxis","getOtherAxis","shouldRealtimeSort","_enableRealtimeSort","needsClip","coordSysClipArea","getArea","isCoordinateSystemType","onBand","expandWidth","getLayout","x","width","y","height","getClipArea","removeClipPath","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","isInitSort","isChangeOrder","createBackground","bgLayout","bgEl","layout","Sector","Rect","shape","createBackgroundShape","silent","z2","createBackgroundEl","useStyle","getItemStyle","setShape","diff","add","itemModel","getItemModel","hasValue","isValidLayout","isClipped","el","elementCreator","model","forceLabelAnimation","updateStyle","attr","updateRealtimeAnimation","initProps","setItemGraphicEl","ignore","update","newIndex","oldIndex","length","updateProps","getItemGraphicEl","remove","saveOldStyle","textEl","getTextContent","labelInnerStore","labelInner","prevValue","value","removeElementWithFadeOut","execute","bgGroup","_backgroundGroup","Group","removeAll","i","createLarge","_removeBackground","clipPath","createClipPath","setClipPath","count","_dispatchInitSort","orderMapping_1","idx","abs","_onRendered","_updateSortWithinSameData","getZr","on","_dataSort","orderMapping","info","each","mapDimension","ordinalNumber","dataIdx","mappedValue","NaN","push","sort","a","b","ordinalNumbers","map","item","_isOrderChangedWithinSameData","scale","ordinalDataDim","lastValue","Number","MAX_VALUE","tickNum","len","getOrdinalMeta","categories","rawIdx","rawIndexOf","getRawOrdinalNumber","MIN_VALUE","indexOfRawIndex","_isOrderDifferentInView","orderInfo","extent","getExtent","tickMax","sortInfo","dispatchAction","componentType","axisId","index","sortResult","dispose","off","eachItemGraphicEl","getECData","ChartView","cartesian2d","coordSysBoundingRect","signWidth","signHeight","coordSysX2","coordSysY2","x2","y2","xClipped","yClipped","polar","signR","r0","r","tmp","clipped","axisModel","isUpdate","extend","__dataIndex","name","isRadial","ShapeClass","Sausage","sector","positionMap","createPolarPositionMapping","calculateTextPosition","createSectorCalculateTextPosition","isRoundCap","animateProperty","animateTarget","startAngle","seriesAnimationModel","seriesTarget","axisTarget","axisAnimationModel","checkPropertiesNotValid","obj","props","isFinite","rectPropties","polarPropties","fixedLineWidth","rawLayout","lineWidth","isNaN","getLineWidth","signX","signY","cx","cy","endAngle","clockwise","arcOrAngle","position","isPolar","style","getItemVisual","cursorStyle","getShallow","labelPositionOutside","labelStatesModels","getLabelStatesModels","setLabelStyle","labelFetcher","labelDataIndex","defaultText","getDefaultLabel","inheritColor","fill","defaultOpacity","defaultOutsidePosition","label","textConfig","inside","setSectorTextRotation","setLabelValueAnimation","getRawValue","getDefaultInterpolatedLabel","emphasisModel","toggleHoverEmphasis","setStatesStylesFromModel","isZeroOnPolar","stroke","states","state","LagePathShape","LargePath","opts","getDefaultShape","buildPath","ctx","points","baseDimIdx","valueDimIdx","startPoint","size","barWidth","Path","progressiveEls","incremental","largeDataIndices","bgPoints","ignoreCoarsePointer","getVisual","seriesIndex","largePathUpdateDataIndex","throttle","event","largePath","ii","largePathFindDataIndex","offsetX","offsetY","rectShape","coordLayout","sectorShape","PI"],"sourceRoot":""}