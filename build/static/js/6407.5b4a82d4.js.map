{"version":3,"file":"static/js/6407.5b4a82d4.js","mappings":"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","sources":["../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/svg/Painter.js"],"sourcesContent":["var Param = (function () {\n    function Param(target, e) {\n        this.target = target;\n        this.topTarget = e && e.topTarget;\n    }\n    return Param;\n}());\nvar Draggable = (function () {\n    function Draggable(handler) {\n        this.handler = handler;\n        handler.on('mousedown', this._dragStart, this);\n        handler.on('mousemove', this._drag, this);\n        handler.on('mouseup', this._dragEnd, this);\n    }\n    Draggable.prototype._dragStart = function (e) {\n        var draggingTarget = e.target;\n        while (draggingTarget && !draggingTarget.draggable) {\n            draggingTarget = draggingTarget.parent || draggingTarget.__hostTarget;\n        }\n        if (draggingTarget) {\n            this._draggingTarget = draggingTarget;\n            draggingTarget.dragging = true;\n            this._x = e.offsetX;\n            this._y = e.offsetY;\n            this.handler.dispatchToElement(new Param(draggingTarget, e), 'dragstart', e.event);\n        }\n    };\n    Draggable.prototype._drag = function (e) {\n        var draggingTarget = this._draggingTarget;\n        if (draggingTarget) {\n            var x = e.offsetX;\n            var y = e.offsetY;\n            var dx = x - this._x;\n            var dy = y - this._y;\n            this._x = x;\n            this._y = y;\n            draggingTarget.drift(dx, dy, e);\n            this.handler.dispatchToElement(new Param(draggingTarget, e), 'drag', e.event);\n            var dropTarget = this.handler.findHover(x, y, draggingTarget).target;\n            var lastDropTarget = this._dropTarget;\n            this._dropTarget = dropTarget;\n            if (draggingTarget !== dropTarget) {\n                if (lastDropTarget && dropTarget !== lastDropTarget) {\n                    this.handler.dispatchToElement(new Param(lastDropTarget, e), 'dragleave', e.event);\n                }\n                if (dropTarget && dropTarget !== lastDropTarget) {\n                    this.handler.dispatchToElement(new Param(dropTarget, e), 'dragenter', e.event);\n                }\n            }\n        }\n    };\n    Draggable.prototype._dragEnd = function (e) {\n        var draggingTarget = this._draggingTarget;\n        if (draggingTarget) {\n            draggingTarget.dragging = false;\n        }\n        this.handler.dispatchToElement(new Param(draggingTarget, e), 'dragend', e.event);\n        if (this._dropTarget) {\n            this.handler.dispatchToElement(new Param(this._dropTarget, e), 'drop', e.event);\n        }\n        this._draggingTarget = null;\n        this._dropTarget = null;\n    };\n    return Draggable;\n}());\nexport default Draggable;\n","import { brush, setClipPath } from './graphic.js';\nimport { createElement, createVNode, vNodeToString, getCssString, createBrushScope, createSVGVNode } from './core.js';\nimport { normalizeColor, encodeBase64 } from './helper.js';\nimport { extend, keys, logError, map, retrieve2 } from '../core/util.js';\nimport patch, { updateAttrs } from './patch.js';\nimport { getSize } from '../canvas/helper.js';\nvar svgId = 0;\nvar SVGPainter = (function () {\n    function SVGPainter(root, storage, opts) {\n        this.type = 'svg';\n        this.refreshHover = createMethodNotSupport('refreshHover');\n        this.configLayer = createMethodNotSupport('configLayer');\n        this.storage = storage;\n        this._opts = opts = extend({}, opts);\n        this.root = root;\n        this._id = 'zr' + svgId++;\n        this._oldVNode = createSVGVNode(opts.width, opts.height);\n        if (root && !opts.ssr) {\n            var viewport = this._viewport = document.createElement('div');\n            viewport.style.cssText = 'position:relative;overflow:hidden';\n            var svgDom = this._svgDom = this._oldVNode.elm = createElement('svg');\n            updateAttrs(null, this._oldVNode);\n            viewport.appendChild(svgDom);\n            root.appendChild(viewport);\n        }\n        this.resize(opts.width, opts.height);\n    }\n    SVGPainter.prototype.getType = function () {\n        return this.type;\n    };\n    SVGPainter.prototype.getViewportRoot = function () {\n        return this._viewport;\n    };\n    SVGPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    SVGPainter.prototype.getSvgDom = function () {\n        return this._svgDom;\n    };\n    SVGPainter.prototype.refresh = function () {\n        if (this.root) {\n            var vnode = this.renderToVNode({\n                willUpdate: true\n            });\n            vnode.attrs.style = 'position:absolute;left:0;top:0;user-select:none';\n            patch(this._oldVNode, vnode);\n            this._oldVNode = vnode;\n        }\n    };\n    SVGPainter.prototype.renderOneToVNode = function (el) {\n        return brush(el, createBrushScope(this._id));\n    };\n    SVGPainter.prototype.renderToVNode = function (opts) {\n        opts = opts || {};\n        var list = this.storage.getDisplayList(true);\n        var bgColor = this._backgroundColor;\n        var width = this._width;\n        var height = this._height;\n        var scope = createBrushScope(this._id);\n        scope.animation = opts.animation;\n        scope.willUpdate = opts.willUpdate;\n        scope.compress = opts.compress;\n        var children = [];\n        if (bgColor && bgColor !== 'none') {\n            var _a = normalizeColor(bgColor), color = _a.color, opacity = _a.opacity;\n            this._bgVNode = createVNode('rect', 'bg', {\n                width: width,\n                height: height,\n                x: '0',\n                y: '0',\n                id: '0',\n                fill: color,\n                'fill-opacity': opacity\n            });\n            children.push(this._bgVNode);\n        }\n        else {\n            this._bgVNode = null;\n        }\n        var mainVNode = !opts.compress\n            ? (this._mainVNode = createVNode('g', 'main', {}, [])) : null;\n        this._paintList(list, scope, mainVNode ? mainVNode.children : children);\n        mainVNode && children.push(mainVNode);\n        var defs = map(keys(scope.defs), function (id) { return scope.defs[id]; });\n        if (defs.length) {\n            children.push(createVNode('defs', 'defs', {}, defs));\n        }\n        if (opts.animation) {\n            var animationCssStr = getCssString(scope.cssNodes, scope.cssAnims, { newline: true });\n            if (animationCssStr) {\n                var styleNode = createVNode('style', 'stl', {}, [], animationCssStr);\n                children.push(styleNode);\n            }\n        }\n        return createSVGVNode(width, height, children, opts.useViewBox);\n    };\n    SVGPainter.prototype.renderToString = function (opts) {\n        opts = opts || {};\n        return vNodeToString(this.renderToVNode({\n            animation: retrieve2(opts.cssAnimation, true),\n            willUpdate: false,\n            compress: true,\n            useViewBox: retrieve2(opts.useViewBox, true)\n        }), { newline: true });\n    };\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        this._backgroundColor = backgroundColor;\n        var bgVNode = this._bgVNode;\n        if (bgVNode && bgVNode.elm) {\n            var _a = normalizeColor(backgroundColor), color = _a.color, opacity = _a.opacity;\n            bgVNode.elm.setAttribute('fill', color);\n            if (opacity < 1) {\n                bgVNode.elm.setAttribute('fill-opacity', opacity);\n            }\n        }\n    };\n    SVGPainter.prototype.getSvgRoot = function () {\n        return this._mainVNode && this._mainVNode.elm;\n    };\n    SVGPainter.prototype._paintList = function (list, scope, out) {\n        var listLen = list.length;\n        var clipPathsGroupsStack = [];\n        var clipPathsGroupsStackDepth = 0;\n        var currentClipPathGroup;\n        var prevClipPaths;\n        var clipGroupNodeIdx = 0;\n        for (var i = 0; i < listLen; i++) {\n            var displayable = list[i];\n            if (!displayable.invisible) {\n                var clipPaths = displayable.__clipPaths;\n                var len = clipPaths && clipPaths.length || 0;\n                var prevLen = prevClipPaths && prevClipPaths.length || 0;\n                var lca = void 0;\n                for (lca = Math.max(len - 1, prevLen - 1); lca >= 0; lca--) {\n                    if (clipPaths && prevClipPaths\n                        && clipPaths[lca] === prevClipPaths[lca]) {\n                        break;\n                    }\n                }\n                for (var i_1 = prevLen - 1; i_1 > lca; i_1--) {\n                    clipPathsGroupsStackDepth--;\n                    currentClipPathGroup = clipPathsGroupsStack[clipPathsGroupsStackDepth - 1];\n                }\n                for (var i_2 = lca + 1; i_2 < len; i_2++) {\n                    var groupAttrs = {};\n                    setClipPath(clipPaths[i_2], groupAttrs, scope);\n                    var g = createVNode('g', 'clip-g-' + clipGroupNodeIdx++, groupAttrs, []);\n                    (currentClipPathGroup ? currentClipPathGroup.children : out).push(g);\n                    clipPathsGroupsStack[clipPathsGroupsStackDepth++] = g;\n                    currentClipPathGroup = g;\n                }\n                prevClipPaths = clipPaths;\n                var ret = brush(displayable, scope);\n                if (ret) {\n                    (currentClipPathGroup ? currentClipPathGroup.children : out).push(ret);\n                }\n            }\n        }\n    };\n    SVGPainter.prototype.resize = function (width, height) {\n        var opts = this._opts;\n        var root = this.root;\n        var viewport = this._viewport;\n        width != null && (opts.width = width);\n        height != null && (opts.height = height);\n        if (root && viewport) {\n            viewport.style.display = 'none';\n            width = getSize(root, 0, opts);\n            height = getSize(root, 1, opts);\n            viewport.style.display = '';\n        }\n        if (this._width !== width || this._height !== height) {\n            this._width = width;\n            this._height = height;\n            if (viewport) {\n                var viewportStyle = viewport.style;\n                viewportStyle.width = width + 'px';\n                viewportStyle.height = height + 'px';\n            }\n            var svgDom = this._svgDom;\n            if (svgDom) {\n                svgDom.setAttribute('width', width);\n                svgDom.setAttribute('height', height);\n            }\n        }\n    };\n    SVGPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    SVGPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    SVGPainter.prototype.dispose = function () {\n        if (this.root) {\n            this.root.innerHTML = '';\n        }\n        this._svgDom =\n            this._viewport =\n                this.storage =\n                    this._oldVNode =\n                        this._bgVNode =\n                            this._mainVNode = null;\n    };\n    SVGPainter.prototype.clear = function () {\n        if (this._svgDom) {\n            this._svgDom.innerHTML = null;\n        }\n        this._oldVNode = null;\n    };\n    SVGPainter.prototype.toDataURL = function (base64) {\n        var str = encodeURIComponent(this.renderToString());\n        var prefix = 'data:image/svg+xml;';\n        if (base64) {\n            str = encodeBase64(str);\n            return str && prefix + 'base64,' + str;\n        }\n        return prefix + 'charset=UTF-8,' + str;\n    };\n    return SVGPainter;\n}());\nfunction createMethodNotSupport(method) {\n    return function () {\n        if (process.env.NODE_ENV !== 'production') {\n            logError('In SVG mode painter not support method \"' + method + '\"');\n        }\n    };\n}\nexport default SVGPainter;\n"],"names":["Param","target","e","this","topTarget","Draggable","handler","on","_dragStart","_drag","_dragEnd","prototype","draggingTarget","draggable","parent","__hostTarget","_draggingTarget","dragging","_x","offsetX","_y","offsetY","dispatchToElement","event","x","y","dx","dy","drift","dropTarget","findHover","lastDropTarget","_dropTarget","svgId","SVGPainter","root","storage","opts","type","refreshHover","process","configLayer","_opts","extend","_id","_oldVNode","createSVGVNode","width","height","ssr","viewport","_viewport","document","createElement","style","cssText","svgDom","_svgDom","elm","updateAttrs","appendChild","resize","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","getSvgDom","refresh","vnode","renderToVNode","willUpdate","attrs","patch","renderOneToVNode","el","brush","createBrushScope","list","getDisplayList","bgColor","_backgroundColor","_width","_height","scope","animation","compress","children","_a","normalizeColor","color","opacity","_bgVNode","createVNode","id","fill","push","mainVNode","_mainVNode","_paintList","defs","map","keys","length","animationCssStr","getCssString","cssNodes","cssAnims","newline","styleNode","useViewBox","renderToString","vNodeToString","retrieve2","cssAnimation","setBackgroundColor","backgroundColor","bgVNode","setAttribute","getSvgRoot","out","currentClipPathGroup","prevClipPaths","listLen","clipPathsGroupsStack","clipPathsGroupsStackDepth","clipGroupNodeIdx","i","displayable","invisible","clipPaths","__clipPaths","len","prevLen","lca","Math","max","i_1","i_2","groupAttrs","setClipPath","g","ret","display","getSize","viewportStyle","getWidth","getHeight","dispose","innerHTML","clear","toDataURL","base64","str","encodeURIComponent","prefix","encodeBase64"],"sourceRoot":""}