{"version":3,"file":"static/js/8240.2364ab28.js","mappings":"wKAiDIA,EAEJ,WACE,SAASA,IACPC,KAAKC,UAAY,GACjBD,KAAKE,SAAW,EAClB,CAUA,OARAH,EAAiBI,UAAUC,IAAM,SAAUC,GAEpCL,KAAKE,SAASG,KACjBL,KAAKC,UAAUK,KAAKD,GACpBL,KAAKE,SAASG,IAAe,EAEjC,EAEON,CACT,CAfA,GAiBIQ,EAEJ,SAAUC,GAGR,SAASD,IACP,IAAIE,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMV,KAAMW,YAAcX,KAuBhE,OArBAS,EAAMG,KAAOL,EAAcK,KAC3BH,EAAMI,eAAgB,EACtBJ,EAAMK,WAAY,EAkBlBL,EAAMM,eAAiB,CAAC,UAAW,WAC5BN,CACT,CAuYA,OAlaAO,EAAAA,EAAAA,IAAUT,EAAeC,GA6BzBD,EAAcJ,UAAUc,KAAO,SAAUC,EAAQC,EAAaC,GAC5D,IAAIC,EAAiBC,EAAkBJ,GAuBvClB,KAAKuB,cAAgBF,EACrBrB,KAAKwB,qBAAqBN,EAAQE,GAElCpB,KAAKyB,QAAQJ,EACf,EAEAd,EAAcJ,UAAUuB,YAAc,SAAUC,GAC9C,IAAIN,EAAiBC,EAAkBK,IAEvCC,EAAAA,EAAAA,IAAM5B,KAAKkB,OAAQS,GAAW,IAC9BC,EAAAA,EAAAA,IAAM5B,KAAKuB,cAAeF,GAAgB,GAE1CrB,KAAKyB,QAAQJ,EACf,EAEAd,EAAcJ,UAAUsB,QAAU,SAAUJ,GAC1C,IAAIQ,EAAa7B,KAAKkB,OAEtBlB,KAAK8B,oBAAoBT,GAEzBrB,KAAK+B,gBAAgBV,GAErB,IAAIE,EAAgBvB,KAAKuB,eACzBS,EAAAA,EAAAA,IAAK,CAAC,CAAC,QAAS,cAAe,CAAC,MAAO,cAAc,SAAUC,EAAOC,GAIjC,UAA/BlC,KAAKe,eAAemB,KACtBL,EAAWI,EAAM,IAAMV,EAAcU,EAAM,IAAM,KAGrD,GAAGjC,MAEHA,KAAKmC,cACP,EAEA5B,EAAcJ,UAAUgC,aAAe,WACrC,IAAIC,EAAepC,KAAKqC,IAAI,UAAU,GAClCC,EAAqBtC,KAAKuC,oBAAqBC,EAAAA,EAAAA,MAE5BxC,KAAKyC,yBAAyBH,GAGnDtC,KAAK0C,QAAUN,GAAgBpC,KAAK2C,+BAEpC3C,KAAK0C,QAAUN,GAAgB,aAE/BpC,KAAK4C,4BAA4BN,EAAoBtC,KAAK0C,UAG5D1C,KAAKc,WAAY,EACjBwB,EAAmBN,MAAK,SAAUa,GAC5BA,EAAS5C,UAAU6C,SACrB9C,KAAKc,WAAY,EAErB,GAAGd,KACL,EAEAO,EAAcJ,UAAUsC,yBAA2B,SAAUH,GAC3D,IAAIS,GAAmB,EAiBvB,OAhBAf,EAAAA,EAAAA,IAAKgB,EAAAA,GAA2B,SAAUC,GACxC,IAAIC,EAAWlD,KAAKmD,wBAAuBC,EAAAA,EAAAA,IAAgBH,GAAUI,EAAAA,IAIrE,GAAKH,EAASI,UAAd,CAIAP,GAAmB,EACnB,IAAIF,EAAW,IAAI9C,GACnBiC,EAAAA,EAAAA,IAAKkB,EAASK,QAAQ,SAAUC,GAC9BX,EAASzC,IAAIoD,EAAUC,eACzB,IACAnB,EAAmBoB,IAAIT,EAASJ,EAPhC,CAQF,GAAG7C,MACI+C,CACT,EAEAxC,EAAcJ,UAAUyC,4BAA8B,SAAUN,EAAoBqB,GAClF,IAAIvC,EAAUpB,KAAKoB,QACfwC,GAAW,EAEf,GAAIA,EAAU,CACZ,IAAIX,EAAqB,aAAXU,EAAwB,IAAM,IAI5CE,EAHiBzC,EAAQ0C,eAAe,CACtCC,SAAUd,EAAU,SAEMA,EAC9B,CAaA,SAASY,EAAgBG,EAAYf,GAEnC,IAAIO,EAAYQ,EAAW,GAE3B,GAAKR,EAAL,CAIA,IAAIX,EAAW,IAAI9C,EAKnB,GAJA8C,EAASzC,IAAIoD,EAAUC,gBACvBnB,EAAmBoB,IAAIT,EAASJ,GAChCe,GAAW,EAEK,MAAZX,GAA+B,MAAZA,EAAiB,CACtC,IAAIgB,EAAcT,EAAUL,uBAAuB,OAAQe,EAAAA,IAAkBX,OAAO,GACpFU,IAAejC,EAAAA,EAAAA,IAAKgC,GAAY,SAAUG,GACpCX,EAAUC,iBAAmBU,EAAQV,gBAAkBQ,IAAgBE,EAAQhB,uBAAuB,OAAQe,EAAAA,IAAkBX,OAAO,IACzIV,EAASzC,IAAI+D,EAAQV,eAEzB,GACF,CAdA,CAeF,CA/BIG,GAOFC,EANiBzC,EAAQ0C,eAAe,CACtCC,SAAU,aACVK,OAAQ,SAAUZ,GAChB,OAAOA,EAAUnB,IAAI,UAAU,KAAUsB,CAC3C,IAE0B,UA0B1BC,IAEF5B,EAAAA,EAAAA,IAAKgB,EAAAA,GAA2B,SAAUC,GACxC,GAAKW,EAAL,CAIA,IAAII,EAAa5C,EAAQ0C,eAAe,CACtCC,UAAUX,EAAAA,EAAAA,IAAgBH,GAC1BmB,OAAQ,SAAUZ,GAChB,MAAuC,aAAhCA,EAAUnB,IAAI,QAAQ,EAC/B,IAGF,GAAI2B,EAAW,GAAI,CACjB,IAAInB,EAAW,IAAI9C,EACnB8C,EAASzC,IAAI4D,EAAW,GAAGP,gBAC3BnB,EAAmBoB,IAAIT,EAASJ,GAChCe,GAAW,CACb,CAdA,CAeF,GAAG5D,KAEP,EAEAO,EAAcJ,UAAUwC,4BAA8B,WACpD,IAAI0B,EAKJ,OAHArE,KAAKsE,gBAAe,SAAUrB,IAC3BoB,IAAQA,EAAMpB,EACjB,GAAGjD,MACY,MAARqE,EAAc,WAAa,YACpC,EAEA9D,EAAcJ,UAAU2B,oBAAsB,SAAUT,GAMtD,GAJIA,EAAekD,eAAe,cAChCvE,KAAKa,eAAgB,GAGnBb,KAAKa,cAAe,CACtB,IAAI2D,EAAexE,KAAKoB,QAAQF,OAChClB,KAAKkB,OAAOuD,SAAWD,EAAaE,WAAaF,EAAaG,wBAA0B,EAAI,IAAM,EACpG,CACF,EAEApE,EAAcJ,UAAU4B,gBAAkB,SAAUV,GAClD,IAAIuD,EAAgB5E,KAAKe,eACrB8D,EAAoB7E,KAAKqC,IAAI,cACjCL,EAAAA,EAAAA,IAAK,CAAC,CAAC,QAAS,cAAe,CAAC,MAAO,cAAc,SAAUC,EAAOC,GACpE,IAAI4C,EAA+C,MAA5BzD,EAAeY,EAAM,IACxC8C,EAA6C,MAA5B1D,EAAeY,EAAM,IAEtC6C,IAAqBC,EACvBH,EAAc1C,GAAS,WACb4C,GAAoBC,EAC9BH,EAAc1C,GAAS,QACd2C,EACTD,EAAc1C,GAAS2C,EAAkB3C,GAChC4C,IAETF,EAAc1C,GAAS,UAG3B,GACF,EAEA3B,EAAcJ,UAAU6E,SAAW,WACjC,OAAOhF,KAAKc,SACd,EAEAP,EAAcJ,UAAU8E,wBAA0B,WAChD,IAAIC,EAMJ,OALAlF,KAAKsE,gBAAe,SAAUrB,EAASkC,GACf,MAAlBD,IACFA,EAAiBlF,KAAKoB,QAAQgE,cAAahC,EAAAA,EAAAA,IAAgBH,GAAUkC,GAEzE,GAAGnF,MACIkF,CACT,EAMA3E,EAAcJ,UAAUmE,eAAiB,SAAUe,EAAUC,GAC3DtF,KAAKuC,mBAAmBP,MAAK,SAAUa,EAAUI,IAC/CjB,EAAAA,EAAAA,IAAKa,EAAS5C,WAAW,SAAUkF,GACjCE,EAASE,KAAKD,EAASrC,EAASkC,EAClC,GACF,GACF,EAMA5E,EAAcJ,UAAUqF,aAAe,SAAUvC,EAASkC,GACxD,IAAI3B,EAAYxD,KAAKyF,aAAaxC,EAASkC,GAE3C,GAAI3B,EACF,OAAOA,EAAUkC,aAErB,EAMAnF,EAAcJ,UAAUsF,aAAe,SAAUxC,EAASkC,GAKxD,IAAItC,EAAW7C,KAAKuC,mBAAmBF,IAAIY,GAE3C,GAAIJ,GAAYA,EAAS3C,SAASiF,GAChC,OAAOnF,KAAKoB,QAAQgE,cAAahC,EAAAA,EAAAA,IAAgBH,GAAUkC,EAE/D,EAMA5E,EAAcJ,UAAUwF,YAAc,SAAUC,GAC9C,IAAI/D,EAAa7B,KAAKkB,OAClBK,EAAgBvB,KAAKuB,eACzBS,EAAAA,EAAAA,IAAK,CAAC,CAAC,QAAS,cAAe,CAAC,MAAO,cAAc,SAAUC,GAUxC,MAAjB2D,EAAI3D,EAAM,KAAgC,MAAjB2D,EAAI3D,EAAM,MACrCJ,EAAWI,EAAM,IAAMV,EAAcU,EAAM,IAAM2D,EAAI3D,EAAM,IAC3DJ,EAAWI,EAAM,IAAMV,EAAcU,EAAM,IAAM2D,EAAI3D,EAAM,IAE/D,GAAGjC,MAEHA,KAAK+B,gBAAgB6D,EACvB,EAEArF,EAAcJ,UAAU0F,mBAAqB,SAAUD,GACrD,IAAI1E,EAASlB,KAAKkB,QAClBc,EAAAA,EAAAA,IAAK,CAAC,QAAS,aAAc,MAAO,aAAa,SAAU8D,GACzD5E,EAAO4E,GAAQF,EAAIE,EACrB,GACF,EAEAvF,EAAcJ,UAAU4F,gBAAkB,WACxC,IAAIC,EAAYhG,KAAKiG,8BAErB,GAAID,EACF,OAAOA,EAAUE,sBAErB,EAQA3F,EAAcJ,UAAUgG,cAAgB,SAAUlD,EAASkC,GACzD,GAAe,MAAXlC,GAAgC,MAAbkC,EAOrB,OAAOnF,KAAKwF,aAAavC,EAASkC,GAAWiB,qBAN7C,IAAIJ,EAAYhG,KAAKiG,8BAErB,OAAID,EACKA,EAAUI,0BADnB,CAMJ,EAOA7F,EAAcJ,UAAU8F,4BAA8B,SAAUzC,GAC9D,GAAIA,EACF,OAAOA,EAAUkC,cAQnB,IAJA,IAAIW,EAEAC,EAActG,KAAKuC,mBAAmBgE,OAEjCC,EAAI,EAAGA,EAAIF,EAAYxD,OAAQ0D,IAKtC,IAJA,IAAIvD,EAAUqD,EAAYE,GAEtB3D,EAAW7C,KAAKuC,mBAAmBF,IAAIY,GAElCwD,EAAI,EAAGA,EAAI5D,EAAS5C,UAAU6C,OAAQ2D,IAAK,CAClD,IAAIC,EAAQ1G,KAAKwF,aAAavC,EAASJ,EAAS5C,UAAUwG,IAE1D,GAAIC,EAAMC,SAAS3G,MACjB,OAAO0G,EAGJL,IACHA,EAAaK,EAEjB,CAMF,OAAOL,CACT,EAEA9F,EAAcJ,UAAUyG,iBAAmB,WACzC,OAAO5G,KAAKe,eAAe8F,OAC7B,EAEAtG,EAAcJ,UAAU2G,UAAY,WAMlC,OAAO9G,KAAK0C,OACd,EAEAnC,EAAcK,KAAO,WACrBL,EAAcwG,aAAe,CAAC,QAAS,QAAS,aAAc,YAAa,aAAc,SAAU,WACnGxG,EAAcyG,cAAgB,CAE5BC,EAAG,EACHC,WAAY,SACZC,MAAO,EACPC,IAAK,KAEA7G,CACT,CApaA,CAoaE8G,EAAAA,GAQF,SAAS/F,EAAkBJ,GACzB,IAAIoG,EAAM,CAAC,EAIX,OAHAtF,EAAAA,EAAAA,IAAK,CAAC,QAAS,MAAO,aAAc,WAAY,aAAa,SAAU8D,GACrE5E,EAAOqD,eAAeuB,KAAUwB,EAAIxB,GAAQ5E,EAAO4E,GACrD,IACOwB,CACT,CAEA,K,sCC5cIC,EAEJ,SAAU/G,GAGR,SAAS+G,IACP,IAAI9G,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMV,KAAMW,YAAcX,KAGhE,OADAS,EAAMG,KAAO2G,EAAa3G,KACnBH,CACT,CASA,OAhBAO,EAAAA,EAAAA,IAAUuG,EAAc/G,GASxB+G,EAAapH,UAAUqH,OAAS,SAAUC,EAAerG,EAASsG,EAAKC,GACrE3H,KAAKyH,cAAgBA,EACrBzH,KAAKoB,QAAUA,EACfpB,KAAK0H,IAAMA,CACb,EAEAH,EAAa3G,KAAO,WACb2G,CACT,CAlBA,C,SAkBEK,GAEF,K","sources":["../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { each, createHashMap, merge, assert } from 'zrender/lib/core/util.js';\nimport ComponentModel from '../../model/Component.js';\nimport { getAxisMainType, DATA_ZOOM_AXIS_DIMENSIONS } from './helper.js';\nimport { MULTIPLE_REFERRING, SINGLE_REFERRING } from '../../util/model.js';\n\nvar DataZoomAxisInfo =\n/** @class */\nfunction () {\n  function DataZoomAxisInfo() {\n    this.indexList = [];\n    this.indexMap = [];\n  }\n\n  DataZoomAxisInfo.prototype.add = function (axisCmptIdx) {\n    // Remove duplication.\n    if (!this.indexMap[axisCmptIdx]) {\n      this.indexList.push(axisCmptIdx);\n      this.indexMap[axisCmptIdx] = true;\n    }\n  };\n\n  return DataZoomAxisInfo;\n}();\n\nvar DataZoomModel =\n/** @class */\nfunction (_super) {\n  __extends(DataZoomModel, _super);\n\n  function DataZoomModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = DataZoomModel.type;\n    _this._autoThrottle = true;\n    _this._noTarget = true;\n    /**\n     * It is `[rangeModeForMin, rangeModeForMax]`.\n     * The optional values for `rangeMode`:\n     * + `'value'` mode: the axis extent will always be determined by\n     *     `dataZoom.startValue` and `dataZoom.endValue`, despite\n     *     how data like and how `axis.min` and `axis.max` are.\n     * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\n     *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\n     *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\n     *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\n     *\n     * For example, when users are using dynamic data (update data periodically via `setOption`),\n     * if in `'value`' mode, the window will be kept in a fixed value range despite how\n     * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\n     * the appended data (suppose `axis.min` and `axis.max` are not specified).\n     */\n\n    _this._rangePropMode = ['percent', 'percent'];\n    return _this;\n  }\n\n  DataZoomModel.prototype.init = function (option, parentModel, ecModel) {\n    var inputRawOption = retrieveRawOption(option);\n    /**\n     * Suppose a \"main process\" start at the point that model prepared (that is,\n     * model initialized or merged or method called in `action`).\n     * We should keep the `main process` idempotent, that is, given a set of values\n     * on `option`, we get the same result.\n     *\n     * But sometimes, values on `option` will be updated for providing users\n     * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\n     * should not be the base/input of the `main process`.\n     *\n     * So in that case we should save and keep the input of the `main process`\n     * separately, called `settledOption`.\n     *\n     * For example, consider the case:\n     * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\n     *     where the original input `option.startValue`, `option.endValue` are earsed by\n     *     calculated value.\n     * (Step)2) click the legend to hide and show a series,\n     *     where the new range is calculated by the earsed `startValue` and `endValue`,\n     *     which brings incorrect result.\n     */\n\n    this.settledOption = inputRawOption;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._doInit(inputRawOption);\n  };\n\n  DataZoomModel.prototype.mergeOption = function (newOption) {\n    var inputRawOption = retrieveRawOption(newOption); //FIX #2591\n\n    merge(this.option, newOption, true);\n    merge(this.settledOption, inputRawOption, true);\n\n    this._doInit(inputRawOption);\n  };\n\n  DataZoomModel.prototype._doInit = function (inputRawOption) {\n    var thisOption = this.option;\n\n    this._setDefaultThrottle(inputRawOption);\n\n    this._updateRangeUse(inputRawOption);\n\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = settledOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n\n    this._resetTarget();\n  };\n\n  DataZoomModel.prototype._resetTarget = function () {\n    var optionOrient = this.get('orient', true);\n    var targetAxisIndexMap = this._targetAxisInfoMap = createHashMap();\n\n    var hasAxisSpecified = this._fillSpecifiedTargetAxis(targetAxisIndexMap);\n\n    if (hasAxisSpecified) {\n      this._orient = optionOrient || this._makeAutoOrientByTargetAxis();\n    } else {\n      this._orient = optionOrient || 'horizontal';\n\n      this._fillAutoTargetAxisByOrient(targetAxisIndexMap, this._orient);\n    }\n\n    this._noTarget = true;\n    targetAxisIndexMap.each(function (axisInfo) {\n      if (axisInfo.indexList.length) {\n        this._noTarget = false;\n      }\n    }, this);\n  };\n\n  DataZoomModel.prototype._fillSpecifiedTargetAxis = function (targetAxisIndexMap) {\n    var hasAxisSpecified = false;\n    each(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\n      var refering = this.getReferringComponents(getAxisMainType(axisDim), MULTIPLE_REFERRING); // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n\n      if (!refering.specified) {\n        return;\n      }\n\n      hasAxisSpecified = true;\n      var axisInfo = new DataZoomAxisInfo();\n      each(refering.models, function (axisModel) {\n        axisInfo.add(axisModel.componentIndex);\n      });\n      targetAxisIndexMap.set(axisDim, axisInfo);\n    }, this);\n    return hasAxisSpecified;\n  };\n\n  DataZoomModel.prototype._fillAutoTargetAxisByOrient = function (targetAxisIndexMap, orient) {\n    var ecModel = this.ecModel;\n    var needAuto = true; // Find axis that parallel to dataZoom as default.\n\n    if (needAuto) {\n      var axisDim = orient === 'vertical' ? 'y' : 'x';\n      var axisModels = ecModel.findComponents({\n        mainType: axisDim + 'Axis'\n      });\n      setParallelAxis(axisModels, axisDim);\n    } // Find axis that parallel to dataZoom as default.\n\n\n    if (needAuto) {\n      var axisModels = ecModel.findComponents({\n        mainType: 'singleAxis',\n        filter: function (axisModel) {\n          return axisModel.get('orient', true) === orient;\n        }\n      });\n      setParallelAxis(axisModels, 'single');\n    }\n\n    function setParallelAxis(axisModels, axisDim) {\n      // At least use the first parallel axis as the target axis.\n      var axisModel = axisModels[0];\n\n      if (!axisModel) {\n        return;\n      }\n\n      var axisInfo = new DataZoomAxisInfo();\n      axisInfo.add(axisModel.componentIndex);\n      targetAxisIndexMap.set(axisDim, axisInfo);\n      needAuto = false; // Find parallel axes in the same grid.\n\n      if (axisDim === 'x' || axisDim === 'y') {\n        var gridModel_1 = axisModel.getReferringComponents('grid', SINGLE_REFERRING).models[0];\n        gridModel_1 && each(axisModels, function (axModel) {\n          if (axisModel.componentIndex !== axModel.componentIndex && gridModel_1 === axModel.getReferringComponents('grid', SINGLE_REFERRING).models[0]) {\n            axisInfo.add(axModel.componentIndex);\n          }\n        });\n      }\n    }\n\n    if (needAuto) {\n      // If no parallel axis, find the first category axis as default. (Also consider polar).\n      each(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\n        if (!needAuto) {\n          return;\n        }\n\n        var axisModels = ecModel.findComponents({\n          mainType: getAxisMainType(axisDim),\n          filter: function (axisModel) {\n            return axisModel.get('type', true) === 'category';\n          }\n        });\n\n        if (axisModels[0]) {\n          var axisInfo = new DataZoomAxisInfo();\n          axisInfo.add(axisModels[0].componentIndex);\n          targetAxisIndexMap.set(axisDim, axisInfo);\n          needAuto = false;\n        }\n      }, this);\n    }\n  };\n\n  DataZoomModel.prototype._makeAutoOrientByTargetAxis = function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (axisDim) {\n      !dim && (dim = axisDim);\n    }, this);\n    return dim === 'y' ? 'vertical' : 'horizontal';\n  };\n\n  DataZoomModel.prototype._setDefaultThrottle = function (inputRawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (inputRawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  };\n\n  DataZoomModel.prototype._updateRangeUse = function (inputRawOption) {\n    var rangePropMode = this._rangePropMode;\n    var rangeModeInOption = this.get('rangeMode');\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      var percentSpecified = inputRawOption[names[0]] != null;\n      var valueSpecified = inputRawOption[names[1]] != null;\n\n      if (percentSpecified && !valueSpecified) {\n        rangePropMode[index] = 'percent';\n      } else if (!percentSpecified && valueSpecified) {\n        rangePropMode[index] = 'value';\n      } else if (rangeModeInOption) {\n        rangePropMode[index] = rangeModeInOption[index];\n      } else if (percentSpecified) {\n        // percentSpecified && valueSpecified\n        rangePropMode[index] = 'percent';\n      } // else remain its original setting.\n\n    });\n  };\n\n  DataZoomModel.prototype.noTarget = function () {\n    return this._noTarget;\n  };\n\n  DataZoomModel.prototype.getFirstTargetAxisModel = function () {\n    var firstAxisModel;\n    this.eachTargetAxis(function (axisDim, axisIndex) {\n      if (firstAxisModel == null) {\n        firstAxisModel = this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n      }\n    }, this);\n    return firstAxisModel;\n  };\n  /**\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n\n\n  DataZoomModel.prototype.eachTargetAxis = function (callback, context) {\n    this._targetAxisInfoMap.each(function (axisInfo, axisDim) {\n      each(axisInfo.indexList, function (axisIndex) {\n        callback.call(context, axisDim, axisIndex);\n      });\n    });\n  };\n  /**\n   * @return If not found, return null/undefined.\n   */\n\n\n  DataZoomModel.prototype.getAxisProxy = function (axisDim, axisIndex) {\n    var axisModel = this.getAxisModel(axisDim, axisIndex);\n\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    }\n  };\n  /**\n   * @return If not found, return null/undefined.\n   */\n\n\n  DataZoomModel.prototype.getAxisModel = function (axisDim, axisIndex) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(axisDim && axisIndex != null);\n    }\n\n    var axisInfo = this._targetAxisInfoMap.get(axisDim);\n\n    if (axisInfo && axisInfo.indexMap[axisIndex]) {\n      return this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n    }\n  };\n  /**\n   * If not specified, set to undefined.\n   */\n\n\n  DataZoomModel.prototype.setRawRange = function (opt) {\n    var thisOption = this.option;\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // Consider the pair <start, startValue>:\n      // If one has value and the other one is `null/undefined`, we both set them\n      // to `settledOption`. This strategy enables the feature to clear the original\n      // value in `settledOption` to `null/undefined`.\n      // But if both of them are `null/undefined`, we do not set them to `settledOption`\n      // and keep `settledOption` with the original value. This strategy enables users to\n      // only set <end or endValue> but not set <start or startValue> when calling\n      // `dispatchAction`.\n      // The pair <end, endValue> is treated in the same way.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\n        thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\n      }\n    }, this);\n\n    this._updateRangeUse(opt);\n  };\n\n  DataZoomModel.prototype.setCalculatedRange = function (opt) {\n    var option = this.option;\n    each(['start', 'startValue', 'end', 'endValue'], function (name) {\n      option[name] = opt[name];\n    });\n  };\n\n  DataZoomModel.prototype.getPercentRange = function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  };\n  /**\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @return [startValue, endValue] value can only be '-' or finite number.\n   */\n\n\n  DataZoomModel.prototype.getValueRange = function (axisDim, axisIndex) {\n    if (axisDim == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDim, axisIndex).getDataValueWindow();\n    }\n  };\n  /**\n   * @param axisModel If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   */\n\n\n  DataZoomModel.prototype.findRepresentativeAxisProxy = function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var firstProxy;\n\n    var axisDimList = this._targetAxisInfoMap.keys();\n\n    for (var i = 0; i < axisDimList.length; i++) {\n      var axisDim = axisDimList[i];\n\n      var axisInfo = this._targetAxisInfoMap.get(axisDim);\n\n      for (var j = 0; j < axisInfo.indexList.length; j++) {\n        var proxy = this.getAxisProxy(axisDim, axisInfo.indexList[j]);\n\n        if (proxy.hostedBy(this)) {\n          return proxy;\n        }\n\n        if (!firstProxy) {\n          firstProxy = proxy;\n        }\n      }\n    } // If no hosted proxy found, still need to return a proxy.\n    // This case always happens in toolbox dataZoom, where axes are all hosted by\n    // other dataZooms.\n\n\n    return firstProxy;\n  };\n\n  DataZoomModel.prototype.getRangePropMode = function () {\n    return this._rangePropMode.slice();\n  };\n\n  DataZoomModel.prototype.getOrient = function () {\n    if (process.env.NODE_ENV !== 'production') {\n      // Should not be called before initialized.\n      assert(this._orient);\n    }\n\n    return this._orient;\n  };\n\n  DataZoomModel.type = 'dataZoom';\n  DataZoomModel.dependencies = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series', 'toolbox'];\n  DataZoomModel.defaultOption = {\n    // zlevel: 0,\n    z: 4,\n    filterMode: 'filter',\n    start: 0,\n    end: 100\n  };\n  return DataZoomModel;\n}(ComponentModel);\n/**\n * Retrieve the those raw params from option, which will be cached separately.\n * becasue they will be overwritten by normalized/calculated values in the main\n * process.\n */\n\n\nfunction retrieveRawOption(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nexport default DataZoomModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentView from '../../view/Component.js';\n\nvar DataZoomView =\n/** @class */\nfunction (_super) {\n  __extends(DataZoomView, _super);\n\n  function DataZoomView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = DataZoomView.type;\n    return _this;\n  }\n\n  DataZoomView.prototype.render = function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  };\n\n  DataZoomView.type = 'dataZoom';\n  return DataZoomView;\n}(ComponentView);\n\nexport default DataZoomView;"],"names":["DataZoomAxisInfo","this","indexList","indexMap","prototype","add","axisCmptIdx","push","DataZoomModel","_super","_this","apply","arguments","type","_autoThrottle","_noTarget","_rangePropMode","__extends","init","option","parentModel","ecModel","inputRawOption","retrieveRawOption","settledOption","mergeDefaultAndTheme","_doInit","mergeOption","newOption","merge","thisOption","_setDefaultThrottle","_updateRangeUse","each","names","index","_resetTarget","optionOrient","get","targetAxisIndexMap","_targetAxisInfoMap","createHashMap","_fillSpecifiedTargetAxis","_orient","_makeAutoOrientByTargetAxis","_fillAutoTargetAxisByOrient","axisInfo","length","hasAxisSpecified","DATA_ZOOM_AXIS_DIMENSIONS","axisDim","refering","getReferringComponents","getAxisMainType","MULTIPLE_REFERRING","specified","models","axisModel","componentIndex","set","orient","needAuto","setParallelAxis","findComponents","mainType","axisModels","gridModel_1","SINGLE_REFERRING","axModel","filter","dim","eachTargetAxis","hasOwnProperty","globalOption","throttle","animation","animationDurationUpdate","rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","noTarget","getFirstTargetAxisModel","firstAxisModel","axisIndex","getComponent","callback","context","call","getAxisProxy","getAxisModel","__dzAxisProxy","setRawRange","opt","setCalculatedRange","name","getPercentRange","axisProxy","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","getDataValueWindow","firstProxy","axisDimList","keys","i","j","proxy","hostedBy","getRangePropMode","slice","getOrient","dependencies","defaultOption","z","filterMode","start","end","ComponentModel","ret","DataZoomView","render","dataZoomModel","api","payload","ComponentView"],"sourceRoot":""}