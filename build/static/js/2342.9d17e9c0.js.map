{"version":3,"file":"static/js/2342.9d17e9c0.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/sankey/SankeyView.js","../node_modules/echarts/lib/chart/sankey/SankeySeries.js","../node_modules/echarts/lib/chart/sankey/sankeyLayout.js","../node_modules/echarts/lib/chart/sankey/sankeyVisual.js","../node_modules/echarts/lib/chart/sankey/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { enterEmphasis, leaveEmphasis, toggleHoverEmphasis, setStatesStylesFromModel } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isString } from 'zrender/lib/core/util.js';\n\nvar SankeyPathShape =\n/** @class */\nfunction () {\n  function SankeyPathShape() {\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.cpx1 = 0;\n    this.cpy1 = 0;\n    this.cpx2 = 0;\n    this.cpy2 = 0;\n    this.extent = 0;\n  }\n\n  return SankeyPathShape;\n}();\n\nvar SankeyPath =\n/** @class */\nfunction (_super) {\n  __extends(SankeyPath, _super);\n\n  function SankeyPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  SankeyPath.prototype.getDefaultShape = function () {\n    return new SankeyPathShape();\n  };\n\n  SankeyPath.prototype.buildPath = function (ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n\n    ctx.closePath();\n  };\n\n  SankeyPath.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n\n  SankeyPath.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n\n  return SankeyPath;\n}(graphic.Path);\n\nvar SankeyView =\n/** @class */\nfunction (_super) {\n  __extends(SankeyView, _super);\n\n  function SankeyView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SankeyView.type;\n    _this._focusAdjacencyDisabled = false;\n    return _this;\n  }\n\n  SankeyView.prototype.render = function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.x = layoutInfo.x;\n    group.y = layoutInfo.y; // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyPath();\n      var ecData = getECData(curve);\n      ecData.dataIndex = edge.dataIndex;\n      ecData.seriesIndex = seriesModel.seriesIndex;\n      ecData.dataType = 'edge';\n      var edgeModel = edge.getModel();\n      var lineStyleModel = edgeModel.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.useStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          curve.style.decal = edge.node1.getVisual('style').decal;\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          curve.style.decal = edge.node2.getVisual('style').decal;\n          break;\n\n        case 'gradient':\n          var sourceColor = edge.node1.getVisual('color');\n          var targetColor = edge.node2.getVisual('color');\n\n          if (isString(sourceColor) && isString(targetColor)) {\n            curve.style.fill = new graphic.LinearGradient(0, 0, +(orient === 'horizontal'), +(orient === 'vertical'), [{\n              color: sourceColor,\n              offset: 0\n            }, {\n              color: targetColor,\n              offset: 1\n            }]);\n          }\n\n      }\n\n      var emphasisModel = edgeModel.getModel('emphasis');\n      setStatesStylesFromModel(curve, edgeModel, 'lineStyle', function (model) {\n        return model.getItemStyle();\n      });\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(curve, focus === 'adjacency' ? edge.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n      getECData(curve).dataType = 'edge';\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var emphasisModel = itemModel.getModel('emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle(),\n        z2: 10\n      });\n      setLabelStyle(rect, getLabelStatesModels(itemModel), {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id\n      });\n      rect.disableLabelAnimation = true;\n      rect.setStyle('fill', node.getVisual('color'));\n      rect.setStyle('decal', node.getVisual('style').decal);\n      setStatesStylesFromModel(rect, itemModel);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      getECData(rect).dataType = 'node';\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(rect, focus === 'adjacency' ? node.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n    });\n\n    if (!this._data && seriesModel.isAnimationEnabled()) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  };\n\n  SankeyView.prototype.dispose = function () {};\n\n  SankeyView.type = 'sankey';\n  return SankeyView;\n}(ChartView); // Add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nexport default SankeyView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series.js';\nimport createGraphFromNodeEdge from '../helper/createGraphFromNodeEdge.js';\nimport Model from '../../model/Model.js';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup.js';\n\nvar SankeySeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(SankeySeriesModel, _super);\n\n  function SankeySeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SankeySeriesModel.type;\n    return _this;\n  }\n  /**\n   * Init a graph data structure from data in option series\n   */\n\n\n  SankeySeriesModel.prototype.getInitialData = function (option, ecModel) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n    var levels = option.levels;\n    this.levelModels = [];\n    var levelModels = this.levelModels;\n\n    for (var i = 0; i < levels.length; i++) {\n      if (levels[i].depth != null && levels[i].depth >= 0) {\n        levelModels[levels[i].depth] = new Model(levels[i], this, ecModel);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('levels[i].depth is mandatory and should be natural number');\n        }\n      }\n    }\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true, beforeLink);\n      return graph.data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        var seriesModel = model.parentModel;\n        var layout = seriesModel.getData().getItemLayout(idx);\n\n        if (layout) {\n          var nodeDepth = layout.depth;\n          var levelModel = seriesModel.levelModels[nodeDepth];\n\n          if (levelModel) {\n            model.parentModel = levelModel;\n          }\n        }\n\n        return model;\n      });\n      edgeData.wrapMethod('getItemModel', function (model, idx) {\n        var seriesModel = model.parentModel;\n        var edge = seriesModel.getGraph().getEdgeByIndex(idx);\n        var layout = edge.node1.getLayout();\n\n        if (layout) {\n          var depth = layout.depth;\n          var levelModel = seriesModel.levelModels[depth];\n\n          if (levelModel) {\n            model.parentModel = levelModel;\n          }\n        }\n\n        return model;\n      });\n    }\n  };\n\n  SankeySeriesModel.prototype.setNodePosition = function (dataIndex, localPosition) {\n    var nodes = this.option.data || this.option.nodes;\n    var dataItem = nodes[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  };\n  /**\n   * Return the graphic data structure\n   *\n   * @return graphic data structure\n   */\n\n\n  SankeySeriesModel.prototype.getGraph = function () {\n    return this.getData().graph;\n  };\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return data structure of list\n   */\n\n\n  SankeySeriesModel.prototype.getEdgeData = function () {\n    return this.getGraph().edgeData;\n  };\n\n  SankeySeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    function noValue(val) {\n      return isNaN(val) || val == null;\n    } // dataType === 'node' or empty do not show tooltip by default\n\n\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var edgeValue = params.value;\n      var edgeName = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n      return createTooltipMarkup('nameValue', {\n        name: edgeName,\n        value: edgeValue,\n        noValue: noValue(edgeValue)\n      });\n    } // dataType === 'node'\n    else {\n        var node = this.getGraph().getNodeByIndex(dataIndex);\n        var value = node.getLayout().value;\n        var name_1 = this.getDataParams(dataIndex, dataType).data.name;\n        return createTooltipMarkup('nameValue', {\n          name: name_1 != null ? name_1 + '' : null,\n          value: value,\n          noValue: noValue(value)\n        });\n      }\n  };\n\n  SankeySeriesModel.prototype.optionUpdated = function () {}; // Override Series.getDataParams()\n\n\n  SankeySeriesModel.prototype.getDataParams = function (dataIndex, dataType) {\n    var params = _super.prototype.getDataParams.call(this, dataIndex, dataType);\n\n    if (params.value == null && dataType === 'node') {\n      var node = this.getGraph().getNodeByIndex(dataIndex);\n      var nodeValue = node.getLayout().value;\n      params.value = nodeValue;\n    }\n\n    return params;\n  };\n\n  SankeySeriesModel.type = 'series.sankey';\n  SankeySeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    orient: 'horizontal',\n    nodeWidth: 20,\n    nodeGap: 8,\n    draggable: true,\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      fontSize: 12\n    },\n    levels: [],\n    nodeAlign: 'justify',\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.5\n      }\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  };\n  return SankeySeriesModel;\n}(SeriesModel);\n\nexport default SankeySeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as layout from '../../util/layout.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { groupData } from '../../util/model.js';\nexport default function sankeyLayout(ecModel, api) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    var orient = seriesModel.get('orient');\n    var nodeAlign = seriesModel.get('nodeAlign');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign);\n  });\n}\n/**\n * Get the layout position of the whole view\n */\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign);\n  computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient);\n  computeEdgeDepths(nodes, orient);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var nodeRawValue = node.getValue() || 0;\n    var value = Math.max(value1, value2, nodeRawValue);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n *\n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextTargetNode = [];\n  var x = 0; // let kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  var maxNodeDepth = -1; // Traversing nodes using topological sorting to calculate the\n  // horizontal(if orient === 'horizontal') or vertical(if orient === 'vertical')\n  // position of the nodes.\n\n  while (zeroIndegrees.length) {\n    for (var idx = 0; idx < zeroIndegrees.length; idx++) {\n      var node = zeroIndegrees[idx];\n      var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\n      var isItemDepth = item.depth != null && item.depth >= 0;\n\n      if (isItemDepth && item.depth > maxNodeDepth) {\n        maxNodeDepth = item.depth;\n      }\n\n      node.setLayout({\n        depth: isItemDepth ? item.depth : x\n      }, true);\n      orient === 'vertical' ? node.setLayout({\n        dy: nodeWidth\n      }, true) : node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var edgeIdx = 0; edgeIdx < node.outEdges.length; edgeIdx++) {\n        var edge = node.outEdges[edgeIdx];\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0 && nextTargetNode.indexOf(targetNode) < 0) {\n          nextTargetNode.push(targetNode);\n        }\n      }\n    }\n\n    ++x;\n    zeroIndegrees = nextTargetNode;\n    nextTargetNode = [];\n  }\n\n  for (var i = 0; i < remainEdges.length; i++) {\n    if (remainEdges[i] === 1) {\n      throw new Error('Sankey is a DAG, the original data has cycle!');\n    }\n  }\n\n  var maxDepth = maxNodeDepth > x - 1 ? maxNodeDepth : x - 1;\n\n  if (nodeAlign && nodeAlign !== 'left') {\n    adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth);\n  }\n\n  var kx = orient === 'vertical' ? (height - nodeWidth) / maxDepth : (width - nodeWidth) / maxDepth;\n  scaleNodeBreadths(nodes, kx, orient);\n}\n\nfunction isNodeDepth(node) {\n  var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\n  return item.depth != null && item.depth >= 0;\n}\n\nfunction adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth) {\n  if (nodeAlign === 'right') {\n    var nextSourceNode = [];\n    var remainNodes = nodes;\n    var nodeHeight = 0;\n\n    while (remainNodes.length) {\n      for (var i = 0; i < remainNodes.length; i++) {\n        var node = remainNodes[i];\n        node.setLayout({\n          skNodeHeight: nodeHeight\n        }, true);\n\n        for (var j = 0; j < node.inEdges.length; j++) {\n          var edge = node.inEdges[j];\n\n          if (nextSourceNode.indexOf(edge.node1) < 0) {\n            nextSourceNode.push(edge.node1);\n          }\n        }\n      }\n\n      remainNodes = nextSourceNode;\n      nextSourceNode = [];\n      ++nodeHeight;\n    }\n\n    zrUtil.each(nodes, function (node) {\n      if (!isNodeDepth(node)) {\n        node.setLayout({\n          depth: Math.max(0, maxDepth - node.getLayout().skNodeHeight)\n        }, true);\n      }\n    });\n  } else if (nodeAlign === 'justify') {\n    moveSinksRight(nodes, maxDepth);\n  }\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param nodes.  node of sankey view.\n * @param maxDepth.  use to assign to node without outEdges as x-position.\n */\n\n\nfunction moveSinksRight(nodes, maxDepth) {\n  zrUtil.each(nodes, function (node) {\n    if (!isNodeDepth(node) && !node.outEdges.length) {\n      node.setLayout({\n        depth: maxDepth\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param nodes  node of sankey view\n * @param kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx, orient) {\n  zrUtil.each(nodes, function (node) {\n    var nodeDepth = node.getLayout().depth * kx;\n    orient === 'vertical' ? node.setLayout({\n      y: nodeDepth\n    }, true) : node.setLayout({\n      x: nodeDepth\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param nodes  node of sankey view\n * @param edges  edge of sankey view\n * @param height  the whole height of the area to draw the view\n * @param nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient) {\n  var nodesByBreadth = prepareNodesByBreadth(nodes, orient);\n  initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient);\n  resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n    relaxLeftToRight(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n  }\n}\n\nfunction prepareNodesByBreadth(nodes, orient) {\n  var nodesByBreadth = [];\n  var keyAttr = orient === 'vertical' ? 'y' : 'x';\n  var groupResult = groupData(nodes, function (node) {\n    return node.getLayout()[keyAttr];\n  });\n  groupResult.keys.sort(function (a, b) {\n    return a - b;\n  });\n  zrUtil.each(groupResult.keys, function (key) {\n    nodesByBreadth.push(groupResult.buckets.get(key));\n  });\n  return nodesByBreadth;\n}\n/**\n * Compute the original y-position for each node\n */\n\n\nfunction initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient) {\n  var minKy = Infinity;\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = orient === 'vertical' ? (width - (n - 1) * nodeGap) / sum : (height - (n - 1) * nodeGap) / sum;\n\n    if (ky < minKy) {\n      minKy = ky;\n    }\n  });\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      var nodeDy = node.getLayout().value * minKy;\n\n      if (orient === 'vertical') {\n        node.setLayout({\n          x: i\n        }, true);\n        node.setLayout({\n          dx: nodeDy\n        }, true);\n      } else {\n        node.setLayout({\n          y: i\n        }, true);\n        node.setLayout({\n          dy: nodeDy\n        }, true);\n      }\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * minKy;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height, width, orient) {\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    nodes.sort(function (a, b) {\n      return a.getLayout()[keyAttr] - b.getLayout()[keyAttr];\n    });\n    var nodeX;\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var nodeDyAttr = orient === 'vertical' ? 'dx' : 'dy';\n\n    for (var i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout()[keyAttr];\n\n      if (dy > 0) {\n        nodeX = node.getLayout()[keyAttr] + dy;\n        orient === 'vertical' ? node.setLayout({\n          x: nodeX\n        }, true) : node.setLayout({\n          y: nodeX\n        }, true);\n      }\n\n      y0 = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap;\n    }\n\n    var viewWidth = orient === 'vertical' ? width : height; // If the bottommost node goes outside the bounds, push it back up\n\n    dy = y0 - nodeGap - viewWidth;\n\n    if (dy > 0) {\n      nodeX = node.getLayout()[keyAttr] - dy;\n      orient === 'vertical' ? node.setLayout({\n        x: nodeX\n      }, true) : node.setLayout({\n        y: nodeX\n      }, true);\n      y0 = nodeX;\n\n      for (var i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeX = node.getLayout()[keyAttr] - dy;\n          orient === 'vertical' ? node.setLayout({\n            x: nodeX\n          }, true) : node.setLayout({\n            y: nodeX\n          }, true);\n        }\n\n        y0 = node.getLayout()[keyAttr];\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n * @param nodesByBreadth\n * @param alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget, orient) / sum(node.outEdges, getEdgeValue);\n\n        if (isNaN(y)) {\n          var len = node.outEdges.length;\n          y = len ? sum(node.outEdges, centerTarget, orient) / len : 0;\n        }\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge, orient) {\n  return center(edge.node2, orient) * edge.getValue();\n}\n\nfunction centerTarget(edge, orient) {\n  return center(edge.node2, orient);\n}\n\nfunction weightedSource(edge, orient) {\n  return center(edge.node1, orient) * edge.getValue();\n}\n\nfunction centerSource(edge, orient) {\n  return center(edge.node1, orient);\n}\n\nfunction center(node, orient) {\n  return orient === 'vertical' ? node.getLayout().x + node.getLayout().dx / 2 : node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nfunction sum(array, cb, orient) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +cb(array[i], orient);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource, orient) / sum(node.inEdges, getEdgeValue);\n\n        if (isNaN(y)) {\n          var len = node.inEdges.length;\n          y = len ? sum(node.inEdges, centerSource, orient) / len : 0;\n        }\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n/**\n * Compute the depth(y-position) of each edge\n */\n\n\nfunction computeEdgeDepths(nodes, orient) {\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(function (a, b) {\n      return a.node2.getLayout()[keyAttr] - b.node2.getLayout()[keyAttr];\n    });\n    node.inEdges.sort(function (a, b) {\n      return a.node1.getLayout()[keyAttr] - b.node1.getLayout()[keyAttr];\n    });\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport VisualMapping from '../../visual/VisualMapping.js';\nexport default function sankeyVisual(ecModel) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue_1 = Infinity;\n      var maxValue_1 = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue_1) {\n          minValue_1 = nodeValue;\n        }\n\n        if (nodeValue > maxValue_1) {\n          maxValue_1 = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue_1, maxValue_1],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        var customColor = node.getModel().get(['itemStyle', 'color']);\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n          node.setVisual('style', {\n            fill: customColor\n          });\n        } else {\n          node.setVisual('color', mapValueToColor);\n          node.setVisual('style', {\n            fill: mapValueToColor\n          });\n        }\n      });\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport SankeyView from './SankeyView.js';\nimport SankeySeriesModel from './SankeySeries.js';\nimport sankeyLayout from './sankeyLayout.js';\nimport sankeyVisual from './sankeyVisual.js';\nexport function install(registers) {\n  registers.registerChartView(SankeyView);\n  registers.registerSeriesModel(SankeySeriesModel);\n  registers.registerLayout(sankeyLayout);\n  registers.registerVisual(sankeyVisual);\n  registers.registerAction({\n    type: 'dragNode',\n    event: 'dragnode',\n    // here can only use 'update' now, other value is not support in echarts.\n    update: 'update'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'sankey',\n      query: payload\n    }, function (seriesModel) {\n      seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n    });\n  });\n}"],"names":["SankeyPathShape","this","x1","y1","x2","y2","cpx1","cpy1","cpx2","cpy2","extent","SankeyPath","_super","opts","call","__extends","prototype","getDefaultShape","buildPath","ctx","shape","moveTo","bezierCurveTo","orient","lineTo","closePath","highlight","enterEmphasis","downplay","leaveEmphasis","graphic","SankeyView","_this","apply","arguments","type","_focusAdjacencyDisabled","render","seriesModel","ecModel","api","sankeyView","graph","getGraph","group","layoutInfo","width","height","nodeData","getData","edgeData","get","_model","removeAll","x","y","eachEdge","edge","curve","ecData","getECData","dataIndex","seriesIndex","dataType","edgeModel","getModel","lineStyleModel","curvature","n1Layout","node1","getLayout","node1Model","dragX1","dragY1","n2Layout","node2","node2Model","dragX2","dragY2","edgeLayout","Math","max","dy","sy","ty","dx","setShape","useStyle","getItemStyle","style","fill","getVisual","decal","sourceColor","targetColor","isString","color","offset","emphasisModel","setStatesStylesFromModel","model","add","setItemGraphicEl","focus","toggleHoverEmphasis","getAdjacentDataIndices","eachNode","node","layout","itemModel","dragX","dragY","rect","z2","setLabelStyle","getLabelStatesModels","labelFetcher","labelDataIndex","defaultText","id","disableLabelAnimation","setStyle","eachItemGraphicEl","el","getItemModel","drift","dirty","dispatchAction","seriesId","getRawIndex","localX","localY","ondragend","draggable","cursor","_data","isAnimationEnabled","setClipPath","cb","rectEl","removeClipPath","createGridClipShape","getBoundingRect","dispose","ChartView","SankeySeriesModel","getInitialData","option","links","edges","nodes","data","levels","levelModels","i","length","depth","Model","createGraphFromNodeEdge","wrapMethod","idx","parentModel","getItemLayout","nodeDepth","levelModel","getEdgeByIndex","setNodePosition","localPosition","dataItem","getEdgeData","formatTooltip","multipleSeries","noValue","val","isNaN","params","getDataParams","rawDataOpt","edgeValue","value","edgeName","source","target","createTooltipMarkup","name","getNodeByIndex","name_1","optionUpdated","nodeValue","defaultOption","z","coordinateSystem","left","top","right","bottom","nodeWidth","nodeGap","layoutIterations","label","show","position","fontSize","nodeAlign","lineStyle","opacity","curveness","emphasis","select","itemStyle","borderColor","animationEasing","animationDuration","SeriesModel","sankeyLayout","eachSeriesByType","getBoxLayoutParams","getWidth","getHeight","getViewRect","zrUtil","value1","sum","outEdges","getEdgeValue","value2","inEdges","nodeRawValue","getValue","setLayout","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextTargetNode","push","maxNodeDepth","item","hostGraph","getRawDataItem","isItemDepth","edgeIdx","indexOf","targetNode","Error","maxDepth","nextSourceNode","remainNodes","nodeHeight","skNodeHeight","j","isNodeDepth","moveSinksRight","adjustNodeWithNodeAlign","kx","scaleNodeBreadths","computeNodeBreadths","nodesByBreadth","keyAttr","groupResult","groupData","keys","sort","a","b","key","buckets","prepareNodesByBreadth","minKy","Infinity","n","ky","nodeDy","edgeDy","initializeNodeDepth","resolveCollisions","alpha","relaxRightToLeft","relaxLeftToRight","computeNodeDepths","computeEdgeDepths","layoutSankey","nodeX","y0","nodeDyAttr","slice","reverse","weightedTarget","len","centerTarget","center","nodeY","weightedSource","centerSource","array","sankeyVisual","minValue_1","maxValue_1","mapValueToColor","VisualMapping","mappingMethod","dataExtent","visual","mapValueToVisual","customColor","setVisual","install","registers","registerChartView","registerSeriesModel","registerLayout","registerVisual","registerAction","event","update","payload","eachComponent","mainType","subType","query"],"sourceRoot":""}