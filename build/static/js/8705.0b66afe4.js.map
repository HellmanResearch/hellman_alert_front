{"version":3,"file":"static/js/8705.0b66afe4.js","mappings":"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","sources":["../node_modules/echarts/lib/component/dataZoom/SliderZoomView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, isFunction, isString, indexOf } from 'zrender/lib/core/util.js';\nimport * as eventTool from 'zrender/lib/core/event.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as throttle from '../../util/throttle.js';\nimport DataZoomView from './DataZoomView.js';\nimport { linearMap, asc, parsePercent } from '../../util/number.js';\nimport * as layout from '../../util/layout.js';\nimport sliderMove from '../helper/sliderMove.js';\nimport { getAxisMainType, collectReferCoordSysModelInfo } from './helper.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { createSymbol, symbolBuildProxies } from '../../util/symbol.js';\nimport { deprecateLog } from '../../util/log.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nvar Rect = graphic.Rect; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar DEFAULT_MOVE_HANDLE_SIZE = 7;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar REALTIME_ANIMATION_CONFIG = {\n  easing: 'cubicOut',\n  duration: 100,\n  delay: 0\n};\n\nvar SliderZoomView =\n/** @class */\nfunction (_super) {\n  __extends(SliderZoomView, _super);\n\n  function SliderZoomView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SliderZoomView.type;\n    _this._displayables = {};\n    return _this;\n  }\n\n  SliderZoomView.prototype.init = function (ecModel, api) {\n    this.api = api; // A unique handler for each dataZoom component\n\n    this._onBrush = bind(this._onBrush, this);\n    this._onBrushEnd = bind(this._onBrushEnd, this);\n  };\n\n  SliderZoomView.prototype.render = function (dataZoomModel, ecModel, api, payload) {\n    _super.prototype.render.apply(this, arguments);\n\n    throttle.createOrUpdate(this, '_dispatchZoomAction', dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.getOrient();\n\n    if (dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    if (dataZoomModel.noTarget()) {\n      this._clear();\n\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  };\n\n  SliderZoomView.prototype.dispose = function () {\n    this._clear();\n\n    _super.prototype.dispose.apply(this, arguments);\n  };\n\n  SliderZoomView.prototype._clear = function () {\n    throttle.clear(this, '_dispatchZoomAction');\n    var zr = this.api.getZr();\n    zr.off('mousemove', this._onBrush);\n    zr.off('mouseup', this._onBrushEnd);\n  };\n\n  SliderZoomView.prototype._buildView = function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    this._brushing = false;\n    this._displayables.brushRect = null;\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.sliderGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  };\n\n  SliderZoomView.prototype._resetLocation = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api;\n    var showMoveHandle = dataZoomModel.get('brushSelect');\n    var moveHandleSize = showMoveHandle ? DEFAULT_MOVE_HANDLE_SIZE : 0; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP - moveHandleSize,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  };\n\n  SliderZoomView.prototype._positionGroup = function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var sliderGroup = this._displayables.sliderGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    sliderGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scaleY: otherAxisInverse ? 1 : -1,\n      scaleX: 1\n    } : orient === HORIZONTAL && inverse ? {\n      scaleY: otherAxisInverse ? 1 : -1,\n      scaleX: -1\n    } : orient === VERTICAL && !inverse ? {\n      scaleY: otherAxisInverse ? -1 : 1,\n      scaleX: 1,\n      rotation: Math.PI / 2\n    } // Dont use Math.PI, considering shadow direction.\n    : {\n      scaleY: otherAxisInverse ? -1 : 1,\n      scaleX: -1,\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([sliderGroup]);\n    thisGroup.x = location.x - rect.x;\n    thisGroup.y = location.y - rect.y;\n    thisGroup.markRedraw();\n  };\n\n  SliderZoomView.prototype._getViewExtent = function () {\n    return [0, this._size[0]];\n  };\n\n  SliderZoomView.prototype._renderBackground = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.sliderGroup;\n    var brushSelect = dataZoomModel.get('brushSelect');\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    var clickPanel = new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: bind(this._onClickPanel, this)\n    });\n    var zr = this.api.getZr();\n\n    if (brushSelect) {\n      clickPanel.on('mousedown', this._onBrushStart, this);\n      clickPanel.cursor = 'crosshair';\n      zr.on('mousemove', this._onBrush);\n      zr.on('mouseup', this._onBrushEnd);\n    } else {\n      zr.off('mousemove', this._onBrush);\n      zr.off('mouseup', this._onBrushEnd);\n    }\n\n    barGroup.add(clickPanel);\n  };\n\n  SliderZoomView.prototype._renderDataShadow = function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    this._displayables.dataShadowSegs = [];\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var oldSize = this._shadowSize || [];\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var candlestickDim = seriesModel.getShadowDim && seriesModel.getShadowDim();\n    var otherDim = candlestickDim && data.getDimensionInfo(candlestickDim) ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var polygonPts = this._shadowPolygonPts;\n    var polylinePts = this._shadowPolylinePts; // Not re-render if data doesn't change.\n\n    if (data !== this._shadowData || otherDim !== this._shadowDim || size[0] !== oldSize[0] || size[1] !== oldSize[1]) {\n      var otherDataExtent_1 = data.getDataExtent(otherDim); // Nice extent.\n\n      var otherOffset = (otherDataExtent_1[1] - otherDataExtent_1[0]) * 0.3;\n      otherDataExtent_1 = [otherDataExtent_1[0] - otherOffset, otherDataExtent_1[1] + otherOffset];\n      var otherShadowExtent_1 = [0, size[1]];\n      var thisShadowExtent = [0, size[0]];\n      var areaPoints_1 = [[size[0], 0], [0, 0]];\n      var linePoints_1 = [];\n      var step_1 = thisShadowExtent[1] / (data.count() - 1);\n      var thisCoord_1 = 0; // Optimize for large data shadow\n\n      var stride_1 = Math.round(data.count() / size[0]);\n      var lastIsEmpty_1;\n      data.each([otherDim], function (value, index) {\n        if (stride_1 > 0 && index % stride_1) {\n          thisCoord_1 += step_1;\n          return;\n        } // FIXME\n        // Should consider axis.min/axis.max when drawing dataShadow.\n        // FIXME\n        // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n        var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n        var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent_1, otherShadowExtent_1, true); // Attempt to draw data shadow precisely when there are empty value.\n\n        if (isEmpty && !lastIsEmpty_1 && index) {\n          areaPoints_1.push([areaPoints_1[areaPoints_1.length - 1][0], 0]);\n          linePoints_1.push([linePoints_1[linePoints_1.length - 1][0], 0]);\n        } else if (!isEmpty && lastIsEmpty_1) {\n          areaPoints_1.push([thisCoord_1, 0]);\n          linePoints_1.push([thisCoord_1, 0]);\n        }\n\n        areaPoints_1.push([thisCoord_1, otherCoord]);\n        linePoints_1.push([thisCoord_1, otherCoord]);\n        thisCoord_1 += step_1;\n        lastIsEmpty_1 = isEmpty;\n      });\n      polygonPts = this._shadowPolygonPts = areaPoints_1;\n      polylinePts = this._shadowPolylinePts = linePoints_1;\n    }\n\n    this._shadowData = data;\n    this._shadowDim = otherDim;\n    this._shadowSize = [size[0], size[1]];\n    var dataZoomModel = this.dataZoomModel;\n\n    function createDataShadowGroup(isSelectedArea) {\n      var model = dataZoomModel.getModel(isSelectedArea ? 'selectedDataBackground' : 'dataBackground');\n      var group = new graphic.Group();\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: polygonPts\n        },\n        segmentIgnoreThreshold: 1,\n        style: model.getModel('areaStyle').getAreaStyle(),\n        silent: true,\n        z2: -20\n      });\n      var polyline = new graphic.Polyline({\n        shape: {\n          points: polylinePts\n        },\n        segmentIgnoreThreshold: 1,\n        style: model.getModel('lineStyle').getLineStyle(),\n        silent: true,\n        z2: -19\n      });\n      group.add(polygon);\n      group.add(polyline);\n      return group;\n    } // let dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n\n    for (var i = 0; i < 3; i++) {\n      var group = createDataShadowGroup(i === 1);\n\n      this._displayables.sliderGroup.add(group);\n\n      this._displayables.dataShadowSegs.push(group);\n    }\n  };\n\n  SliderZoomView.prototype._prepareDataShadowInfo = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(axisDim, axisIndex).getTargetSeriesModels();\n      each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(getAxisMainType(axisDim), axisIndex).axis;\n        var otherDim = getOtherDim(axisDim);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: axisDim,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  };\n\n  SliderZoomView.prototype._renderHandle = function () {\n    var thisGroup = this.group;\n    var displayables = this._displayables;\n    var handles = displayables.handles = [null, null];\n    var handleLabels = displayables.handleLabels = [null, null];\n    var sliderGroup = this._displayables.sliderGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api;\n    var borderRadius = dataZoomModel.get('borderRadius') || 0;\n    var brushSelect = dataZoomModel.get('brushSelect');\n    var filler = displayables.filler = new Rect({\n      silent: brushSelect,\n      style: {\n        fill: dataZoomModel.get('fillerColor')\n      },\n      textConfig: {\n        position: 'inside'\n      }\n    });\n    sliderGroup.add(filler); // Frame border.\n\n    sliderGroup.add(new Rect({\n      silent: true,\n      subPixelOptimize: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1],\n        r: borderRadius\n      },\n      style: {\n        // deprecated option\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })); // Left and right handle to resize\n\n    each([0, 1], function (handleIndex) {\n      var iconStr = dataZoomModel.get('handleIcon');\n\n      if (!symbolBuildProxies[iconStr] && iconStr.indexOf('path://') < 0 && iconStr.indexOf('image://') < 0) {\n        // Compatitable with the old icon parsers. Which can use a path string without path://\n        iconStr = 'path://' + iconStr;\n\n        if (process.env.NODE_ENV !== 'production') {\n          deprecateLog('handleIcon now needs \\'path://\\' prefix when using a path string');\n        }\n      }\n\n      var path = createSymbol(iconStr, -1, 0, 2, 2, null, true);\n      path.attr({\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false),\n        z2: 5\n      });\n      var bRect = path.getBoundingRect();\n      var handleSize = dataZoomModel.get('handleSize');\n      this._handleHeight = parsePercent(handleSize, this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      path.style.strokeNoScale = true;\n      path.rectHover = true;\n      path.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'handleStyle']).getItemStyle();\n      enableHoverEmphasis(path);\n      var handleColor = dataZoomModel.get('handleColor'); // deprecated option\n      // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      sliderGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.getModel('textStyle');\n      thisGroup.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: createTextStyle(textStyleModel, {\n          x: 0,\n          y: 0,\n          text: '',\n          verticalAlign: 'middle',\n          align: 'center',\n          fill: textStyleModel.getTextColor(),\n          font: textStyleModel.getFont()\n        }),\n        z2: 10\n      }));\n    }, this); // Handle to move. Only visible when brushSelect is set true.\n\n    var actualMoveZone = filler;\n\n    if (brushSelect) {\n      var moveHandleHeight = parsePercent(dataZoomModel.get('moveHandleSize'), size[1]);\n      var moveHandle_1 = displayables.moveHandle = new graphic.Rect({\n        style: dataZoomModel.getModel('moveHandleStyle').getItemStyle(),\n        silent: true,\n        shape: {\n          r: [0, 0, 2, 2],\n          y: size[1] - 0.5,\n          height: moveHandleHeight\n        }\n      });\n      var iconSize = moveHandleHeight * 0.8;\n      var moveHandleIcon = displayables.moveHandleIcon = createSymbol(dataZoomModel.get('moveHandleIcon'), -iconSize / 2, -iconSize / 2, iconSize, iconSize, '#fff', true);\n      moveHandleIcon.silent = true;\n      moveHandleIcon.y = size[1] + moveHandleHeight / 2 - 0.5;\n      moveHandle_1.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'moveHandleStyle']).getItemStyle();\n      var moveZoneExpandSize = Math.min(size[1] / 2, Math.max(moveHandleHeight, 10));\n      actualMoveZone = displayables.moveZone = new graphic.Rect({\n        invisible: true,\n        shape: {\n          y: size[1] - moveZoneExpandSize,\n          height: moveHandleHeight + moveZoneExpandSize\n        }\n      });\n      actualMoveZone.on('mouseover', function () {\n        api.enterEmphasis(moveHandle_1);\n      }).on('mouseout', function () {\n        api.leaveEmphasis(moveHandle_1);\n      });\n      sliderGroup.add(moveHandle_1);\n      sliderGroup.add(moveHandleIcon);\n      sliderGroup.add(actualMoveZone);\n    }\n\n    actualMoveZone.attr({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false)\n    });\n  };\n\n  SliderZoomView.prototype._resetInterval = function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  };\n\n  SliderZoomView.prototype._updateInterval = function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  };\n\n  SliderZoomView.prototype._updateView = function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scaleX: handleHeight / 2,\n        scaleY: handleHeight / 2,\n        // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.\n        // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.\n        x: handleEnds[handleIndex] + (handleIndex ? -1 : 1),\n        y: size[1] / 2 - handleHeight / 2\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n    var viewExtent = {\n      x: handleInterval[0],\n      width: handleInterval[1] - handleInterval[0]\n    }; // Move handle\n\n    if (displaybles.moveHandle) {\n      displaybles.moveHandle.setShape(viewExtent);\n      displaybles.moveZone.setShape(viewExtent); // Force update path on the invisible object\n\n      displaybles.moveZone.getBoundingRect();\n      displaybles.moveHandleIcon && displaybles.moveHandleIcon.attr('x', viewExtent.x + viewExtent.width / 2);\n    } // update clip path of shadow.\n\n\n    var dataShadowSegs = displaybles.dataShadowSegs;\n    var segIntervals = [0, handleInterval[0], handleInterval[1], size[0]];\n\n    for (var i = 0; i < dataShadowSegs.length; i++) {\n      var segGroup = dataShadowSegs[i];\n      var clipPath = segGroup.getClipPath();\n\n      if (!clipPath) {\n        clipPath = new graphic.Rect();\n        segGroup.setClipPath(clipPath);\n      }\n\n      clipPath.setShape({\n        x: segIntervals[i],\n        y: 0,\n        width: segIntervals[i + 1] - segIntervals[i],\n        height: size[1]\n      });\n    }\n\n    this._updateDataInfo(nonRealtime);\n  };\n\n  SliderZoomView.prototype._updateDataInfo = function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        verticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        align: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  };\n\n  SliderZoomView.prototype._formatLabel = function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel({\n      value: Math.round(value)\n    }) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return isFunction(labelFormatter) ? labelFormatter(value, valueStr) : isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  };\n  /**\n   * @param showOrHide true: show, false: hide\n   */\n\n\n  SliderZoomView.prototype._showDataInfo = function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var displayables = this._displayables;\n    var handleLabels = displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide); // Highlight move handle\n\n    displayables.moveHandle && this.api[showOrHide ? 'enterEmphasis' : 'leaveEmphasis'](displayables.moveHandle, 1);\n  };\n\n  SliderZoomView.prototype._onDragMove = function (handleIndex, dx, dy, event) {\n    this._dragging = true; // For mobile device, prevent screen slider on the button.\n\n    eventTool.stop(event.event); // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.sliderGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction(true);\n  };\n\n  SliderZoomView.prototype._onDragEnd = function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onClickPanel = function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.sliderGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onBrushStart = function (e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n    this._brushStart = new graphic.Point(x, y);\n    this._brushing = true;\n    this._brushStartTime = +new Date(); // this._updateBrushRect(x, y);\n  };\n\n  SliderZoomView.prototype._onBrushEnd = function (e) {\n    if (!this._brushing) {\n      return;\n    }\n\n    var brushRect = this._displayables.brushRect;\n    this._brushing = false;\n\n    if (!brushRect) {\n      return;\n    }\n\n    brushRect.attr('ignore', true);\n    var brushShape = brushRect.shape;\n    var brushEndTime = +new Date(); // console.log(brushEndTime - this._brushStartTime);\n\n    if (brushEndTime - this._brushStartTime < 200 && Math.abs(brushShape.width) < 5) {\n      // Will treat it as a click\n      return;\n    }\n\n    var viewExtend = this._getViewExtent();\n\n    var percentExtent = [0, 100];\n    this._range = asc([linearMap(brushShape.x, viewExtend, percentExtent, true), linearMap(brushShape.x + brushShape.width, viewExtend, percentExtent, true)]);\n    this._handleEnds = [brushShape.x, brushShape.x + brushShape.width];\n\n    this._updateView();\n\n    this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onBrush = function (e) {\n    if (this._brushing) {\n      // For mobile device, prevent screen slider on the button.\n      eventTool.stop(e.event);\n\n      this._updateBrushRect(e.offsetX, e.offsetY);\n    }\n  };\n\n  SliderZoomView.prototype._updateBrushRect = function (mouseX, mouseY) {\n    var displayables = this._displayables;\n    var dataZoomModel = this.dataZoomModel;\n    var brushRect = displayables.brushRect;\n\n    if (!brushRect) {\n      brushRect = displayables.brushRect = new Rect({\n        silent: true,\n        style: dataZoomModel.getModel('brushStyle').getItemStyle()\n      });\n      displayables.sliderGroup.add(brushRect);\n    }\n\n    brushRect.attr('ignore', false);\n    var brushStart = this._brushStart;\n    var sliderGroup = this._displayables.sliderGroup;\n    var endPoint = sliderGroup.transformCoordToLocal(mouseX, mouseY);\n    var startPoint = sliderGroup.transformCoordToLocal(brushStart.x, brushStart.y);\n    var size = this._size;\n    endPoint[0] = Math.max(Math.min(size[0], endPoint[0]), 0);\n    brushRect.setShape({\n      x: startPoint[0],\n      y: 0,\n      width: endPoint[0] - startPoint[0],\n      height: size[1]\n    });\n  };\n  /**\n   * This action will be throttled.\n   */\n\n\n  SliderZoomView.prototype._dispatchZoomAction = function (realtime) {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      animation: realtime ? REALTIME_ANIMATION_CONFIG : null,\n      start: range[0],\n      end: range[1]\n    });\n  };\n\n  SliderZoomView.prototype._findCoordRect = function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    var coordSysInfoList = collectReferCoordSysModelInfo(this.dataZoomModel).infoList;\n\n    if (!rect && coordSysInfoList.length) {\n      var coordSys = coordSysInfoList[0].model.coordinateSystem;\n      rect = coordSys.getRect && coordSys.getRect();\n    }\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  };\n\n  SliderZoomView.type = 'dataZoom.slider';\n  return SliderZoomView;\n}(DataZoomView);\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nexport default SliderZoomView;"],"names":["Rect","graphic","HORIZONTAL","VERTICAL","SHOW_DATA_SHADOW_SERIES_TYPE","REALTIME_ANIMATION_CONFIG","easing","duration","delay","SliderZoomView","_super","_this","apply","this","arguments","type","_displayables","__extends","prototype","init","ecModel","api","_onBrush","bind","_onBrushEnd","render","dataZoomModel","payload","throttle","get","_orient","getOrient","noTarget","_clear","group","removeAll","from","uid","_buildView","_updateView","dispose","zr","getZr","off","thisGroup","_brushing","brushRect","_resetLocation","_resetInterval","barGroup","sliderGroup","_renderBackground","_renderHandle","_renderDataShadow","add","_positionGroup","moveHandleSize","coordRect","_findCoordRect","ecSize","width","getWidth","height","getHeight","positionInfo","right","x","top","y","layoutParams","layout","option","each","name","layoutRect","_location","_size","reverse","location","orient","targetAxisModel","getFirstTargetAxisModel","inverse","otherAxisInverse","_dataShadowInfo","attr","scaleY","scaleX","rotation","Math","PI","rect","getBoundingRect","markRedraw","_getViewExtent","size","brushSelect","silent","shape","style","fill","z2","clickPanel","onclick","_onClickPanel","on","_onBrushStart","cursor","info","_prepareDataShadowInfo","dataShadowSegs","oldSize","_shadowSize","seriesModel","series","data","getRawData","candlestickDim","getShadowDim","otherDim","getDimensionInfo","polygonPts","_shadowPolygonPts","polylinePts","_shadowPolylinePts","_shadowData","_shadowDim","otherDataExtent_1","getDataExtent","otherOffset","lastIsEmpty_1","otherShadowExtent_1","thisShadowExtent","areaPoints_1","linePoints_1","step_1","count","thisCoord_1","stride_1","round","value","index","isEmpty","isNaN","otherCoord","linearMap","push","length","i","createDataShadowGroup","isSelectedArea","model","getModel","polygon","points","segmentIgnoreThreshold","getAreaStyle","polyline","getLineStyle","showDataShadow","result","eachTargetAxis","axisDim","axisIndex","seriesModels","getAxisProxy","getTargetSeriesModels","indexOf","thisAxis","getComponent","getAxisMainType","axis","radius","angle","coordSys","coordinateSystem","getOtherAxis","getData","mapDimension","thisDim","displayables","handles","handleLabels","borderRadius","filler","textConfig","position","subPixelOptimize","r","stroke","lineWidth","handleIndex","iconStr","symbolBuildProxies","path","createSymbol","getCursor","draggable","drift","_onDragMove","ondragend","_onDragEnd","onmouseover","_showDataInfo","onmouseout","bRect","handleSize","_handleHeight","parsePercent","_handleWidth","setStyle","getItemStyle","strokeNoScale","rectHover","ensureState","enableHoverEmphasis","handleColor","textStyleModel","invisible","createTextStyle","text","verticalAlign","align","getTextColor","font","getFont","actualMoveZone","moveHandleHeight","moveHandle_1","moveHandle","iconSize","moveHandleIcon","moveZoneExpandSize","min","max","moveZone","enterEmphasis","leaveEmphasis","ondragstart","range","_range","getPercentRange","viewExtent","_handleEnds","_updateInterval","delta","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","sliderMove","minSpan","maxSpan","lastRange","asc","nonRealtime","displaybles","handleInterval","slice","handle","handleHeight","setShape","segIntervals","segGroup","clipPath","getClipPath","setClipPath","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","start","end","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","setLabel","barTransform","parent","direction","offset","textPoint","call","labelFormatter","labelPrecision","getPixelPrecision","valueStr","scale","getLabel","toFixed","isFunction","isString","replace","showOrHide","_dragging","dx","dy","event","eventTool","getLocalTransform","vertex","changed","realtime","_dispatchZoomAction","e","localPoint","transformCoordToLocal","offsetX","offsetY","center","_brushStart","_brushStartTime","Date","brushShape","abs","_updateBrushRect","mouseX","mouseY","brushStart","endPoint","startPoint","dispatchAction","dataZoomId","id","animation","coordSysInfoList","collectReferCoordSysModelInfo","infoList","getRect","DataZoomView"],"sourceRoot":""}