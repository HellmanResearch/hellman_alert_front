{"version":3,"file":"static/js/5727.bb3308ea.js","mappings":"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","sources":["../node_modules/echarts/lib/util/decal.js","../node_modules/echarts/lib/util/event.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport WeakMap from 'zrender/lib/core/WeakMap.js';\nimport LRU from 'zrender/lib/core/LRU.js';\nimport { defaults, map, isArray, isString, isNumber } from 'zrender/lib/core/util.js';\nimport { getLeastCommonMultiple } from './number.js';\nimport { createSymbol } from './symbol.js';\nimport { brushSingle } from 'zrender/lib/canvas/graphic.js';\nimport { platformApi } from 'zrender/lib/core/platform.js';\nvar decalMap = new WeakMap();\nvar decalCache = new LRU(100);\nvar decalKeys = ['symbol', 'symbolSize', 'symbolKeepAspect', 'color', 'backgroundColor', 'dashArrayX', 'dashArrayY', 'maxTileWidth', 'maxTileHeight'];\n/**\n * Create or update pattern image from decal options\n *\n * @param {InnerDecalObject | 'none'} decalObject decal options, 'none' if no decal\n * @return {Pattern} pattern with generated image, null if no decal\n */\n\nexport function createOrUpdatePatternFromDecal(decalObject, api) {\n  if (decalObject === 'none') {\n    return null;\n  }\n\n  var dpr = api.getDevicePixelRatio();\n  var zr = api.getZr();\n  var isSVG = zr.painter.type === 'svg';\n\n  if (decalObject.dirty) {\n    decalMap[\"delete\"](decalObject);\n  }\n\n  var oldPattern = decalMap.get(decalObject);\n\n  if (oldPattern) {\n    return oldPattern;\n  }\n\n  var decalOpt = defaults(decalObject, {\n    symbol: 'rect',\n    symbolSize: 1,\n    symbolKeepAspect: true,\n    color: 'rgba(0, 0, 0, 0.2)',\n    backgroundColor: null,\n    dashArrayX: 5,\n    dashArrayY: 5,\n    rotation: 0,\n    maxTileWidth: 512,\n    maxTileHeight: 512\n  });\n\n  if (decalOpt.backgroundColor === 'none') {\n    decalOpt.backgroundColor = null;\n  }\n\n  var pattern = {\n    repeat: 'repeat'\n  };\n  setPatternnSource(pattern);\n  pattern.rotation = decalOpt.rotation;\n  pattern.scaleX = pattern.scaleY = isSVG ? 1 : 1 / dpr;\n  decalMap.set(decalObject, pattern);\n  decalObject.dirty = false;\n  return pattern;\n\n  function setPatternnSource(pattern) {\n    var keys = [dpr];\n    var isValidKey = true;\n\n    for (var i = 0; i < decalKeys.length; ++i) {\n      var value = decalOpt[decalKeys[i]];\n\n      if (value != null && !isArray(value) && !isString(value) && !isNumber(value) && typeof value !== 'boolean') {\n        isValidKey = false;\n        break;\n      }\n\n      keys.push(value);\n    }\n\n    var cacheKey;\n\n    if (isValidKey) {\n      cacheKey = keys.join(',') + (isSVG ? '-svg' : '');\n      var cache = decalCache.get(cacheKey);\n\n      if (cache) {\n        isSVG ? pattern.svgElement = cache : pattern.image = cache;\n      }\n    }\n\n    var dashArrayX = normalizeDashArrayX(decalOpt.dashArrayX);\n    var dashArrayY = normalizeDashArrayY(decalOpt.dashArrayY);\n    var symbolArray = normalizeSymbolArray(decalOpt.symbol);\n    var lineBlockLengthsX = getLineBlockLengthX(dashArrayX);\n    var lineBlockLengthY = getLineBlockLengthY(dashArrayY);\n    var canvas = !isSVG && platformApi.createCanvas();\n    var svgRoot = isSVG && {\n      tag: 'g',\n      attrs: {},\n      key: 'dcl',\n      children: []\n    };\n    var pSize = getPatternSize();\n    var ctx;\n\n    if (canvas) {\n      canvas.width = pSize.width * dpr;\n      canvas.height = pSize.height * dpr;\n      ctx = canvas.getContext('2d');\n    }\n\n    brushDecal();\n\n    if (isValidKey) {\n      decalCache.put(cacheKey, canvas || svgRoot);\n    }\n\n    pattern.image = canvas;\n    pattern.svgElement = svgRoot;\n    pattern.svgWidth = pSize.width;\n    pattern.svgHeight = pSize.height;\n    /**\n     * Get minumum length that can make a repeatable pattern.\n     *\n     * @return {Object} pattern width and height\n     */\n\n    function getPatternSize() {\n      /**\n       * For example, if dash is [[3, 2], [2, 1]] for X, it looks like\n       * |---  ---  ---  ---  --- ...\n       * |-- -- -- -- -- -- -- -- ...\n       * |---  ---  ---  ---  --- ...\n       * |-- -- -- -- -- -- -- -- ...\n       * So the minumum length of X is 15,\n       * which is the least common multiple of `3 + 2` and `2 + 1`\n       * |---  ---  ---  |---  --- ...\n       * |-- -- -- -- -- |-- -- -- ...\n       */\n      var width = 1;\n\n      for (var i = 0, xlen = lineBlockLengthsX.length; i < xlen; ++i) {\n        width = getLeastCommonMultiple(width, lineBlockLengthsX[i]);\n      }\n\n      var symbolRepeats = 1;\n\n      for (var i = 0, xlen = symbolArray.length; i < xlen; ++i) {\n        symbolRepeats = getLeastCommonMultiple(symbolRepeats, symbolArray[i].length);\n      }\n\n      width *= symbolRepeats;\n      var height = lineBlockLengthY * lineBlockLengthsX.length * symbolArray.length;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var warn = function (attrName) {\n          /* eslint-disable-next-line */\n          console.warn(\"Calculated decal size is greater than \" + attrName + \" due to decal option settings so \" + attrName + \" is used for the decal size. Please consider changing the decal option to make a smaller decal or set \" + attrName + \" to be larger to avoid incontinuity.\");\n        };\n\n        if (width > decalOpt.maxTileWidth) {\n          warn('maxTileWidth');\n        }\n\n        if (height > decalOpt.maxTileHeight) {\n          warn('maxTileHeight');\n        }\n      }\n\n      return {\n        width: Math.max(1, Math.min(width, decalOpt.maxTileWidth)),\n        height: Math.max(1, Math.min(height, decalOpt.maxTileHeight))\n      };\n    }\n\n    function brushDecal() {\n      if (ctx) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (decalOpt.backgroundColor) {\n          ctx.fillStyle = decalOpt.backgroundColor;\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n        }\n      }\n\n      var ySum = 0;\n\n      for (var i = 0; i < dashArrayY.length; ++i) {\n        ySum += dashArrayY[i];\n      }\n\n      if (ySum <= 0) {\n        // dashArrayY is 0, draw nothing\n        return;\n      }\n\n      var y = -lineBlockLengthY;\n      var yId = 0;\n      var yIdTotal = 0;\n      var xId0 = 0;\n\n      while (y < pSize.height) {\n        if (yId % 2 === 0) {\n          var symbolYId = yIdTotal / 2 % symbolArray.length;\n          var x = 0;\n          var xId1 = 0;\n          var xId1Total = 0;\n\n          while (x < pSize.width * 2) {\n            var xSum = 0;\n\n            for (var i = 0; i < dashArrayX[xId0].length; ++i) {\n              xSum += dashArrayX[xId0][i];\n            }\n\n            if (xSum <= 0) {\n              // Skip empty line\n              break;\n            } // E.g., [15, 5, 20, 5] draws only for 15 and 20\n\n\n            if (xId1 % 2 === 0) {\n              var size = (1 - decalOpt.symbolSize) * 0.5;\n              var left = x + dashArrayX[xId0][xId1] * size;\n              var top_1 = y + dashArrayY[yId] * size;\n              var width = dashArrayX[xId0][xId1] * decalOpt.symbolSize;\n              var height = dashArrayY[yId] * decalOpt.symbolSize;\n              var symbolXId = xId1Total / 2 % symbolArray[symbolYId].length;\n              brushSymbol(left, top_1, width, height, symbolArray[symbolYId][symbolXId]);\n            }\n\n            x += dashArrayX[xId0][xId1];\n            ++xId1Total;\n            ++xId1;\n\n            if (xId1 === dashArrayX[xId0].length) {\n              xId1 = 0;\n            }\n          }\n\n          ++xId0;\n\n          if (xId0 === dashArrayX.length) {\n            xId0 = 0;\n          }\n        }\n\n        y += dashArrayY[yId];\n        ++yIdTotal;\n        ++yId;\n\n        if (yId === dashArrayY.length) {\n          yId = 0;\n        }\n      }\n\n      function brushSymbol(x, y, width, height, symbolType) {\n        var scale = isSVG ? 1 : dpr;\n        var symbol = createSymbol(symbolType, x * scale, y * scale, width * scale, height * scale, decalOpt.color, decalOpt.symbolKeepAspect);\n\n        if (isSVG) {\n          var symbolVNode = zr.painter.renderOneToVNode(symbol);\n\n          if (symbolVNode) {\n            svgRoot.children.push(symbolVNode);\n          }\n        } else {\n          // Paint to canvas for all other renderers.\n          brushSingle(ctx, symbol);\n        }\n      }\n    }\n  }\n}\n/**\n * Convert symbol array into normalized array\n *\n * @param {string | (string | string[])[]} symbol symbol input\n * @return {string[][]} normolized symbol array\n */\n\nfunction normalizeSymbolArray(symbol) {\n  if (!symbol || symbol.length === 0) {\n    return [['rect']];\n  }\n\n  if (isString(symbol)) {\n    return [[symbol]];\n  }\n\n  var isAllString = true;\n\n  for (var i = 0; i < symbol.length; ++i) {\n    if (!isString(symbol[i])) {\n      isAllString = false;\n      break;\n    }\n  }\n\n  if (isAllString) {\n    return normalizeSymbolArray([symbol]);\n  }\n\n  var result = [];\n\n  for (var i = 0; i < symbol.length; ++i) {\n    if (isString(symbol[i])) {\n      result.push([symbol[i]]);\n    } else {\n      result.push(symbol[i]);\n    }\n  }\n\n  return result;\n}\n/**\n * Convert dash input into dashArray\n *\n * @param {DecalDashArrayX} dash dash input\n * @return {number[][]} normolized dash array\n */\n\n\nfunction normalizeDashArrayX(dash) {\n  if (!dash || dash.length === 0) {\n    return [[0, 0]];\n  }\n\n  if (isNumber(dash)) {\n    var dashValue = Math.ceil(dash);\n    return [[dashValue, dashValue]];\n  }\n  /**\n   * [20, 5] should be normalized into [[20, 5]],\n   * while [20, [5, 10]] should be normalized into [[20, 20], [5, 10]]\n   */\n\n\n  var isAllNumber = true;\n\n  for (var i = 0; i < dash.length; ++i) {\n    if (!isNumber(dash[i])) {\n      isAllNumber = false;\n      break;\n    }\n  }\n\n  if (isAllNumber) {\n    return normalizeDashArrayX([dash]);\n  }\n\n  var result = [];\n\n  for (var i = 0; i < dash.length; ++i) {\n    if (isNumber(dash[i])) {\n      var dashValue = Math.ceil(dash[i]);\n      result.push([dashValue, dashValue]);\n    } else {\n      var dashValue = map(dash[i], function (n) {\n        return Math.ceil(n);\n      });\n\n      if (dashValue.length % 2 === 1) {\n        // [4, 2, 1] means |----  -    -- |----  -    -- |\n        // so normalize it to be [4, 2, 1, 4, 2, 1]\n        result.push(dashValue.concat(dashValue));\n      } else {\n        result.push(dashValue);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * Convert dash input into dashArray\n *\n * @param {DecalDashArrayY} dash dash input\n * @return {number[]} normolized dash array\n */\n\n\nfunction normalizeDashArrayY(dash) {\n  if (!dash || typeof dash === 'object' && dash.length === 0) {\n    return [0, 0];\n  }\n\n  if (isNumber(dash)) {\n    var dashValue_1 = Math.ceil(dash);\n    return [dashValue_1, dashValue_1];\n  }\n\n  var dashValue = map(dash, function (n) {\n    return Math.ceil(n);\n  });\n  return dash.length % 2 ? dashValue.concat(dashValue) : dashValue;\n}\n/**\n * Get block length of each line. A block is the length of dash line and space.\n * For example, a line with [4, 1] has a dash line of 4 and a space of 1 after\n * that, so the block length of this line is 5.\n *\n * @param {number[][]} dash dash arrary of X or Y\n * @return {number[]} block length of each line\n */\n\n\nfunction getLineBlockLengthX(dash) {\n  return map(dash, function (line) {\n    return getLineBlockLengthY(line);\n  });\n}\n\nfunction getLineBlockLengthY(dash) {\n  var blockLength = 0;\n\n  for (var i = 0; i < dash.length; ++i) {\n    blockLength += dash[i];\n  }\n\n  if (dash.length % 2 === 1) {\n    // [4, 2, 1] means |----  -    -- |----  -    -- |\n    // So total length is (4 + 2 + 1) * 2\n    return blockLength * 2;\n  }\n\n  return blockLength;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport function findEventDispatcher(target, det, returnFirstMatch) {\n  var found;\n\n  while (target) {\n    if (det(target)) {\n      found = target;\n\n      if (returnFirstMatch) {\n        break;\n      }\n    }\n\n    target = target.__hostTarget || target.parent;\n  }\n\n  return found;\n}"],"names":["decalMap","WeakMap","decalCache","LRU","decalKeys","createOrUpdatePatternFromDecal","decalObject","api","dpr","getDevicePixelRatio","zr","getZr","isSVG","painter","type","dirty","oldPattern","get","decalOpt","defaults","symbol","symbolSize","symbolKeepAspect","color","backgroundColor","dashArrayX","dashArrayY","rotation","maxTileWidth","maxTileHeight","pattern","repeat","cacheKey","keys","isValidKey","i","length","value","isArray","isString","isNumber","push","join","cache","svgElement","image","ctx","dash","normalizeDashArrayX","dashValue_1","Math","ceil","dashValue","map","n","concat","normalizeDashArrayY","symbolArray","normalizeSymbolArray","lineBlockLengthsX","line","getLineBlockLengthY","lineBlockLengthY","canvas","platformApi","svgRoot","tag","attrs","key","children","pSize","width","xlen","getLeastCommonMultiple","symbolRepeats","height","max","min","getPatternSize","getContext","clearRect","fillStyle","fillRect","ySum","y","yId","yIdTotal","xId0","symbolYId","x","xId1","xId1Total","xSum","size","left","top_1","symbolXId","brushSymbol","symbolType","scale","createSymbol","symbolVNode","renderOneToVNode","brushSingle","brushDecal","put","svgWidth","svgHeight","setPatternnSource","scaleX","scaleY","set","isAllString","result","isAllNumber","blockLength","findEventDispatcher","target","det","returnFirstMatch","found","__hostTarget","parent"],"sourceRoot":""}