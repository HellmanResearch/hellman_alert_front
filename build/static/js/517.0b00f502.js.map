{"version":3,"file":"static/js/517.0b00f502.js","mappings":"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","sources":["../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/installLegendPlain.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/installLegendScroll.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","../node_modules/echarts/lib/component/legend/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function legendFilter(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// @ts-nocheck\nimport { curry, each } from 'zrender/lib/core/util.js';\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\n      legendModel[methodName]();\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\n    selected: selectedMap\n  } : {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n\nexport function installLegendAction(registers) {\n  /**\n   * @event legendToggleSelect\n   * @type {Object}\n   * @property {string} type 'legendToggleSelect'\n   * @property {string} [from]\n   * @property {string} name Series name or data item name\n   */\n  registers.registerAction('legendToggleSelect', 'legendselectchanged', curry(legendSelectActionHandler, 'toggleSelected'));\n  registers.registerAction('legendAllSelect', 'legendselectall', curry(legendSelectActionHandler, 'allSelect'));\n  registers.registerAction('legendInverseSelect', 'legendinverseselect', curry(legendSelectActionHandler, 'inverseSelect'));\n  /**\n   * @event legendSelect\n   * @type {Object}\n   * @property {string} type 'legendSelect'\n   * @property {string} name Series name or data item name\n   */\n\n  registers.registerAction('legendSelect', 'legendselected', curry(legendSelectActionHandler, 'select'));\n  /**\n   * @event legendUnSelect\n   * @type {Object}\n   * @property {string} type 'legendUnSelect'\n   * @property {string} name Series name or data item name\n   */\n\n  registers.registerAction('legendUnSelect', 'legendunselected', curry(legendSelectActionHandler, 'unSelect'));\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport LegendModel from './LegendModel.js';\nimport LegendView from './LegendView.js';\nimport legendFilter from './legendFilter.js';\nimport { installLegendAction } from './legendAction.js';\nexport function install(registers) {\n  registers.registerComponentModel(LegendModel);\n  registers.registerComponentView(LegendView);\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.SERIES_FILTER, legendFilter);\n  registers.registerSubTypeDefaulter('legend', function () {\n    return 'plain';\n  });\n  installLegendAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport LegendModel from './LegendModel.js';\nimport { mergeLayoutParam, getLayoutParams } from '../../util/layout.js';\nimport { inheritDefaultOption } from '../../util/component.js';\n\nvar ScrollableLegendModel =\n/** @class */\nfunction (_super) {\n  __extends(ScrollableLegendModel, _super);\n\n  function ScrollableLegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScrollableLegendModel.type;\n    return _this;\n  }\n  /**\n   * @param {number} scrollDataIndex\n   */\n\n\n  ScrollableLegendModel.prototype.setScrollDataIndex = function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  };\n\n  ScrollableLegendModel.prototype.init = function (option, parentModel, ecModel) {\n    var inputPositionParams = getLayoutParams(option);\n\n    _super.prototype.init.call(this, option, parentModel, ecModel);\n\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  };\n\n  ScrollableLegendModel.type = 'legend.scroll';\n  ScrollableLegendModel.defaultOption = inheritDefaultOption(LegendModel.defaultOption, {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    pageFormatter: '{current}/{total}',\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  });\n  return ScrollableLegendModel;\n}(LegendModel);\n\n; // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: !!ignoreSize\n  });\n}\n\nexport default ScrollableLegendModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\n\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport LegendView from './LegendView.js';\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\n\nvar ScrollableLegendView =\n/** @class */\nfunction (_super) {\n  __extends(ScrollableLegendView, _super);\n\n  function ScrollableLegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScrollableLegendView.type;\n    _this.newlineDisabled = true;\n    _this._currentIndex = 0;\n    return _this;\n  }\n\n  ScrollableLegendView.prototype.init = function () {\n    _super.prototype.init.call(this);\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n\n    this.group.add(this._controllerGroup = new Group());\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.resetInner = function () {\n    _super.prototype.resetInner.call(this);\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var self = this; // Render content items.\n\n    _super.prototype.renderInner.call(this, itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\n\n    var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\n    // e.g., '3/12345' should not overlap with the control arrow button.\n\n    var pageIconSize = legendModel.get('pageIconSize', true);\n    var pageIconSizeArr = zrUtil.isArray(pageIconSize) ? pageIconSize : [pageIconSize, pageIconSize];\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        // Placeholder to calculate a proper layout.\n        text: 'xx/xx',\n        fill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        verticalAlign: 'middle',\n        align: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(self._pageGo, self, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSizeArr[0] / 2,\n        y: -pageIconSizeArr[1] / 2,\n        width: pageIconSizeArr[0],\n        height: pageIconSizeArr[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx];\n    selector && layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n    'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n    var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n    var selectorRect = selectorGroup.getBoundingRect();\n    var selectorPos = [-selectorRect.x, -selectorRect.y];\n    var processMaxSize = zrUtil.clone(maxSize);\n    selector && (processMaxSize[wh] = maxSize[wh] - selectorRect[wh] - selectorButtonGap);\n\n    var mainRect = this._layoutContentAndController(legendModel, isFirstRender, processMaxSize, orientIdx, wh, hw, yx, xy);\n\n    if (selector) {\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += mainRect[wh] + selectorButtonGap;\n      } else {\n        var offset = selectorRect[wh] + selectorButtonGap;\n        selectorPos[orientIdx] -= offset;\n        mainRect[xy] -= offset;\n      }\n\n      mainRect[wh] += selectorRect[wh] + selectorButtonGap;\n      selectorPos[1 - orientIdx] += mainRect[yx] + mainRect[hw] / 2 - selectorRect[hw] / 2;\n      mainRect[hw] = Math.max(mainRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(mainRect[yx], selectorRect[yx] + selectorPos[1 - orientIdx]);\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      selectorGroup.markRedraw();\n    }\n\n    return mainRect;\n  };\n\n  ScrollableLegendView.prototype._layoutContentAndController = function (legendModel, isFirstRender, maxSize, orientIdx, wh, hw, yx, xy) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh]; // In case that the inner elements of contentGroup layout do not based on [0, 0]\n\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n    // If first rendering, `contentGroup.position` is [0, 0], which\n    // does not make sense and may cause unexepcted animation if adopted.\n\n    if (!isFirstRender) {\n      contentPos[orientIdx] = contentGroup[xy];\n    } // Layout container group based on 0.\n\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.setPosition(contentPos);\n    containerGroup.setPosition(containerPos);\n    controllerGroup.setPosition(controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as placeholders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      x: pageInfo.contentPosition[0],\n      y: pageInfo.contentPosition[1]\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird effect.\n    showController ? legendModel : null);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  };\n\n  ScrollableLegendView.prototype._pageGo = function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  };\n\n  ScrollableLegendView.prototype._updatePageInfoView = function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var key = name + 'DataIndex';\n      var canJump = pageInfo[key] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current == null ? '' : current + '').replace('{total}', total == null ? '' : total + '') : pageFormatter({\n      current: current,\n      total: total\n    }));\n  };\n  /**\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no previous page.\n   *  pageNextDataIndex: number, null when no next page.\n   * }\n   */\n\n\n  ScrollableLegendView.prototype._getPageInfo = function (legendModel) {\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\n\n    var children = contentGroup.children();\n    var targetItem = children[targetItemIndex];\n    var itemCount = children.length;\n    var pCount = !itemCount ? 0 : 1;\n    var result = {\n      contentPosition: [contentGroup.x, contentGroup.y],\n      pageCount: pCount,\n      pageIndex: pCount - 1,\n      pagePrevDataIndex: null,\n      pageNextDataIndex: null\n    };\n\n    if (!targetItem) {\n      return result;\n    }\n\n    var targetItemInfo = getItemInfo(targetItem);\n    result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\n    // (1) Always align based on the left/top most item.\n    // (2) It is user-friendly that the last item shown in the\n    // current window is shown at the begining of next window.\n    // Otherwise if half of the last item is cut by the window,\n    // it will have no chance to display entirely.\n    // (3) Consider that item size probably be different, we\n    // have calculate pageIndex by size rather than item index,\n    // and we can not get page index directly by division.\n    // (4) The window is to narrow to contain more than\n    // one item, we should make sure that the page can be fliped.\n\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // Half of the last item is out of the window.\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\n      // can be started at the current item or the last item.\n      currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\n        if (winEndItemInfo.i > winStartItemInfo.i) {\n          winStartItemInfo = winEndItemInfo;\n        } else {\n          // e.g., when page size is smaller than item size.\n          winStartItemInfo = currItemInfo;\n        }\n\n        if (winStartItemInfo) {\n          if (result.pageNextDataIndex == null) {\n            result.pageNextDataIndex = winStartItemInfo.i;\n          }\n\n          ++result.pageCount;\n        }\n      }\n\n      winEndItemInfo = currItemInfo;\n    }\n\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // If the the end item does not intersect with the window started\n      // from the current item, a page can be settled.\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\n      winStartItemInfo.i < winEndItemInfo.i) {\n        winEndItemInfo = winStartItemInfo;\n\n        if (result.pagePrevDataIndex == null) {\n          result.pagePrevDataIndex = winStartItemInfo.i;\n        }\n\n        ++result.pageCount;\n        ++result.pageIndex;\n      }\n\n      winStartItemInfo = currItemInfo;\n    }\n\n    return result;\n\n    function getItemInfo(el) {\n      if (el) {\n        var itemRect = el.getBoundingRect();\n        var start = itemRect[xy] + el[xy];\n        return {\n          s: start,\n          e: start + itemRect[wh],\n          i: el.__legendDataIndex\n        };\n      }\n    }\n\n    function intersect(itemInfo, winStart) {\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\n    }\n  };\n\n  ScrollableLegendView.prototype._findTargetItemIndex = function (targetDataIndex) {\n    if (!this._showController) {\n      return 0;\n    }\n\n    var index;\n    var contentGroup = this.getContentGroup();\n    var defaultIndex;\n    contentGroup.eachChild(function (child, idx) {\n      var legendDataIdx = child.__legendDataIndex; // FIXME\n      // If the given targetDataIndex (from model) is illegal,\n      // we use defaultIndex. But the index on the legend model and\n      // action payload is still illegal. That case will not be\n      // changed until some scenario requires.\n\n      if (defaultIndex == null && legendDataIdx != null) {\n        defaultIndex = idx;\n      }\n\n      if (legendDataIdx === targetDataIndex) {\n        index = idx;\n      }\n    });\n    return index != null ? index : defaultIndex;\n  };\n\n  ScrollableLegendView.type = 'legend.scroll';\n  return ScrollableLegendView;\n}(LegendView);\n\nexport default ScrollableLegendView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension.js';\nimport { install as installLegendPlain } from './installLegendPlain.js';\nimport ScrollableLegendModel from './ScrollableLegendModel.js';\nimport ScrollableLegendView from './ScrollableLegendView.js';\nimport installScrollableLegendAction from './scrollableLegendAction.js';\nexport function install(registers) {\n  use(installLegendPlain);\n  registers.registerComponentModel(ScrollableLegendModel);\n  registers.registerComponentView(ScrollableLegendView);\n  installScrollableLegendAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function installScrollableLegendAction(registers) {\n  /**\n   * @event legendScroll\n   * @type {Object}\n   * @property {string} type 'legendScroll'\n   * @property {string} scrollDataIndex\n   */\n  registers.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n    var scrollDataIndex = payload.scrollDataIndex;\n    scrollDataIndex != null && ecModel.eachComponent({\n      mainType: 'legend',\n      subType: 'scroll',\n      query: payload\n    }, function (legendModel) {\n      legendModel.setScrollDataIndex(scrollDataIndex);\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension.js';\nimport { install as installLegendPlain } from './installLegendPlain.js';\nimport { install as installLegendScroll } from './installLegendScroll.js';\nexport function install(registers) {\n  use(installLegendPlain);\n  use(installLegendScroll);\n}"],"names":["legendFilter","ecModel","legendModels","findComponents","mainType","length","filterSeries","series","i","isSelected","name","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","legendModel","legendData","getData","each","model","get","isItemSelected","hasOwnProperty","selected","install","registers","registerComponentModel","LegendModel","registerComponentView","LegendView","registerProcessor","PRIORITY","PROCESSOR","SERIES_FILTER","registerSubTypeDefaulter","registerAction","curry","installLegendAction","ScrollableLegendModel","_super","_this","apply","this","arguments","type","__extends","prototype","setScrollDataIndex","scrollDataIndex","option","init","parentModel","inputPositionParams","getLayoutParams","call","mergeAndNormalizeLayoutParams","mergeOption","defaultOption","inheritDefaultOption","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","color","animationDurationUpdate","target","raw","ignoreSize","getOrient","index","mergeLayoutParam","Group","graphic","WH","XY","ScrollableLegendView","newlineDisabled","_currentIndex","group","add","_containerGroup","getContentGroup","_controllerGroup","resetInner","removeAll","removeClipPath","__rectSize","renderInner","itemAlign","api","selector","orient","selectorPosition","self","controllerGroup","pageIconSizeArr","zrUtil","createPageButton","pageTextStyleModel","getModel","iconIdx","pageDataIndexName","icon","createIcon","onclick","_pageGo","x","y","width","height","style","text","fill","getTextColor","font","getFont","verticalAlign","align","silent","layoutInner","maxSize","isFirstRender","selectorGroup","getSelectorGroup","orientIdx","wh","xy","hw","yx","layoutUtil","selectorButtonGap","selectorRect","getBoundingRect","selectorPos","processMaxSize","mainRect","_layoutContentAndController","offset","Math","max","min","markRedraw","contentGroup","containerGroup","contentRect","controllerRect","showController","_showController","contentPos","containerPos","controllerPos","setPosition","clipShape","setClipPath","shape","eachChild","child","attr","invisible","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","dispatchAction","legendId","id","canJump","childOfName","setStyle","cursor","pageText","current","total","pageCount","replace","containerRectSize","targetItemIndex","_findTargetItemIndex","children","targetItem","itemCount","pCount","result","pagePrevDataIndex","pageNextDataIndex","targetItemInfo","getItemInfo","s","winStartItemInfo","winEndItemInfo","currItemInfo","e","intersect","el","itemRect","start","__legendDataIndex","itemInfo","winStart","targetDataIndex","idx","legendDataIdx","defaultIndex","use","installLegendPlain","subType","query","installScrollableLegendAction","installLegendScroll"],"sourceRoot":""}