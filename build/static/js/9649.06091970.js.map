{"version":3,"file":"static/js/9649.06091970.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/treemap/Breadcrumb.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport * as layout from '../../util/layout.js';\nimport { wrapTreePathInfo } from '../helper/treeHelper.js';\nimport { curry, defaults } from 'zrender/lib/core/util.js';\nimport { convertOptionIdName } from '../../util/model.js';\nimport { toggleHoverEmphasis, Z2_EMPHASIS_LIFT } from '../../util/states.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nvar Breadcrumb =\n/** @class */\nfunction () {\n  function Breadcrumb(containerGroup) {\n    this.group = new graphic.Group();\n    containerGroup.add(this.group);\n  }\n\n  Breadcrumb.prototype.render = function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle');\n    var emphasisModel = model.getModel('emphasis');\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var emphasisTextStyleModel = emphasisModel.getModel(['itemStyle', 'textStyle']);\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, emphasisModel, textStyleModel, emphasisTextStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  };\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n\n\n  Breadcrumb.prototype._prepare = function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = convertOptionIdName(node.getModel().get('name'), '');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Breadcrumb.prototype._renderContent = function (seriesModel, layoutParam, normalStyleModel, emphasisModel, textStyleModel, emphasisTextStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get(['breadcrumb', 'height']);\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n    var emphasisItemStyle = emphasisModel.getModel('itemStyle').getItemStyle();\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel'\n        }),\n        textContent: new graphic.Text({\n          style: createTextStyle(textStyleModel, {\n            text: text\n          })\n        }),\n        textConfig: {\n          position: 'inside'\n        },\n        z2: Z2_EMPHASIS_LIFT * 1e4,\n        onclick: curry(onSelect, itemNode)\n      });\n      el.disableLabelAnimation = true;\n      el.getTextContent().ensureState('emphasis').style = createTextStyle(emphasisTextStyleModel, {\n        text: text\n      });\n      el.ensureState('emphasis').style = emphasisItemStyle;\n      toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  };\n\n  Breadcrumb.prototype.remove = function () {\n    this.group.removeAll();\n  };\n\n  return Breadcrumb;\n}();\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  getECData(el).eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    componentIndex: seriesModel.componentIndex,\n    seriesIndex: seriesModel.seriesIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nexport default Breadcrumb;"],"names":["Breadcrumb","containerGroup","this","group","graphic","add","prototype","render","seriesModel","api","targetNode","onSelect","model","getModel","thisGroup","removeAll","get","normalStyleModel","emphasisModel","textStyleModel","emphasisTextStyleModel","layoutParam","pos","left","right","top","bottom","box","width","getWidth","height","getHeight","emptyItemWidth","totalWidth","renderList","_prepare","_renderContent","layout","node","parentNode","text","convertOptionIdName","textRect","getTextRect","itemWidth","Math","max","TEXT_PADDING","push","lastX","availableSize","emphasisItemStyle","getItemStyle","i","length","item","itemNode","el","shape","points","makeItemPoints","style","defaults","lineJoin","textContent","createTextStyle","textConfig","position","z2","Z2_EMPHASIS_LIFT","onclick","curry","disableLabelAnimation","getTextContent","ensureState","toggleHoverEmphasis","packEventData","remove","x","y","itemHeight","head","tail","splice","getECData","eventData","componentType","componentSubType","componentIndex","seriesIndex","seriesName","name","seriesType","selfType","nodeData","dataIndex","treePathInfo","wrapTreePathInfo"],"sourceRoot":""}