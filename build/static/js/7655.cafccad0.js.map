{"version":3,"file":"static/js/7655.cafccad0.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/map/mapDataStatistic.js","../node_modules/echarts/lib/chart/map/mapSymbolLayout.js","../node_modules/echarts/lib/chart/parallel/ParallelView.js","../node_modules/echarts/lib/chart/parallel/ParallelSeries.js","../node_modules/echarts/lib/chart/parallel/parallelVisual.js","../node_modules/echarts/lib/chart/parallel/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js'; // FIXME 公用？\n\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nexport default function mapDataStatistic(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport default function mapSymbolLayout(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.getCenter());\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendIcon (which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { numericToNumber } from '../../util/number.js';\nimport { eqNaN } from 'zrender/lib/core/util.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nvar DEFAULT_SMOOTH = 0.3;\n\nvar ParallelView =\n/** @class */\nfunction (_super) {\n  __extends(ParallelView, _super);\n\n  function ParallelView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelView.type;\n    _this._dataGroup = new graphic.Group();\n    _this._initialized = false;\n    return _this;\n  }\n\n  ParallelView.prototype.init = function () {\n    this.group.add(this._dataGroup);\n  };\n  /**\n   * @override\n   */\n\n\n  ParallelView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    // Clear previously rendered progressive elements.\n    this._progressiveEls = null;\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, seriesModel, newDataIndex);\n      saveOldStyle(line);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  };\n\n  ParallelView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  };\n\n  ParallelView.prototype.incrementalRender = function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    var progressiveEls = this._progressiveEls = [];\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n      progressiveEls.push(line);\n    }\n  };\n\n  ParallelView.prototype.remove = function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  };\n\n  ParallelView.type = 'parallel';\n  return ParallelView;\n}(ChartView);\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    // silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  smooth = numericToNumber(smooth);\n  eqNaN(smooth) && (smooth = 0);\n  return {\n    smooth: smooth\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.fill = null;\n  el.setShape('smooth', seriesScope.smooth);\n  var itemModel = data.getItemModel(dataIndex);\n  var emphasisModel = itemModel.getModel('emphasis');\n  setStatesStylesFromModel(el, itemModel, 'lineStyle');\n  toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n} // function simpleDiff(oldData, newData, dimensions) {\n//     let oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     let dimLen = dimensions.length;\n//     for (let i = 0; i < oldLen; i++) {\n//         for (let j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME put in common util?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nexport default ParallelView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { each, bind } from 'zrender/lib/core/util.js';\nimport SeriesModel from '../../model/Series.js';\nimport createSeriesData from '../helper/createSeriesData.js';\n\nvar ParallelSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(ParallelSeriesModel, _super);\n\n  function ParallelSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelSeriesModel.type;\n    _this.visualStyleAccessPath = 'lineStyle';\n    _this.visualDrawType = 'stroke';\n    return _this;\n  }\n\n  ParallelSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: bind(makeDefaultEncode, null, this)\n    });\n  };\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @return Raw indices\n   */\n\n\n  ParallelSeriesModel.prototype.getRawIndicesByActiveState = function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  };\n\n  ParallelSeriesModel.type = 'series.parallel';\n  ParallelSeriesModel.dependencies = ['parallel'];\n  ParallelSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    animationEasing: 'linear'\n  };\n  return ParallelSeriesModel;\n}(SeriesModel);\n\nfunction makeDefaultEncode(seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = {};\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine[axisDim] = dataDimIndex;\n  });\n  return encodeDefine;\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nexport default ParallelSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'opacity'];\nvar parallelVisual = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var opacityMap = {\n      normal: seriesModel.get(['lineStyle', 'opacity']),\n      active: seriesModel.get('activeOpacity'),\n      inactive: seriesModel.get('inactiveOpacity')\n    };\n    return {\n      progress: function (params, data) {\n        coordSys.eachActiveState(data, function (activeState, dataIndex) {\n          var opacity = opacityMap[activeState];\n\n          if (activeState === 'normal' && data.hasItemOption) {\n            var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n            itemOpacity != null && (opacity = itemOpacity);\n          }\n\n          var existsStyle = data.ensureUniqueItemVisual(dataIndex, 'style');\n          existsStyle.opacity = opacity;\n        }, params.start, params.end);\n      }\n    };\n  }\n};\nexport default parallelVisual;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension.js';\nimport ParallelView from './ParallelView.js';\nimport ParallelSeriesModel from './ParallelSeries.js';\nimport parallelVisual from './parallelVisual.js';\nimport { install as installParallelComponent } from '../../component/parallel/install.js';\nexport function install(registers) {\n  use(installParallelComponent);\n  registers.registerChartView(ParallelView);\n  registers.registerSeriesModel(ParallelSeriesModel);\n  registers.registerVisual(registers.PRIORITY.VISUAL.BRUSH, parallelVisual);\n}"],"names":["mapDataStatistic","ecModel","seriesGroups","eachSeriesByType","seriesModel","hostGeoModel","getHostGeoModel","key","id","getMapType","push","zrUtil","seriesList","data","datas","statisticType","dataNameMap","each","mapDimension","value","idx","mapKey","getName","isNaN","map","sum","min","Infinity","max","len","length","i","Math","NaN","dataStatistics","getData","get","originalData","seriesGroup","needsDrawMap","setData","cloneShallow","mainSeries","mapSymbolLayout","processedMapType","mapSeries","mapType","mapSymbolOffsets","subMapSeries","geo","coordinateSystem","getComponent","name","region","getRegion","offset","point","dataToPoint","getCenter","setItemLayout","layout","getItemLayout","showLabel","ParallelView","_super","_this","apply","this","arguments","type","_dataGroup","graphic","_initialized","__extends","prototype","init","group","add","render","api","payload","_progressiveEls","dataGroup","oldData","_data","coordSys","dimensions","seriesScope","makeSeriesScope","diff","newDataIndex","updateElCommon","addEl","update","oldDataIndex","line","getItemGraphicEl","points","createLinePoints","setItemGraphicEl","shape","saveOldStyle","remove","execute","clipPath","cb","parallelModel","model","rect","getRect","rectEl","x","y","width","height","dim","setShape","createGridClipShape","setTimeout","removeClipPath","setClipPath","incrementalPrepareRender","removeAll","incrementalRender","taskParams","progressiveEls","dataIndex","start","end","incremental","ChartView","val","dimName","getAxis","z2","smooth","numericToNumber","eqNaN","el","useStyle","getItemVisual","style","fill","itemModel","getItemModel","emphasisModel","getModel","setStatesStylesFromModel","toggleHoverEmphasis","ParallelSeriesModel","visualStyleAccessPath","visualDrawType","getInitialData","option","createSeriesData","useEncodeDefaulter","bind","makeDefaultEncode","getRawIndicesByActiveState","activeState","indices","eachActiveState","theActiveState","getRawIndex","dependencies","defaultOption","z","parallelIndex","label","show","inactiveOpacity","activeOpacity","lineStyle","opacity","emphasis","progressive","animationEasing","SeriesModel","encodeDefine","axisDim","dataDimIndex","replace","opacityAccessPath","seriesType","reset","opacityMap","normal","active","inactive","progress","params","hasItemOption","itemOpacity","ensureUniqueItemVisual","install","registers","use","installParallelComponent","registerChartView","registerSeriesModel","registerVisual","PRIORITY","VISUAL","BRUSH","parallelVisual"],"sourceRoot":""}