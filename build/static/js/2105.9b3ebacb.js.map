{"version":3,"file":"static/js/2105.9b3ebacb.js","mappings":"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","sources":["../node_modules/echarts/lib/coord/scaleRawExtentInfo.js","../node_modules/echarts/lib/coord/single/AxisModel.js","../node_modules/echarts/lib/coord/single/prepareCustom.js","../node_modules/echarts/lib/coord/single/singleAxisHelper.js","../node_modules/echarts/lib/coord/single/SingleAxis.js","../node_modules/echarts/lib/coord/single/Single.js","../node_modules/echarts/lib/coord/single/singleCreator.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { assert, isArray, eqNaN, isFunction } from 'zrender/lib/core/util.js';\nimport { parsePercent } from 'zrender/lib/contain/text.js';\n\nvar ScaleRawExtentInfo =\n/** @class */\nfunction () {\n  function ScaleRawExtentInfo(scale, model, // Usually: data extent from all series on this axis.\n  originalExtent) {\n    this._prepareParams(scale, model, originalExtent);\n  }\n  /**\n   * Parameters depending on ouside (like model, user callback)\n   * are prepared and fixed here.\n   */\n\n\n  ScaleRawExtentInfo.prototype._prepareParams = function (scale, model, // Usually: data extent from all series on this axis.\n  dataExtent) {\n    if (dataExtent[1] < dataExtent[0]) {\n      dataExtent = [NaN, NaN];\n    }\n\n    this._dataMin = dataExtent[0];\n    this._dataMax = dataExtent[1];\n    var isOrdinal = this._isOrdinal = scale.type === 'ordinal';\n    this._needCrossZero = scale.type === 'interval' && model.getNeedCrossZero && model.getNeedCrossZero();\n    var modelMinRaw = this._modelMinRaw = model.get('min', true);\n\n    if (isFunction(modelMinRaw)) {\n      // This callback alway provide users the full data extent (before data filtered).\n      this._modelMinNum = parseAxisModelMinMax(scale, modelMinRaw({\n        min: dataExtent[0],\n        max: dataExtent[1]\n      }));\n    } else if (modelMinRaw !== 'dataMin') {\n      this._modelMinNum = parseAxisModelMinMax(scale, modelMinRaw);\n    }\n\n    var modelMaxRaw = this._modelMaxRaw = model.get('max', true);\n\n    if (isFunction(modelMaxRaw)) {\n      // This callback alway provide users the full data extent (before data filtered).\n      this._modelMaxNum = parseAxisModelMinMax(scale, modelMaxRaw({\n        min: dataExtent[0],\n        max: dataExtent[1]\n      }));\n    } else if (modelMaxRaw !== 'dataMax') {\n      this._modelMaxNum = parseAxisModelMinMax(scale, modelMaxRaw);\n    }\n\n    if (isOrdinal) {\n      // FIXME: there is a flaw here: if there is no \"block\" data processor like `dataZoom`,\n      // and progressive rendering is using, here the category result might just only contain\n      // the processed chunk rather than the entire result.\n      this._axisDataLen = model.getCategories().length;\n    } else {\n      var boundaryGap = model.get('boundaryGap');\n      var boundaryGapArr = isArray(boundaryGap) ? boundaryGap : [boundaryGap || 0, boundaryGap || 0];\n\n      if (typeof boundaryGapArr[0] === 'boolean' || typeof boundaryGapArr[1] === 'boolean') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('Boolean type for boundaryGap is only ' + 'allowed for ordinal axis. Please use string in ' + 'percentage instead, e.g., \"20%\". Currently, ' + 'boundaryGap is set to be 0.');\n        }\n\n        this._boundaryGapInner = [0, 0];\n      } else {\n        this._boundaryGapInner = [parsePercent(boundaryGapArr[0], 1), parsePercent(boundaryGapArr[1], 1)];\n      }\n    }\n  };\n  /**\n   * Calculate extent by prepared parameters.\n   * This method has no external dependency and can be called duplicatedly,\n   * getting the same result.\n   * If parameters changed, should call this method to recalcuate.\n   */\n\n\n  ScaleRawExtentInfo.prototype.calculate = function () {\n    // Notice: When min/max is not set (that is, when there are null/undefined,\n    // which is the most common case), these cases should be ensured:\n    // (1) For 'ordinal', show all axis.data.\n    // (2) For others:\n    //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n    //      disabled).\n    //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n    //      be the result that originalExtent enlarged by boundaryGap.\n    // (3) If no data, it should be ensured that `scale.setBlank` is set.\n    var isOrdinal = this._isOrdinal;\n    var dataMin = this._dataMin;\n    var dataMax = this._dataMax;\n    var axisDataLen = this._axisDataLen;\n    var boundaryGapInner = this._boundaryGapInner;\n    var span = !isOrdinal ? dataMax - dataMin || Math.abs(dataMin) : null; // Currently if a `'value'` axis model min is specified as 'dataMin'/'dataMax',\n    // `boundaryGap` will not be used. It's the different from specifying as `null`/`undefined`.\n\n    var min = this._modelMinRaw === 'dataMin' ? dataMin : this._modelMinNum;\n    var max = this._modelMaxRaw === 'dataMax' ? dataMax : this._modelMaxNum; // If `_modelMinNum`/`_modelMaxNum` is `null`/`undefined`, should not be fixed.\n\n    var minFixed = min != null;\n    var maxFixed = max != null;\n\n    if (min == null) {\n      min = isOrdinal ? axisDataLen ? 0 : NaN : dataMin - boundaryGapInner[0] * span;\n    }\n\n    if (max == null) {\n      max = isOrdinal ? axisDataLen ? axisDataLen - 1 : NaN : dataMax + boundaryGapInner[1] * span;\n    }\n\n    (min == null || !isFinite(min)) && (min = NaN);\n    (max == null || !isFinite(max)) && (max = NaN);\n    var isBlank = eqNaN(min) || eqNaN(max) || isOrdinal && !axisDataLen; // If data extent modified, need to recalculated to ensure cross zero.\n\n    if (this._needCrossZero) {\n      // Axis is over zero and min is not set\n      if (min > 0 && max > 0 && !minFixed) {\n        min = 0; // minFixed = true;\n      } // Axis is under zero and max is not set\n\n\n      if (min < 0 && max < 0 && !maxFixed) {\n        max = 0; // maxFixed = true;\n      } // PENDING:\n      // When `needCrossZero` and all data is positive/negative, should it be ensured\n      // that the results processed by boundaryGap are positive/negative?\n      // If so, here `minFixed`/`maxFixed` need to be set.\n\n    }\n\n    var determinedMin = this._determinedMin;\n    var determinedMax = this._determinedMax;\n\n    if (determinedMin != null) {\n      min = determinedMin;\n      minFixed = true;\n    }\n\n    if (determinedMax != null) {\n      max = determinedMax;\n      maxFixed = true;\n    } // Ensure min/max be finite number or NaN here. (not to be null/undefined)\n    // `NaN` means min/max axis is blank.\n\n\n    return {\n      min: min,\n      max: max,\n      minFixed: minFixed,\n      maxFixed: maxFixed,\n      isBlank: isBlank\n    };\n  };\n\n  ScaleRawExtentInfo.prototype.modifyDataMinMax = function (minMaxName, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this.frozen);\n    }\n\n    this[DATA_MIN_MAX_ATTR[minMaxName]] = val;\n  };\n\n  ScaleRawExtentInfo.prototype.setDeterminedMinMax = function (minMaxName, val) {\n    var attr = DETERMINED_MIN_MAX_ATTR[minMaxName];\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this.frozen // Earse them usually means logic flaw.\n      && this[attr] == null);\n    }\n\n    this[attr] = val;\n  };\n\n  ScaleRawExtentInfo.prototype.freeze = function () {\n    // @ts-ignore\n    this.frozen = true;\n  };\n\n  return ScaleRawExtentInfo;\n}();\n\nexport { ScaleRawExtentInfo };\nvar DETERMINED_MIN_MAX_ATTR = {\n  min: '_determinedMin',\n  max: '_determinedMax'\n};\nvar DATA_MIN_MAX_ATTR = {\n  min: '_dataMin',\n  max: '_dataMax'\n};\n/**\n * Get scale min max and related info only depends on model settings.\n * This method can be called after coordinate system created.\n * For example, in data processing stage.\n *\n * Scale extent info probably be required multiple times during a workflow.\n * For example:\n * (1) `dataZoom` depends it to get the axis extent in \"100%\" state.\n * (2) `processor/extentCalculator` depends it to make sure whether axis extent is specified.\n * (3) `coordSys.update` use it to finally decide the scale extent.\n * But the callback of `min`/`max` should not be called multiple times.\n * The code below should not be implemented repeatedly either.\n * So we cache the result in the scale instance, which will be recreated at the begining\n * of the workflow (because `scale` instance will be recreated each round of the workflow).\n */\n\nexport function ensureScaleRawExtentInfo(scale, model, // Usually: data extent from all series on this axis.\noriginalExtent) {\n  // Do not permit to recreate.\n  var rawExtentInfo = scale.rawExtentInfo;\n\n  if (rawExtentInfo) {\n    return rawExtentInfo;\n  }\n\n  rawExtentInfo = new ScaleRawExtentInfo(scale, model, originalExtent); // @ts-ignore\n\n  scale.rawExtentInfo = rawExtentInfo;\n  return rawExtentInfo;\n}\nexport function parseAxisModelMinMax(scale, minMax) {\n  return minMax == null ? null : eqNaN(minMax) ? NaN : scale.parse(minMax);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentModel from '../../model/Component.js';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin.js';\nimport { mixin } from 'zrender/lib/core/util.js';\n\nvar SingleAxisModel =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxisModel, _super);\n\n  function SingleAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SingleAxisModel.type;\n    return _this;\n  }\n\n  SingleAxisModel.prototype.getCoordSysModel = function () {\n    return this;\n  };\n\n  SingleAxisModel.type = 'singleAxis';\n  SingleAxisModel.layoutMode = 'box';\n  SingleAxisModel.defaultOption = {\n    left: '5%',\n    top: '5%',\n    right: '5%',\n    bottom: '5%',\n    type: 'value',\n    position: 'bottom',\n    orient: 'horizontal',\n    axisLine: {\n      show: true,\n      lineStyle: {\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // Single coordinate system and single axis is the,\n    // which is used as the parent tooltip model.\n    // same model, so we set default tooltip show as true.\n    tooltip: {\n      show: true\n    },\n    axisTick: {\n      show: true,\n      length: 6,\n      lineStyle: {\n        width: 1\n      }\n    },\n    axisLabel: {\n      show: true,\n      interval: 'auto'\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        type: 'dashed',\n        opacity: 0.2\n      }\n    }\n  };\n  return SingleAxisModel;\n}(ComponentModel);\n\nmixin(SingleAxisModel, AxisModelCommonMixin.prototype);\nexport default SingleAxisModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { bind } from 'zrender/lib/core/util.js';\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nexport default function singlePrepareCustom(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: bind(dataToCoordSize, coordSys)\n    }\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport function layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get(['axisTick', 'inside'])) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get(['axisLabel', 'inside']))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get(['axisLabel', 'rotate']));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Axis from '../Axis.js';\n\nvar SingleAxis =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxis, _super);\n\n  function SingleAxis(dim, scale, coordExtent, axisType, position) {\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\n\n    _this.type = axisType || 'value';\n    _this.position = position || 'bottom';\n    return _this;\n  }\n  /**\n   * Judge the orient of the axis.\n   */\n\n\n  SingleAxis.prototype.isHorizontal = function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  };\n\n  SingleAxis.prototype.pointToData = function (point, clamp) {\n    return this.coordinateSystem.pointToData(point)[0];\n  };\n\n  return SingleAxis;\n}(Axis);\n\nexport default SingleAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\nimport SingleAxis from './SingleAxis.js';\nimport * as axisHelper from '../axisHelper.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport { each } from 'zrender/lib/core/util.js';\nexport var singleDimensions = ['single'];\n/**\n * Create a single coordinates system.\n */\n\nvar Single =\n/** @class */\nfunction () {\n  function Single(axisModel, ecModel, api) {\n    this.type = 'single';\n    this.dimension = 'single';\n    /**\n     * Add it just for draw tooltip.\n     */\n\n    this.dimensions = singleDimensions;\n    this.axisPointerEnabled = true;\n    this.model = axisModel;\n\n    this._init(axisModel, ecModel, api);\n  }\n  /**\n   * Initialize single coordinate system.\n   */\n\n\n  Single.prototype._init = function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  };\n  /**\n   * Update axis scale after data processed\n   */\n\n\n  Single.prototype.update = function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data_1 = seriesModel.getData();\n        each(data_1.mapDimensionsAll(this.dimension), function (dim) {\n          this._axis.scale.unionExtentFromData(data_1, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  };\n  /**\n   * Resize the single coordinate system.\n   */\n\n\n  Single.prototype.resize = function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  };\n\n  Single.prototype.getRect = function () {\n    return this._rect;\n  };\n\n  Single.prototype._adjustAxis = function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.inverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  };\n\n  Single.prototype._updateAxisTransform = function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  };\n  /**\n   * Get axis.\n   */\n\n\n  Single.prototype.getAxis = function () {\n    return this._axis;\n  };\n  /**\n   * Get axis, add it just for draw tooltip.\n   */\n\n\n  Single.prototype.getBaseAxis = function () {\n    return this._axis;\n  };\n\n  Single.prototype.getAxes = function () {\n    return [this._axis];\n  };\n\n  Single.prototype.getTooltipAxes = function () {\n    return {\n      baseAxes: [this.getAxis()],\n      // Empty otherAxes\n      otherAxes: []\n    };\n  };\n  /**\n   * If contain point.\n   */\n\n\n  Single.prototype.containPoint = function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  };\n\n  Single.prototype.pointToData = function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  };\n  /**\n   * Convert the series data to concrete point.\n   * Can be [val] | val\n   */\n\n\n  Single.prototype.dataToPoint = function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  };\n\n  Single.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? this.dataToPoint(value) : null;\n  };\n\n  Single.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? this.pointToData(pixel) : null;\n  };\n\n  return Single;\n}();\n\nfunction getCoordSys(finder) {\n  var seriesModel = finder.seriesModel;\n  var singleModel = finder.singleAxisModel;\n  return singleModel && singleModel.coordinateSystem || seriesModel && seriesModel.coordinateSystem;\n}\n\nexport default Single;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\nimport Single, { singleDimensions } from './Single.js';\nimport { SINGLE_REFERRING } from '../../util/model.js';\n/**\n * Create single coordinate system and inject it into seriesModel.\n */\n\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = seriesModel.getReferringComponents('singleAxis', SINGLE_REFERRING).models[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nvar singleCreator = {\n  create: create,\n  dimensions: singleDimensions\n};\nexport default singleCreator;"],"names":["ScaleRawExtentInfo","scale","model","originalExtent","this","_prepareParams","prototype","dataExtent","NaN","_dataMin","_dataMax","isOrdinal","_isOrdinal","type","_needCrossZero","getNeedCrossZero","modelMinRaw","_modelMinRaw","get","isFunction","_modelMinNum","parseAxisModelMinMax","min","max","modelMaxRaw","_modelMaxRaw","_modelMaxNum","_axisDataLen","getCategories","length","boundaryGap","boundaryGapArr","isArray","_boundaryGapInner","parsePercent","calculate","dataMin","dataMax","axisDataLen","boundaryGapInner","span","Math","abs","minFixed","maxFixed","isFinite","isBlank","eqNaN","determinedMin","_determinedMin","determinedMax","_determinedMax","modifyDataMinMax","minMaxName","val","DATA_MIN_MAX_ATTR","setDeterminedMinMax","DETERMINED_MIN_MAX_ATTR","freeze","frozen","ensureScaleRawExtentInfo","rawExtentInfo","minMax","parse","SingleAxisModel","_super","_this","apply","arguments","__extends","getCoordSysModel","layoutMode","defaultOption","left","top","right","bottom","position","orient","axisLine","show","lineStyle","width","tooltip","axisTick","axisLabel","interval","splitLine","opacity","ComponentModel","mixin","AxisModelCommonMixin","dataToCoordSize","dataSize","dataItem","axis","getAxis","Array","halfSize","getBandWidth","dataToCoord","singlePrepareCustom","coordSys","rect","getRect","x","y","height","api","coord","dataToPoint","size","bind","layout","axisModel","opt","single","coordinateSystem","axisPosition","rectBound","positionMap","horizontal","vertical","rotation","PI","labelDirection","tickDirection","nameDirection","zrUtil","labelInside","labelRotation","rotate","z2","SingleAxis","dim","coordExtent","axisType","call","isHorizontal","pointToData","point","clamp","Axis","singleDimensions","getCoordSys","finder","seriesModel","singleModel","singleAxisModel","Single","ecModel","dimension","dimensions","axisPointerEnabled","_init","axisHelper","isCategory","onBand","inverse","_axis","update","eachSeries","data_1","getData","each","mapDimensionsAll","unionExtentFromData","resize","_rect","getLayoutRect","getWidth","getHeight","_adjustAxis","extent","idx","setExtent","_updateAxisTransform","coordBase","axisExtent","getExtent","extentSum","toGlobalCoord","toLocalCoord","getBaseAxis","getAxes","getTooltipAxes","baseAxes","otherAxes","containPoint","contain","coordToData","pt","convertToPixel","value","convertFromPixel","pixel","create","singles","eachComponent","name","push","getReferringComponents","SINGLE_REFERRING","models"],"sourceRoot":""}