{"version":3,"file":"static/js/408.34df9523.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/scatter/ScatterSeries.js","../node_modules/echarts/lib/chart/scatter/ScatterView.js","../node_modules/echarts/lib/chart/scatter/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport createSeriesData from '../helper/createSeriesData.js';\nimport SeriesModel from '../../model/Series.js';\n\nvar ScatterSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(ScatterSeriesModel, _super);\n\n  function ScatterSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScatterSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n\n  ScatterSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  ScatterSeriesModel.prototype.getProgressive = function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  };\n\n  ScatterSeriesModel.prototype.getProgressiveThreshold = function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  };\n\n  ScatterSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.point(data.getItemLayout(dataIndex));\n  };\n\n  ScatterSeriesModel.prototype.getZLevelKey = function () {\n    // Each progressive series has individual key.\n    return this.getData().count() > this.getProgressiveThreshold() ? this.id : '';\n  };\n\n  ScatterSeriesModel.type = 'series.scatter';\n  ScatterSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\n  ScatterSeriesModel.defaultOption = {\n    coordinateSystem: 'cartesian2d',\n    // zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    symbolSize: 10,\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n\n    },\n    emphasis: {\n      scale: true\n    },\n    // If clip the overflow graphics\n    // Works on cartesian / polar series\n    clip: true,\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    universalTransition: {\n      divideShape: 'clone'\n    } // progressive: null\n\n  };\n  return ScatterSeriesModel;\n}(SeriesModel);\n\nexport default ScatterSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport LargeSymbolDraw from '../helper/LargeSymbolDraw.js';\nimport pointsLayout from '../../layout/points.js';\nimport ChartView from '../../view/Chart.js';\n\nvar ScatterView =\n/** @class */\nfunction (_super) {\n  __extends(ScatterView, _super);\n\n  function ScatterView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScatterView.type;\n    return _this;\n  }\n\n  ScatterView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data, {\n      // TODO\n      // If this parameter should be a shape or a bounding volume\n      // shape will be more general.\n      // But bounding volume like bounding rect will be much faster in the contain calculation\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = true;\n  };\n\n  ScatterView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  };\n\n  ScatterView.prototype.incrementalRender = function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\n      clipShape: this._getClipShape(seriesModel)\n    });\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  };\n\n  ScatterView.prototype.updateTransform = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout('').reset(seriesModel, ecModel, api);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count(),\n          count: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  };\n\n  ScatterView.prototype.eachRendered = function (cb) {\n    this._symbolDraw && this._symbolDraw.eachRendered(cb);\n  };\n\n  ScatterView.prototype._getClipShape = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  };\n\n  ScatterView.prototype._updateSymbolDraw = function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  };\n\n  ScatterView.prototype.remove = function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  };\n\n  ScatterView.prototype.dispose = function () {};\n\n  ScatterView.type = 'scatter';\n  return ScatterView;\n}(ChartView);\n\nexport default ScatterView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension.js';\nimport ScatterSeriesModel from './ScatterSeries.js';\nimport ScatterView from './ScatterView.js';\nimport { install as installGridSimple } from '../../component/grid/installSimple.js';\nimport layoutPoints from '../../layout/points.js';\nexport function install(registers) {\n  // In case developer forget to include grid component\n  use(installGridSimple);\n  registers.registerSeriesModel(ScatterSeriesModel);\n  registers.registerChartView(ScatterView);\n  registers.registerLayout(layoutPoints('scatter'));\n}"],"names":["ScatterSeriesModel","_super","_this","apply","this","arguments","type","hasSymbolVisual","__extends","prototype","getInitialData","option","ecModel","createSeriesData","useEncodeDefaulter","getProgressive","progressive","large","get","getProgressiveThreshold","progressiveThreshold","brushSelector","dataIndex","data","selectors","point","getItemLayout","getZLevelKey","getData","count","id","dependencies","defaultOption","coordinateSystem","z","legendHoverLink","symbolSize","largeThreshold","itemStyle","opacity","emphasis","scale","clip","select","borderColor","universalTransition","divideShape","SeriesModel","ScatterView","render","seriesModel","api","_updateSymbolDraw","updateData","clipShape","_getClipShape","_finished","incrementalPrepareRender","incrementalPrepareUpdate","incrementalRender","taskParams","_symbolDraw","incrementalUpdate","end","updateTransform","group","dirty","update","res","pointsLayout","reset","progress","start","updateLayout","eachRendered","cb","coordSys","clipArea","getArea","symbolDraw","isLargeDraw","pipelineContext","_isLargeDraw","remove","LargeSymbolDraw","SymbolDraw","removeAll","add","dispose","ChartView","install","registers","use","installGridSimple","registerSeriesModel","registerChartView","registerLayout","layoutPoints"],"sourceRoot":""}