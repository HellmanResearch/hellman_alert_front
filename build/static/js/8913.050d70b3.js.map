{"version":3,"file":"static/js/8913.050d70b3.js","mappings":"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","sources":["../node_modules/echarts/lib/chart/map/MapView.js","../node_modules/echarts/lib/chart/map/MapSeries.js","../node_modules/echarts/lib/chart/map/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport MapDraw from '../../component/helper/MapDraw.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { setStatesFlag, Z2_EMPHASIS_LIFT } from '../../util/states.js';\n\nvar MapView =\n/** @class */\nfunction (_super) {\n  __extends(MapView, _super);\n\n  function MapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MapView.type;\n    return _this;\n  }\n\n  MapView.prototype.render = function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    }\n\n    if (this._mapDraw && payload && payload.type === 'geoRoam') {\n      this._mapDraw.resetForLabelLayout();\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  };\n\n  MapView.prototype.remove = function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  };\n\n  MapView.prototype.dispose = function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  };\n\n  MapView.prototype._renderSymbols = function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, originalDataIndex) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(originalDataIndex);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          // TODO\n          fill: mapModel.getData().getVisual('style').fill\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: 8 + (!offset ? Z2_EMPHASIS_LIFT + 1 : 0)\n      }); // Only the series that has the first value on the same region is in charge of rendering the label.\n      // But consider the case:\n      // series: [\n      //     {id: 'X', type: 'map', map: 'm', {data: [{name: 'A', value: 11}, {name: 'B', {value: 22}]},\n      //     {id: 'Y', type: 'map', map: 'm', {data: [{name: 'A', value: 21}, {name: 'C', {value: 33}]}\n      // ]\n      // The offset `0` of item `A` is at series `X`, but of item `C` is at series `Y`.\n      // For backward compatibility, we follow the rule that render label `A` by the\n      // settings on series `X` but render label `C` by the settings on series `Y`.\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name_1 = originalData.getName(originalDataIndex);\n        var fullIndex_1 = fullData.indexOfName(name_1);\n        var itemModel = originalData.getItemModel(originalDataIndex);\n        var labelModel = itemModel.getModel('label');\n        var regionGroup = fullData.getItemGraphicEl(fullIndex_1); // `getFormattedLabel` needs to use `getData` inside. Here\n        // `mapModel.getData()` is shallow cloned from `mainSeries.getData()`.\n        // FIXME\n        // If this is not the `mainSeries`, the item model (like label formatter)\n        // set on original data item will never get. But it has been working\n        // like that from the begining, and this scenario is rarely encountered.\n        // So it won't be fixed until have to.\n\n        setLabelStyle(circle, getLabelStatesModels(itemModel), {\n          labelFetcher: {\n            getFormattedLabel: function (idx, state) {\n              return mapModel.getFormattedLabel(fullIndex_1, state);\n            }\n          },\n          defaultText: name_1\n        });\n        circle.disableLabelAnimation = true;\n\n        if (!labelModel.get('position')) {\n          circle.setTextConfig({\n            position: 'bottom'\n          });\n        }\n\n        regionGroup.onHoverStateChange = function (toState) {\n          setStatesFlag(circle, toState);\n        };\n      }\n\n      group.add(circle);\n    });\n  };\n\n  MapView.type = 'map';\n  return MapView;\n}(ChartView);\n\nexport default MapView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply.js';\nimport SeriesModel from '../../model/Series.js';\nimport geoSourceManager from '../../coord/geo/geoSourceManager.js';\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper.js';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup.js';\nimport { createSymbol } from '../../util/symbol.js';\n\nvar MapSeries =\n/** @class */\nfunction (_super) {\n  __extends(MapSeries, _super);\n\n  function MapSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MapSeries.type; // Only first map series of same mapType will drawMap.\n\n    _this.needsDrawMap = false; // Group of all map series with same mapType\n\n    _this.seriesGroup = [];\n\n    _this.getTooltipPosition = function (dataIndex) {\n      if (dataIndex != null) {\n        var name_1 = this.getData().getName(dataIndex);\n        var geo = this.coordinateSystem;\n        var region = geo.getRegion(name_1);\n        return region && geo.dataToPoint(region.getCenter());\n      }\n    };\n\n    return _this;\n  }\n\n  MapSeries.prototype.getInitialData = function (option) {\n    var data = createSeriesDataSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n    var dataNameMap = zrUtil.createHashMap();\n    var toAppendNames = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var name_2 = data.getName(i);\n      dataNameMap.set(name_2, true);\n    }\n\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);\n    zrUtil.each(geoSource.regions, function (region) {\n      var name = region.name;\n\n      if (!dataNameMap.get(name)) {\n        toAppendNames.push(name);\n      }\n    }); // Complete data with missing regions. The consequent processes (like visual\n    // map and render) can not be performed without a \"full data\". For example,\n    // find `dataIndex` by name.\n\n    data.appendValues([], toAppendNames);\n    return data;\n  };\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n\n\n  MapSeries.prototype.getHostGeoModel = function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.ecModel.getComponent('geo', geoIndex) : null;\n  };\n\n  MapSeries.prototype.getMapType = function () {\n    return (this.getHostGeoModel() || this).option.map;\n  }; // _fillOption(option, mapName) {\n  // Shallow clone\n  // option = zrUtil.extend({}, option);\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n  // return option;\n  // }\n\n\n  MapSeries.prototype.getRawValue = function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  };\n  /**\n   * Get model of region\n   */\n\n\n  MapSeries.prototype.getRegionModel = function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  };\n  /**\n   * Map tooltip formatter\n   */\n\n\n  MapSeries.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(seriesGroup[i].name);\n      }\n    }\n\n    return createTooltipMarkup('section', {\n      header: seriesNames.join(', '),\n      noHeader: !seriesNames.length,\n      blocks: [createTooltipMarkup('nameValue', {\n        name: name,\n        value: value\n      })]\n    });\n  };\n\n  MapSeries.prototype.setZoom = function (zoom) {\n    this.option.zoom = zoom;\n  };\n\n  MapSeries.prototype.setCenter = function (center) {\n    this.option.center = center;\n  };\n\n  MapSeries.prototype.getLegendIcon = function (opt) {\n    var iconType = opt.icon || 'roundRect';\n    var icon = createSymbol(iconType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill);\n    icon.setStyle(opt.itemStyle); // Map do not use itemStyle.borderWidth as border width\n\n    icon.style.stroke = 'none'; // No rotation because no series visual symbol for map\n\n    if (iconType.indexOf('empty') > -1) {\n      icon.style.stroke = icon.style.fill;\n      icon.style.fill = '#fff';\n      icon.style.lineWidth = 2;\n    }\n\n    return icon;\n  };\n\n  MapSeries.type = 'series.map';\n  MapSeries.dependencies = ['geo'];\n  MapSeries.layoutMode = 'box';\n  MapSeries.defaultOption = {\n    // 一级层叠\n    // zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    // Default value:\n    // for geoSVG source: 1,\n    // for geoJSON source: 0.75.\n    aspectScale: null,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    showLegendSymbol: true,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    selectedMode: true,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    },\n    select: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    nameProperty: 'name'\n  };\n  return MapSeries;\n}(SeriesModel);\n\nexport default MapSeries;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension.js';\nimport MapView from './MapView.js';\nimport MapSeries from './MapSeries.js';\nimport mapDataStatistic from './mapDataStatistic.js';\nimport mapSymbolLayout from './mapSymbolLayout.js';\nimport { createLegacyDataSelectAction } from '../../legacy/dataSelectAction.js';\nimport { install as installGeo } from '../../component/geo/install.js';\nexport function install(registers) {\n  use(installGeo);\n  registers.registerChartView(MapView);\n  registers.registerSeriesModel(MapSeries);\n  registers.registerLayout(mapSymbolLayout);\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\n  createLegacyDataSelectAction('map', registers.registerAction);\n}"],"names":["MapView","_super","_this","apply","this","arguments","type","__extends","prototype","render","mapModel","ecModel","api","payload","from","uid","group","removeAll","getHostGeoModel","_mapDraw","resetForLabelLayout","componentType","seriesId","id","mapDraw","add","needsDrawMap","MapDraw","draw","remove","get","getComponent","_renderSymbols","dispose","originalData","each","mapDimension","value","originalDataIndex","isNaN","layout","getItemLayout","point","offset","circle","graphic","style","fill","getData","getVisual","shape","cx","cy","r","silent","z2","Z2_EMPHASIS_LIFT","fullData","mainSeries","name_1","getName","fullIndex_1","indexOfName","itemModel","getItemModel","labelModel","getModel","regionGroup","getItemGraphicEl","setLabelStyle","getLabelStatesModels","labelFetcher","getFormattedLabel","idx","state","defaultText","disableLabelAnimation","setTextConfig","position","onHoverStateChange","toState","setStatesFlag","ChartView","MapSeries","seriesGroup","getTooltipPosition","dataIndex","geo","coordinateSystem","region","getRegion","dataToPoint","getCenter","getInitialData","option","data","createSeriesDataSimply","coordDimensions","encodeDefaulter","zrUtil","makeSeriesEncodeForNameBased","dataNameMap","toAppendNames","i","len","count","name_2","set","geoSource","geoSourceManager","getMapType","nameMap","nameProperty","regions","name","push","appendValues","geoIndex","map","getRawValue","getRegionModel","regionName","formatTooltip","multipleSeries","dataType","seriesNames","length","otherIndex","valueDim","createTooltipMarkup","header","join","noHeader","blocks","setZoom","zoom","setCenter","center","getLegendIcon","opt","iconType","icon","createSymbol","itemWidth","itemHeight","itemStyle","setStyle","stroke","indexOf","lineWidth","dependencies","layoutMode","defaultOption","z","left","top","aspectScale","showLegendSymbol","boundingCoords","scaleLimit","selectedMode","label","show","color","borderWidth","borderColor","areaColor","emphasis","select","SeriesModel","install","registers","use","installGeo","registerChartView","registerSeriesModel","registerLayout","mapSymbolLayout","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","mapDataStatistic","createLegacyDataSelectAction","registerAction"],"sourceRoot":""}