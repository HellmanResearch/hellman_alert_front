{"version":3,"file":"static/js/9662.627ee59c.js","mappings":"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","sources":["../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/echarts/lib/component/axis/ParallelAxisView.js","../node_modules/echarts/lib/component/axis/RadiusAxisView.js","../node_modules/echarts/lib/component/axis/SingleAxisView.js","../node_modules/echarts/lib/component/axis/axisSplitHelper.js","../node_modules/echarts/lib/component/axis/parallelAxisAction.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport AxisView from './AxisView.js';\nimport * as cartesianAxisHelper from '../../coord/cartesian/cartesianAxisHelper.js';\nimport { rectCoordAxisBuildSplitArea, rectCoordAxisHandleRemove } from './axisSplitHelper.js';\nimport { isIntervalOrLogScale } from '../../scale/helper.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\n\nvar CartesianAxisView =\n/** @class */\nfunction (_super) {\n  __extends(CartesianAxisView, _super);\n\n  function CartesianAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CartesianAxisView.type;\n    _this.axisPointerClass = 'CartesianAxisPointer';\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  CartesianAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, zrUtil.extend({\n      handleAutoShown: function (elementType) {\n        var cartesians = gridModel.coordinateSystem.getCartesians();\n\n        for (var i = 0; i < cartesians.length; i++) {\n          if (isIntervalOrLogScale(cartesians[i].getOtherAxis(axisModel.axis).scale)) {\n            // Still show axis tick or axisLine if other axis is value / log\n            return true;\n          }\n        } // Not show axisTick or axisLine if other axis is category / time\n\n\n        return false;\n      }\n    }, layout));\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get([name, 'show'])) {\n        axisElementBuilders[name](this, this._axisGroup, axisModel, gridModel);\n      }\n    }, this); // THIS is a special case for bar racing chart.\n    // Update the axis label from the natural initial layout to\n    // sorted layout should has no animation.\n\n    var isInitialSortFromBarRacing = payload && payload.type === 'changeAxisOrder' && payload.isInitSort;\n\n    if (!isInitialSortFromBarRacing) {\n      graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    }\n\n    _super.prototype.render.call(this, axisModel, ecModel, api, payload);\n  };\n\n  CartesianAxisView.prototype.remove = function () {\n    rectCoordAxisHandleRemove(this);\n  };\n\n  CartesianAxisView.type = 'cartesianAxis';\n  return CartesianAxisView;\n}(AxisView);\n\nvar axisElementBuilders = {\n  splitLine: function (axisView, axisGroup, axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n      var line = new graphic.Line({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        autoBatch: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      });\n      graphic.subPixelOptimizeLine(line.shape, lineStyle.lineWidth);\n      axisGroup.add(line);\n    }\n  },\n  minorSplitLine: function (axisView, axisGroup, axisModel, gridModel) {\n    var axis = axisModel.axis;\n    var minorSplitLineModel = axisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var minorTicksCoords = axis.getMinorTicksCoords();\n\n    if (!minorTicksCoords.length) {\n      return;\n    }\n\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\n\n        if (isHorizontal) {\n          p1[0] = tickCoord;\n          p1[1] = gridRect.y;\n          p2[0] = tickCoord;\n          p2[1] = gridRect.y + gridRect.height;\n        } else {\n          p1[0] = gridRect.x;\n          p1[1] = tickCoord;\n          p2[0] = gridRect.x + gridRect.width;\n          p2[1] = tickCoord;\n        }\n\n        var line = new graphic.Line({\n          anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\n          autoBatch: true,\n          shape: {\n            x1: p1[0],\n            y1: p1[1],\n            x2: p2[0],\n            y2: p2[1]\n          },\n          style: lineStyle,\n          silent: true\n        });\n        graphic.subPixelOptimizeLine(line.shape, lineStyle.lineWidth);\n        axisGroup.add(line);\n      }\n    }\n  },\n  splitArea: function (axisView, axisGroup, axisModel, gridModel) {\n    rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel);\n  }\n};\n\nvar CartesianXAxisView =\n/** @class */\nfunction (_super) {\n  __extends(CartesianXAxisView, _super);\n\n  function CartesianXAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CartesianXAxisView.type;\n    return _this;\n  }\n\n  CartesianXAxisView.type = 'xAxis';\n  return CartesianXAxisView;\n}(CartesianAxisView);\n\nexport { CartesianXAxisView };\n\nvar CartesianYAxisView =\n/** @class */\nfunction (_super) {\n  __extends(CartesianYAxisView, _super);\n\n  function CartesianYAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CartesianXAxisView.type;\n    return _this;\n  }\n\n  CartesianYAxisView.type = 'yAxis';\n  return CartesianYAxisView;\n}(CartesianAxisView);\n\nexport { CartesianYAxisView };\nexport default CartesianAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport BrushController from '../helper/BrushController.js';\nimport * as brushHelper from '../helper/brushHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport ComponentView from '../../view/Component.js';\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar ParallelAxisView =\n/** @class */\nfunction (_super) {\n  __extends(ParallelAxisView, _super);\n\n  function ParallelAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelAxisView.type;\n    return _this;\n  }\n\n  ParallelAxisView.prototype.init = function (ecModel, api) {\n    _super.prototype.init.apply(this, arguments);\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  };\n\n  ParallelAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n  }; // /**\n  //  * @override\n  //  */\n  // updateVisual(axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // }\n\n\n  ParallelAxisView.prototype._refreshBrushController = function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      x: builderOpt.position[0],\n      y: builderOpt.position[1]\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  };\n\n  ParallelAxisView.prototype._onBrush = function (eventParam) {\n    var coverInfoList = eventParam.areas; // Do not cache these object, because the mey be changed.\n\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === eventParam.isEnd || eventParam.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  };\n\n  ParallelAxisView.prototype.dispose = function () {\n    this._brushController.dispose();\n  };\n\n  ParallelAxisView.type = 'parallelAxis';\n  return ParallelAxisView;\n}(ComponentView);\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nexport default ParallelAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport AxisView from './AxisView.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea', 'minorSplitLine'];\n\nvar RadiusAxisView =\n/** @class */\nfunction (_super) {\n  __extends(RadiusAxisView, _super);\n\n  function RadiusAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadiusAxisView.type;\n    _this.axisPointerClass = 'PolarAxisPointer';\n    return _this;\n  }\n\n  RadiusAxisView.prototype.render = function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var oldAxisGroup = this._axisGroup;\n    var newAxisGroup = this._axisGroup = new graphic.Group();\n    this.group.add(newAxisGroup);\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var minorTicksCoords = radiusAxis.getMinorTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    newAxisGroup.add(axisBuilder.getGroup());\n    graphic.groupTransition(oldAxisGroup, newAxisGroup, radiusAxisModel);\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get([name, 'show']) && !radiusAxis.scale.isBlank()) {\n        axisElementBuilders[name](this.group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords);\n      }\n    }, this);\n  };\n\n  RadiusAxisView.type = 'radiusAxis';\n  return RadiusAxisView;\n}(AxisView);\n\nvar axisElementBuilders = {\n  splitLine: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          // ensure circle radius >= 0\n          r: Math.max(ticksCoords[i].coord, 0)\n        }\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n  minorSplitLine: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords) {\n    if (!minorTicksCoords.length) {\n      return;\n    }\n\n    var minorSplitLineModel = radiusAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        lines.push(new graphic.Circle({\n          shape: {\n            cx: polar.cx,\n            cy: polar.cy,\n            r: minorTicksCoords[i][k].coord\n          }\n        }));\n      }\n    }\n\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults({\n        fill: null\n      }, lineStyleModel.getLineStyle()),\n      silent: true\n    }));\n  },\n  splitArea: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n};\n/**\n * @inner\n */\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nexport default RadiusAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper.js';\nimport AxisView from './AxisView.js';\nimport { rectCoordAxisBuildSplitArea, rectCoordAxisHandleRemove } from './axisSplitHelper.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine'];\n\nvar SingleAxisView =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxisView, _super);\n\n  function SingleAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SingleAxisView.type;\n    _this.axisPointerClass = 'SingleAxisPointer';\n    return _this;\n  }\n\n  SingleAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(this._axisGroup);\n    group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get([name, 'show'])) {\n        axisElementBuilders[name](this, this.group, this._axisGroup, axisModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n    _super.prototype.render.call(this, axisModel, ecModel, api, payload);\n  };\n\n  SingleAxisView.prototype.remove = function () {\n    rectCoordAxisHandleRemove(this);\n  };\n\n  SingleAxisView.type = 'singleAxis';\n  return SingleAxisView;\n}(AxisView);\n\nvar axisElementBuilders = {\n  splitLine: function (axisView, group, axisGroup, axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var lineWidth = lineStyleModel.get('width');\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var line = new graphic.Line({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        silent: true\n      });\n      graphic.subPixelOptimizeLine(line.shape, lineWidth);\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(line);\n    }\n\n    var lineStyle = lineStyleModel.getLineStyle(['color']);\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }\n  },\n  splitArea: function (axisView, group, axisGroup, axisModel) {\n    rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, axisModel);\n  }\n};\nexport default SingleAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nexport function rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\n  var axis = axisModel.axis;\n\n  if (axis.scale.isBlank()) {\n    return;\n  } // TODO: TYPE\n\n\n  var splitAreaModel = axisModel.getModel('splitArea');\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\n  var areaColors = areaStyleModel.get('color');\n  var gridRect = gridModel.coordinateSystem.getRect();\n  var ticksCoords = axis.getTicksCoords({\n    tickModel: splitAreaModel,\n    clamp: true\n  });\n\n  if (!ticksCoords.length) {\n    return;\n  } // For Making appropriate splitArea animation, the color and anid\n  // should be corresponding to previous one if possible.\n\n\n  var areaColorsLen = areaColors.length;\n  var lastSplitAreaColors = inner(axisView).splitAreaColors;\n  var newSplitAreaColors = zrUtil.createHashMap();\n  var colorIndex = 0;\n\n  if (lastSplitAreaColors) {\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n      if (cIndex != null) {\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n        break;\n      }\n    }\n  }\n\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n  var areaStyle = areaStyleModel.getAreaStyle();\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n  for (var i = 1; i < ticksCoords.length; i++) {\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n    var x = void 0;\n    var y = void 0;\n    var width = void 0;\n    var height = void 0;\n\n    if (axis.isHorizontal()) {\n      x = prev;\n      y = gridRect.y;\n      width = tickCoord - x;\n      height = gridRect.height;\n      prev = x + width;\n    } else {\n      x = gridRect.x;\n      y = prev;\n      width = gridRect.width;\n      height = tickCoord - y;\n      prev = y + height;\n    }\n\n    var tickValue = ticksCoords[i - 1].tickValue;\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n    axisGroup.add(new graphic.Rect({\n      anid: tickValue != null ? 'area_' + tickValue : null,\n      shape: {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      },\n      style: zrUtil.defaults({\n        fill: areaColors[colorIndex]\n      }, areaStyle),\n      autoBatch: true,\n      silent: true\n    }));\n    colorIndex = (colorIndex + 1) % areaColorsLen;\n  }\n\n  inner(axisView).splitAreaColors = newSplitAreaColors;\n}\nexport function rectCoordAxisHandleRemove(axisView) {\n  inner(axisView).splitAreaColors = null;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\nexport function installParallelActions(registers) {\n  registers.registerAction(actionInfo, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'parallelAxis',\n      query: payload\n    }, function (parallelAxisModel) {\n      parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n    });\n  });\n  /**\n   * @payload\n   */\n\n  registers.registerAction('parallelAxisExpand', function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'parallel',\n      query: payload\n    }, function (parallelModel) {\n      parallelModel.setAxisExpand(payload);\n    });\n  });\n}"],"names":["axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","_super","_this","apply","this","arguments","type","axisPointerClass","__extends","prototype","render","axisModel","ecModel","api","payload","group","removeAll","oldAxisGroup","_axisGroup","graphic","add","get","gridModel","getCoordSysModel","layout","cartesianAxisHelper","axisBuilder","AxisBuilder","zrUtil","handleAutoShown","elementType","cartesians","coordinateSystem","getCartesians","i","length","isIntervalOrLogScale","getOtherAxis","axis","scale","getGroup","name","axisElementBuilders","isInitSort","call","remove","rectCoordAxisHandleRemove","AxisView","splitLine","axisView","axisGroup","isBlank","splitLineModel","getModel","lineStyleModel","lineColors","gridRect","getRect","isHorizontal","lineCount","ticksCoords","getTicksCoords","tickModel","p1","p2","lineStyle","getLineStyle","tickCoord","toGlobalCoord","coord","y","height","x","width","colorIndex","tickValue","line","anid","autoBatch","shape","x1","y1","x2","y2","style","stroke","silent","lineWidth","minorSplitLine","minorTicksCoords","getMinorTicksCoords","k","splitArea","rectCoordAxisBuildSplitArea","CartesianXAxisView","CartesianYAxisView","elementList","ParallelAxisView","init","_brushController","BrushController","getZr","on","_onBrush","findComponents","mainType","query","fromAxisAreaSelect","coordSysModel","getComponent","coordSys","areaSelectStyle","getAreaSelectStyle","areaWidth","dim","axisLayout","getAxisLayout","builderOpt","strokeContainThreshold","_refreshBrushController","extent","getExtent","extentLen","extra","Math","min","abs","rect","mount","enableGlobalPan","rotation","position","setPanels","panelId","clipPath","brushHelper","isTargetByCursor","getLinearBrushOtherExtent","enableBrush","brushType","brushStyle","removeOnClick","updateCovers","activeIntervals","interval","range","dataToCoord","getCoverInfoList","eventParam","coverInfoList","areas","intervals","coverInfo","coordToData","option","realtime","isEnd","dispatchAction","parallelAxisId","id","dispose","ComponentView","RadiusAxisView","radiusAxisModel","newAxisGroup","radiusAxis","polar","angleAxis","getAngleAxis","axisAngle","radiusExtent","cx","cy","PI","labelDirection","tickDirection","nameDirection","labelRotate","z2","layoutAxis","Array","splitLines","push","r","max","fill","lines","areaStyleModel","areaColors","splitAreas","prevRadius","r0","startAngle","endAngle","getAreaStyle","SingleAxisView","singleAxisHelper","inner","makeInner","splitAreaModel","clamp","areaColorsLen","lastSplitAreaColors","splitAreaColors","newSplitAreaColors","cIndex","prev","areaStyle","set","actionInfo","event","installParallelActions","registers","registerAction","eachComponent","parallelAxisModel","model","setActiveIntervals","parallelModel","setAxisExpand"],"sourceRoot":""}