{"version":3,"file":"static/js/8574.f7c369e7.js","mappings":"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","sources":["../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/prepareCustom.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n */\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { GeoJSONLineStringGeometry, GeoJSONPolygonGeometry, GeoJSONRegion } from './Region.js';\n\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var jsonCompressed = json;\n  var encodeScale = jsonCompressed.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = jsonCompressed.features;\n  zrUtil.each(features, function (feature) {\n    var geometry = feature.geometry;\n    var encodeOffsets = geometry.encodeOffsets;\n    var coordinates = geometry.coordinates; // Geometry may be appeded manually in the script after json loaded.\n    // In this case this geometry is usually not encoded.\n\n    if (!encodeOffsets) {\n      return;\n    }\n\n    switch (geometry.type) {\n      case 'LineString':\n        geometry.coordinates = decodeRing(coordinates, encodeOffsets, encodeScale);\n        break;\n\n      case 'Polygon':\n        decodeRings(coordinates, encodeOffsets, encodeScale);\n        break;\n\n      case 'MultiLineString':\n        decodeRings(coordinates, encodeOffsets, encodeScale);\n        break;\n\n      case 'MultiPolygon':\n        zrUtil.each(coordinates, function (rings, idx) {\n          return decodeRings(rings, encodeOffsets[idx], encodeScale);\n        });\n    }\n  }); // Has been decoded\n\n  jsonCompressed.UTF8Encoding = false;\n  return jsonCompressed;\n}\n\nfunction decodeRings(rings, encodeOffsets, encodeScale) {\n  for (var c = 0; c < rings.length; c++) {\n    rings[c] = decodeRing(rings[c], encodeOffsets[c], encodeScale);\n  }\n}\n\nfunction decodeRing(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n\nexport default function parseGeoJSON(geoJson, nameProperty) {\n  geoJson = decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var geometries = [];\n\n    switch (geo.type) {\n      case 'Polygon':\n        var coordinates = geo.coordinates; // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n\n        geometries.push(new GeoJSONPolygonGeometry(coordinates[0], coordinates.slice(1)));\n        break;\n\n      case 'MultiPolygon':\n        zrUtil.each(geo.coordinates, function (item) {\n          if (item[0]) {\n            geometries.push(new GeoJSONPolygonGeometry(item[0], item.slice(1)));\n          }\n        });\n        break;\n\n      case 'LineString':\n        geometries.push(new GeoJSONLineStringGeometry([geo.coordinates]));\n        break;\n\n      case 'MultiLineString':\n        geometries.push(new GeoJSONLineStringGeometry(geo.coordinates));\n    }\n\n    var region = new GeoJSONRegion(properties[nameProperty || 'name'], geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nexport default function geoPrepareCustom(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      zoom: coordSys.getZoom()\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}"],"names":["decodeRings","rings","encodeOffsets","encodeScale","c","length","decodeRing","coordinate","result","prevX","prevY","i","x","charCodeAt","y","push","parseGeoJSON","geoJson","nameProperty","json","UTF8Encoding","jsonCompressed","UTF8Scale","features","zrUtil","feature","geometry","coordinates","type","idx","decode","featureObj","properties","geo","geometries","GeoJSONPolygonGeometry","slice","item","GeoJSONLineStringGeometry","region","GeoJSONRegion","cp","dataToCoordSize","dataSize","dataItem","dimIdx","val","halfSize","p1","p2","Math","abs","this","dataToPoint","geoPrepareCustom","coordSys","rect","getBoundingRect","width","height","zoom","getZoom","api","coord","data","size"],"sourceRoot":""}