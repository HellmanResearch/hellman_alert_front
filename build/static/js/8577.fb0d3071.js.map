{"version":3,"file":"static/js/8577.fb0d3071.js","mappings":"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","sources":["../node_modules/zrender/lib/tool/parseSVG.js","../node_modules/zrender/lib/tool/parseXML.js","../node_modules/zrender/lib/tool/path.js"],"sourcesContent":["import Group from '../graphic/Group.js';\nimport ZRImage from '../graphic/Image.js';\nimport Circle from '../graphic/shape/Circle.js';\nimport Rect from '../graphic/shape/Rect.js';\nimport Ellipse from '../graphic/shape/Ellipse.js';\nimport Line from '../graphic/shape/Line.js';\nimport Polygon from '../graphic/shape/Polygon.js';\nimport Polyline from '../graphic/shape/Polyline.js';\nimport * as matrix from '../core/matrix.js';\nimport { createFromString } from './path.js';\nimport { defaults, trim, each, map, keys, hasOwn } from '../core/util.js';\nimport LinearGradient from '../graphic/LinearGradient.js';\nimport RadialGradient from '../graphic/RadialGradient.js';\nimport TSpan from '../graphic/TSpan.js';\nimport { parseXML } from './parseXML.js';\n;\nvar nodeParsers;\nvar INHERITABLE_STYLE_ATTRIBUTES_MAP = {\n    'fill': 'fill',\n    'stroke': 'stroke',\n    'stroke-width': 'lineWidth',\n    'opacity': 'opacity',\n    'fill-opacity': 'fillOpacity',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-dasharray': 'lineDash',\n    'stroke-dashoffset': 'lineDashOffset',\n    'stroke-linecap': 'lineCap',\n    'stroke-linejoin': 'lineJoin',\n    'stroke-miterlimit': 'miterLimit',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'text-anchor': 'textAlign',\n    'visibility': 'visibility',\n    'display': 'display'\n};\nvar INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS = keys(INHERITABLE_STYLE_ATTRIBUTES_MAP);\nvar SELF_STYLE_ATTRIBUTES_MAP = {\n    'alignment-baseline': 'textBaseline',\n    'stop-color': 'stopColor'\n};\nvar SELF_STYLE_ATTRIBUTES_MAP_KEYS = keys(SELF_STYLE_ATTRIBUTES_MAP);\nvar SVGParser = (function () {\n    function SVGParser() {\n        this._defs = {};\n        this._root = null;\n    }\n    SVGParser.prototype.parse = function (xml, opt) {\n        opt = opt || {};\n        var svg = parseXML(xml);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!svg) {\n                throw new Error('Illegal svg');\n            }\n        }\n        this._defsUsePending = [];\n        var root = new Group();\n        this._root = root;\n        var named = [];\n        var viewBox = svg.getAttribute('viewBox') || '';\n        var width = parseFloat((svg.getAttribute('width') || opt.width));\n        var height = parseFloat((svg.getAttribute('height') || opt.height));\n        isNaN(width) && (width = null);\n        isNaN(height) && (height = null);\n        parseAttributes(svg, root, null, true, false);\n        var child = svg.firstChild;\n        while (child) {\n            this._parseNode(child, root, named, null, false, false);\n            child = child.nextSibling;\n        }\n        applyDefs(this._defs, this._defsUsePending);\n        this._defsUsePending = [];\n        var viewBoxRect;\n        var viewBoxTransform;\n        if (viewBox) {\n            var viewBoxArr = splitNumberSequence(viewBox);\n            if (viewBoxArr.length >= 4) {\n                viewBoxRect = {\n                    x: parseFloat((viewBoxArr[0] || 0)),\n                    y: parseFloat((viewBoxArr[1] || 0)),\n                    width: parseFloat(viewBoxArr[2]),\n                    height: parseFloat(viewBoxArr[3])\n                };\n            }\n        }\n        if (viewBoxRect && width != null && height != null) {\n            viewBoxTransform = makeViewBoxTransform(viewBoxRect, { x: 0, y: 0, width: width, height: height });\n            if (!opt.ignoreViewBox) {\n                var elRoot = root;\n                root = new Group();\n                root.add(elRoot);\n                elRoot.scaleX = elRoot.scaleY = viewBoxTransform.scale;\n                elRoot.x = viewBoxTransform.x;\n                elRoot.y = viewBoxTransform.y;\n            }\n        }\n        if (!opt.ignoreRootClip && width != null && height != null) {\n            root.setClipPath(new Rect({\n                shape: { x: 0, y: 0, width: width, height: height }\n            }));\n        }\n        return {\n            root: root,\n            width: width,\n            height: height,\n            viewBoxRect: viewBoxRect,\n            viewBoxTransform: viewBoxTransform,\n            named: named\n        };\n    };\n    SVGParser.prototype._parseNode = function (xmlNode, parentGroup, named, namedFrom, isInDefs, isInText) {\n        var nodeName = xmlNode.nodeName.toLowerCase();\n        var el;\n        var namedFromForSub = namedFrom;\n        if (nodeName === 'defs') {\n            isInDefs = true;\n        }\n        if (nodeName === 'text') {\n            isInText = true;\n        }\n        if (nodeName === 'defs' || nodeName === 'switch') {\n            el = parentGroup;\n        }\n        else {\n            if (!isInDefs) {\n                var parser_1 = nodeParsers[nodeName];\n                if (parser_1 && hasOwn(nodeParsers, nodeName)) {\n                    el = parser_1.call(this, xmlNode, parentGroup);\n                    var nameAttr = xmlNode.getAttribute('name');\n                    if (nameAttr) {\n                        var newNamed = {\n                            name: nameAttr,\n                            namedFrom: null,\n                            svgNodeTagLower: nodeName,\n                            el: el\n                        };\n                        named.push(newNamed);\n                        if (nodeName === 'g') {\n                            namedFromForSub = newNamed;\n                        }\n                    }\n                    else if (namedFrom) {\n                        named.push({\n                            name: namedFrom.name,\n                            namedFrom: namedFrom,\n                            svgNodeTagLower: nodeName,\n                            el: el\n                        });\n                    }\n                    parentGroup.add(el);\n                }\n            }\n            var parser = paintServerParsers[nodeName];\n            if (parser && hasOwn(paintServerParsers, nodeName)) {\n                var def = parser.call(this, xmlNode);\n                var id = xmlNode.getAttribute('id');\n                if (id) {\n                    this._defs[id] = def;\n                }\n            }\n        }\n        if (el && el.isGroup) {\n            var child = xmlNode.firstChild;\n            while (child) {\n                if (child.nodeType === 1) {\n                    this._parseNode(child, el, named, namedFromForSub, isInDefs, isInText);\n                }\n                else if (child.nodeType === 3 && isInText) {\n                    this._parseText(child, el);\n                }\n                child = child.nextSibling;\n            }\n        }\n    };\n    SVGParser.prototype._parseText = function (xmlNode, parentGroup) {\n        var text = new TSpan({\n            style: {\n                text: xmlNode.textContent\n            },\n            silent: true,\n            x: this._textX || 0,\n            y: this._textY || 0\n        });\n        inheritStyle(parentGroup, text);\n        parseAttributes(xmlNode, text, this._defsUsePending, false, false);\n        applyTextAlignment(text, parentGroup);\n        var textStyle = text.style;\n        var fontSize = textStyle.fontSize;\n        if (fontSize && fontSize < 9) {\n            textStyle.fontSize = 9;\n            text.scaleX *= fontSize / 9;\n            text.scaleY *= fontSize / 9;\n        }\n        var font = (textStyle.fontSize || textStyle.fontFamily) && [\n            textStyle.fontStyle,\n            textStyle.fontWeight,\n            (textStyle.fontSize || 12) + 'px',\n            textStyle.fontFamily || 'sans-serif'\n        ].join(' ');\n        textStyle.font = font;\n        var rect = text.getBoundingRect();\n        this._textX += rect.width;\n        parentGroup.add(text);\n        return text;\n    };\n    SVGParser.internalField = (function () {\n        nodeParsers = {\n            'g': function (xmlNode, parentGroup) {\n                var g = new Group();\n                inheritStyle(parentGroup, g);\n                parseAttributes(xmlNode, g, this._defsUsePending, false, false);\n                return g;\n            },\n            'rect': function (xmlNode, parentGroup) {\n                var rect = new Rect();\n                inheritStyle(parentGroup, rect);\n                parseAttributes(xmlNode, rect, this._defsUsePending, false, false);\n                rect.setShape({\n                    x: parseFloat(xmlNode.getAttribute('x') || '0'),\n                    y: parseFloat(xmlNode.getAttribute('y') || '0'),\n                    width: parseFloat(xmlNode.getAttribute('width') || '0'),\n                    height: parseFloat(xmlNode.getAttribute('height') || '0')\n                });\n                rect.silent = true;\n                return rect;\n            },\n            'circle': function (xmlNode, parentGroup) {\n                var circle = new Circle();\n                inheritStyle(parentGroup, circle);\n                parseAttributes(xmlNode, circle, this._defsUsePending, false, false);\n                circle.setShape({\n                    cx: parseFloat(xmlNode.getAttribute('cx') || '0'),\n                    cy: parseFloat(xmlNode.getAttribute('cy') || '0'),\n                    r: parseFloat(xmlNode.getAttribute('r') || '0')\n                });\n                circle.silent = true;\n                return circle;\n            },\n            'line': function (xmlNode, parentGroup) {\n                var line = new Line();\n                inheritStyle(parentGroup, line);\n                parseAttributes(xmlNode, line, this._defsUsePending, false, false);\n                line.setShape({\n                    x1: parseFloat(xmlNode.getAttribute('x1') || '0'),\n                    y1: parseFloat(xmlNode.getAttribute('y1') || '0'),\n                    x2: parseFloat(xmlNode.getAttribute('x2') || '0'),\n                    y2: parseFloat(xmlNode.getAttribute('y2') || '0')\n                });\n                line.silent = true;\n                return line;\n            },\n            'ellipse': function (xmlNode, parentGroup) {\n                var ellipse = new Ellipse();\n                inheritStyle(parentGroup, ellipse);\n                parseAttributes(xmlNode, ellipse, this._defsUsePending, false, false);\n                ellipse.setShape({\n                    cx: parseFloat(xmlNode.getAttribute('cx') || '0'),\n                    cy: parseFloat(xmlNode.getAttribute('cy') || '0'),\n                    rx: parseFloat(xmlNode.getAttribute('rx') || '0'),\n                    ry: parseFloat(xmlNode.getAttribute('ry') || '0')\n                });\n                ellipse.silent = true;\n                return ellipse;\n            },\n            'polygon': function (xmlNode, parentGroup) {\n                var pointsStr = xmlNode.getAttribute('points');\n                var pointsArr;\n                if (pointsStr) {\n                    pointsArr = parsePoints(pointsStr);\n                }\n                var polygon = new Polygon({\n                    shape: {\n                        points: pointsArr || []\n                    },\n                    silent: true\n                });\n                inheritStyle(parentGroup, polygon);\n                parseAttributes(xmlNode, polygon, this._defsUsePending, false, false);\n                return polygon;\n            },\n            'polyline': function (xmlNode, parentGroup) {\n                var pointsStr = xmlNode.getAttribute('points');\n                var pointsArr;\n                if (pointsStr) {\n                    pointsArr = parsePoints(pointsStr);\n                }\n                var polyline = new Polyline({\n                    shape: {\n                        points: pointsArr || []\n                    },\n                    silent: true\n                });\n                inheritStyle(parentGroup, polyline);\n                parseAttributes(xmlNode, polyline, this._defsUsePending, false, false);\n                return polyline;\n            },\n            'image': function (xmlNode, parentGroup) {\n                var img = new ZRImage();\n                inheritStyle(parentGroup, img);\n                parseAttributes(xmlNode, img, this._defsUsePending, false, false);\n                img.setStyle({\n                    image: xmlNode.getAttribute('xlink:href') || xmlNode.getAttribute('href'),\n                    x: +xmlNode.getAttribute('x'),\n                    y: +xmlNode.getAttribute('y'),\n                    width: +xmlNode.getAttribute('width'),\n                    height: +xmlNode.getAttribute('height')\n                });\n                img.silent = true;\n                return img;\n            },\n            'text': function (xmlNode, parentGroup) {\n                var x = xmlNode.getAttribute('x') || '0';\n                var y = xmlNode.getAttribute('y') || '0';\n                var dx = xmlNode.getAttribute('dx') || '0';\n                var dy = xmlNode.getAttribute('dy') || '0';\n                this._textX = parseFloat(x) + parseFloat(dx);\n                this._textY = parseFloat(y) + parseFloat(dy);\n                var g = new Group();\n                inheritStyle(parentGroup, g);\n                parseAttributes(xmlNode, g, this._defsUsePending, false, true);\n                return g;\n            },\n            'tspan': function (xmlNode, parentGroup) {\n                var x = xmlNode.getAttribute('x');\n                var y = xmlNode.getAttribute('y');\n                if (x != null) {\n                    this._textX = parseFloat(x);\n                }\n                if (y != null) {\n                    this._textY = parseFloat(y);\n                }\n                var dx = xmlNode.getAttribute('dx') || '0';\n                var dy = xmlNode.getAttribute('dy') || '0';\n                var g = new Group();\n                inheritStyle(parentGroup, g);\n                parseAttributes(xmlNode, g, this._defsUsePending, false, true);\n                this._textX += parseFloat(dx);\n                this._textY += parseFloat(dy);\n                return g;\n            },\n            'path': function (xmlNode, parentGroup) {\n                var d = xmlNode.getAttribute('d') || '';\n                var path = createFromString(d);\n                inheritStyle(parentGroup, path);\n                parseAttributes(xmlNode, path, this._defsUsePending, false, false);\n                path.silent = true;\n                return path;\n            }\n        };\n    })();\n    return SVGParser;\n}());\nvar paintServerParsers = {\n    'lineargradient': function (xmlNode) {\n        var x1 = parseInt(xmlNode.getAttribute('x1') || '0', 10);\n        var y1 = parseInt(xmlNode.getAttribute('y1') || '0', 10);\n        var x2 = parseInt(xmlNode.getAttribute('x2') || '10', 10);\n        var y2 = parseInt(xmlNode.getAttribute('y2') || '0', 10);\n        var gradient = new LinearGradient(x1, y1, x2, y2);\n        parsePaintServerUnit(xmlNode, gradient);\n        parseGradientColorStops(xmlNode, gradient);\n        return gradient;\n    },\n    'radialgradient': function (xmlNode) {\n        var cx = parseInt(xmlNode.getAttribute('cx') || '0', 10);\n        var cy = parseInt(xmlNode.getAttribute('cy') || '0', 10);\n        var r = parseInt(xmlNode.getAttribute('r') || '0', 10);\n        var gradient = new RadialGradient(cx, cy, r);\n        parsePaintServerUnit(xmlNode, gradient);\n        parseGradientColorStops(xmlNode, gradient);\n        return gradient;\n    }\n};\nfunction parsePaintServerUnit(xmlNode, gradient) {\n    var gradientUnits = xmlNode.getAttribute('gradientUnits');\n    if (gradientUnits === 'userSpaceOnUse') {\n        gradient.global = true;\n    }\n}\nfunction parseGradientColorStops(xmlNode, gradient) {\n    var stop = xmlNode.firstChild;\n    while (stop) {\n        if (stop.nodeType === 1\n            && stop.nodeName.toLocaleLowerCase() === 'stop') {\n            var offsetStr = stop.getAttribute('offset');\n            var offset = void 0;\n            if (offsetStr && offsetStr.indexOf('%') > 0) {\n                offset = parseInt(offsetStr, 10) / 100;\n            }\n            else if (offsetStr) {\n                offset = parseFloat(offsetStr);\n            }\n            else {\n                offset = 0;\n            }\n            var styleVals = {};\n            parseInlineStyle(stop, styleVals, styleVals);\n            var stopColor = styleVals.stopColor\n                || stop.getAttribute('stop-color')\n                || '#000000';\n            gradient.colorStops.push({\n                offset: offset,\n                color: stopColor\n            });\n        }\n        stop = stop.nextSibling;\n    }\n}\nfunction inheritStyle(parent, child) {\n    if (parent && parent.__inheritedStyle) {\n        if (!child.__inheritedStyle) {\n            child.__inheritedStyle = {};\n        }\n        defaults(child.__inheritedStyle, parent.__inheritedStyle);\n    }\n}\nfunction parsePoints(pointsString) {\n    var list = splitNumberSequence(pointsString);\n    var points = [];\n    for (var i = 0; i < list.length; i += 2) {\n        var x = parseFloat(list[i]);\n        var y = parseFloat(list[i + 1]);\n        points.push([x, y]);\n    }\n    return points;\n}\nfunction parseAttributes(xmlNode, el, defsUsePending, onlyInlineStyle, isTextGroup) {\n    var disp = el;\n    var inheritedStyle = disp.__inheritedStyle = disp.__inheritedStyle || {};\n    var selfStyle = {};\n    if (xmlNode.nodeType === 1) {\n        parseTransformAttribute(xmlNode, el);\n        parseInlineStyle(xmlNode, inheritedStyle, selfStyle);\n        if (!onlyInlineStyle) {\n            parseAttributeStyle(xmlNode, inheritedStyle, selfStyle);\n        }\n    }\n    disp.style = disp.style || {};\n    if (inheritedStyle.fill != null) {\n        disp.style.fill = getFillStrokeStyle(disp, 'fill', inheritedStyle.fill, defsUsePending);\n    }\n    if (inheritedStyle.stroke != null) {\n        disp.style.stroke = getFillStrokeStyle(disp, 'stroke', inheritedStyle.stroke, defsUsePending);\n    }\n    each([\n        'lineWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'miterLimit', 'fontSize'\n    ], function (propName) {\n        if (inheritedStyle[propName] != null) {\n            disp.style[propName] = parseFloat(inheritedStyle[propName]);\n        }\n    });\n    each([\n        'lineDashOffset', 'lineCap', 'lineJoin', 'fontWeight', 'fontFamily', 'fontStyle', 'textAlign'\n    ], function (propName) {\n        if (inheritedStyle[propName] != null) {\n            disp.style[propName] = inheritedStyle[propName];\n        }\n    });\n    if (isTextGroup) {\n        disp.__selfStyle = selfStyle;\n    }\n    if (inheritedStyle.lineDash) {\n        disp.style.lineDash = map(splitNumberSequence(inheritedStyle.lineDash), function (str) {\n            return parseFloat(str);\n        });\n    }\n    if (inheritedStyle.visibility === 'hidden' || inheritedStyle.visibility === 'collapse') {\n        disp.invisible = true;\n    }\n    if (inheritedStyle.display === 'none') {\n        disp.ignore = true;\n    }\n}\nfunction applyTextAlignment(text, parentGroup) {\n    var parentSelfStyle = parentGroup.__selfStyle;\n    if (parentSelfStyle) {\n        var textBaseline = parentSelfStyle.textBaseline;\n        var zrTextBaseline = textBaseline;\n        if (!textBaseline || textBaseline === 'auto') {\n            zrTextBaseline = 'alphabetic';\n        }\n        else if (textBaseline === 'baseline') {\n            zrTextBaseline = 'alphabetic';\n        }\n        else if (textBaseline === 'before-edge' || textBaseline === 'text-before-edge') {\n            zrTextBaseline = 'top';\n        }\n        else if (textBaseline === 'after-edge' || textBaseline === 'text-after-edge') {\n            zrTextBaseline = 'bottom';\n        }\n        else if (textBaseline === 'central' || textBaseline === 'mathematical') {\n            zrTextBaseline = 'middle';\n        }\n        text.style.textBaseline = zrTextBaseline;\n    }\n    var parentInheritedStyle = parentGroup.__inheritedStyle;\n    if (parentInheritedStyle) {\n        var textAlign = parentInheritedStyle.textAlign;\n        var zrTextAlign = textAlign;\n        if (textAlign) {\n            if (textAlign === 'middle') {\n                zrTextAlign = 'center';\n            }\n            text.style.textAlign = zrTextAlign;\n        }\n    }\n}\nvar urlRegex = /^url\\(\\s*#(.*?)\\)/;\nfunction getFillStrokeStyle(el, method, str, defsUsePending) {\n    var urlMatch = str && str.match(urlRegex);\n    if (urlMatch) {\n        var url = trim(urlMatch[1]);\n        defsUsePending.push([el, method, url]);\n        return;\n    }\n    if (str === 'none') {\n        str = null;\n    }\n    return str;\n}\nfunction applyDefs(defs, defsUsePending) {\n    for (var i = 0; i < defsUsePending.length; i++) {\n        var item = defsUsePending[i];\n        item[0].style[item[1]] = defs[item[2]];\n    }\n}\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g;\nfunction splitNumberSequence(rawStr) {\n    return rawStr.match(numberReg) || [];\n}\nvar transformRegex = /(translate|scale|rotate|skewX|skewY|matrix)\\(([\\-\\s0-9\\.eE,]*)\\)/g;\nvar DEGREE_TO_ANGLE = Math.PI / 180;\nfunction parseTransformAttribute(xmlNode, node) {\n    var transform = xmlNode.getAttribute('transform');\n    if (transform) {\n        transform = transform.replace(/,/g, ' ');\n        var transformOps_1 = [];\n        var mt = null;\n        transform.replace(transformRegex, function (str, type, value) {\n            transformOps_1.push(type, value);\n            return '';\n        });\n        for (var i = transformOps_1.length - 1; i > 0; i -= 2) {\n            var value = transformOps_1[i];\n            var type = transformOps_1[i - 1];\n            var valueArr = splitNumberSequence(value);\n            mt = mt || matrix.create();\n            switch (type) {\n                case 'translate':\n                    matrix.translate(mt, mt, [parseFloat(valueArr[0]), parseFloat(valueArr[1] || '0')]);\n                    break;\n                case 'scale':\n                    matrix.scale(mt, mt, [parseFloat(valueArr[0]), parseFloat(valueArr[1] || valueArr[0])]);\n                    break;\n                case 'rotate':\n                    matrix.rotate(mt, mt, -parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n                    break;\n                case 'skewX':\n                    var sx = Math.tan(parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n                    matrix.mul(mt, [1, 0, sx, 1, 0, 0], mt);\n                    break;\n                case 'skewY':\n                    var sy = Math.tan(parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n                    matrix.mul(mt, [1, sy, 0, 1, 0, 0], mt);\n                    break;\n                case 'matrix':\n                    mt[0] = parseFloat(valueArr[0]);\n                    mt[1] = parseFloat(valueArr[1]);\n                    mt[2] = parseFloat(valueArr[2]);\n                    mt[3] = parseFloat(valueArr[3]);\n                    mt[4] = parseFloat(valueArr[4]);\n                    mt[5] = parseFloat(valueArr[5]);\n                    break;\n            }\n        }\n        node.setLocalTransform(mt);\n    }\n}\nvar styleRegex = /([^\\s:;]+)\\s*:\\s*([^:;]+)/g;\nfunction parseInlineStyle(xmlNode, inheritableStyleResult, selfStyleResult) {\n    var style = xmlNode.getAttribute('style');\n    if (!style) {\n        return;\n    }\n    styleRegex.lastIndex = 0;\n    var styleRegResult;\n    while ((styleRegResult = styleRegex.exec(style)) != null) {\n        var svgStlAttr = styleRegResult[1];\n        var zrInheritableStlAttr = hasOwn(INHERITABLE_STYLE_ATTRIBUTES_MAP, svgStlAttr)\n            ? INHERITABLE_STYLE_ATTRIBUTES_MAP[svgStlAttr]\n            : null;\n        if (zrInheritableStlAttr) {\n            inheritableStyleResult[zrInheritableStlAttr] = styleRegResult[2];\n        }\n        var zrSelfStlAttr = hasOwn(SELF_STYLE_ATTRIBUTES_MAP, svgStlAttr)\n            ? SELF_STYLE_ATTRIBUTES_MAP[svgStlAttr]\n            : null;\n        if (zrSelfStlAttr) {\n            selfStyleResult[zrSelfStlAttr] = styleRegResult[2];\n        }\n    }\n}\nfunction parseAttributeStyle(xmlNode, inheritableStyleResult, selfStyleResult) {\n    for (var i = 0; i < INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS.length; i++) {\n        var svgAttrName = INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS[i];\n        var attrValue = xmlNode.getAttribute(svgAttrName);\n        if (attrValue != null) {\n            inheritableStyleResult[INHERITABLE_STYLE_ATTRIBUTES_MAP[svgAttrName]] = attrValue;\n        }\n    }\n    for (var i = 0; i < SELF_STYLE_ATTRIBUTES_MAP_KEYS.length; i++) {\n        var svgAttrName = SELF_STYLE_ATTRIBUTES_MAP_KEYS[i];\n        var attrValue = xmlNode.getAttribute(svgAttrName);\n        if (attrValue != null) {\n            selfStyleResult[SELF_STYLE_ATTRIBUTES_MAP[svgAttrName]] = attrValue;\n        }\n    }\n}\nexport function makeViewBoxTransform(viewBoxRect, boundingRect) {\n    var scaleX = boundingRect.width / viewBoxRect.width;\n    var scaleY = boundingRect.height / viewBoxRect.height;\n    var scale = Math.min(scaleX, scaleY);\n    return {\n        scale: scale,\n        x: -(viewBoxRect.x + viewBoxRect.width / 2) * scale + (boundingRect.x + boundingRect.width / 2),\n        y: -(viewBoxRect.y + viewBoxRect.height / 2) * scale + (boundingRect.y + boundingRect.height / 2)\n    };\n}\nexport function parseSVG(xml, opt) {\n    var parser = new SVGParser();\n    return parser.parse(xml, opt);\n}\nexport { parseXML };\n","import { isString } from '../core/util.js';\nexport function parseXML(svg) {\n    if (isString(svg)) {\n        var parser = new DOMParser();\n        svg = parser.parseFromString(svg, 'text/xml');\n    }\n    var svgNode = svg;\n    if (svgNode.nodeType === 9) {\n        svgNode = svgNode.firstChild;\n    }\n    while (svgNode.nodeName.toLowerCase() !== 'svg' || svgNode.nodeType !== 1) {\n        svgNode = svgNode.nextSibling;\n    }\n    return svgNode;\n}\n","import { __extends } from \"tslib\";\nimport Path from '../graphic/Path.js';\nimport PathProxy from '../core/PathProxy.js';\nimport transformPath from './transformPath.js';\nimport { extend } from '../core/util.js';\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nfunction vMag(v) {\n    return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n;\nfunction vRatio(u, v) {\n    return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n}\n;\nfunction vAngle(u, v) {\n    return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n        * Math.acos(vRatio(u, v));\n}\n;\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n    var psi = psiDeg * (PI / 180.0);\n    var xp = mathCos(psi) * (x1 - x2) / 2.0\n        + mathSin(psi) * (y1 - y2) / 2.0;\n    var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n        + mathCos(psi) * (y1 - y2) / 2.0;\n    var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n    if (lambda > 1) {\n        rx *= mathSqrt(lambda);\n        ry *= mathSqrt(lambda);\n    }\n    var f = (fa === fs ? -1 : 1)\n        * mathSqrt((((rx * rx) * (ry * ry))\n            - ((rx * rx) * (yp * yp))\n            - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n            + (ry * ry) * (xp * xp))) || 0;\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n    var cx = (x1 + x2) / 2.0\n        + mathCos(psi) * cxp\n        - mathSin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0\n        + mathSin(psi) * cxp\n        + mathCos(psi) * cyp;\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n    if (vRatio(u, v) <= -1) {\n        dTheta = PI;\n    }\n    if (vRatio(u, v) >= 1) {\n        dTheta = 0;\n    }\n    if (dTheta < 0) {\n        var n = Math.round(dTheta / PI * 1e6) / 1e6;\n        dTheta = PI * 2 + (n % 2) * PI;\n    }\n    path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\nvar commandReg = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig;\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g;\nfunction createPathProxyFromString(data) {\n    var path = new PathProxy();\n    if (!data) {\n        return path;\n    }\n    var cpx = 0;\n    var cpy = 0;\n    var subpathX = cpx;\n    var subpathY = cpy;\n    var prevCmd;\n    var CMD = PathProxy.CMD;\n    var cmdList = data.match(commandReg);\n    if (!cmdList) {\n        return path;\n    }\n    for (var l = 0; l < cmdList.length; l++) {\n        var cmdText = cmdList[l];\n        var cmdStr = cmdText.charAt(0);\n        var cmd = void 0;\n        var p = cmdText.match(numberReg) || [];\n        var pLen = p.length;\n        for (var i = 0; i < pLen; i++) {\n            p[i] = parseFloat(p[i]);\n        }\n        var off = 0;\n        while (off < pLen) {\n            var ctlPtx = void 0;\n            var ctlPty = void 0;\n            var rx = void 0;\n            var ry = void 0;\n            var psi = void 0;\n            var fa = void 0;\n            var fs = void 0;\n            var x1 = cpx;\n            var y1 = cpy;\n            var len = void 0;\n            var pathData = void 0;\n            switch (cmdStr) {\n                case 'l':\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'L':\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'm':\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.M;\n                    path.addData(cmd, cpx, cpy);\n                    subpathX = cpx;\n                    subpathY = cpy;\n                    cmdStr = 'l';\n                    break;\n                case 'M':\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.M;\n                    path.addData(cmd, cpx, cpy);\n                    subpathX = cpx;\n                    subpathY = cpy;\n                    cmdStr = 'L';\n                    break;\n                case 'h':\n                    cpx += p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'H':\n                    cpx = p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'v':\n                    cpy += p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'V':\n                    cpy = p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'C':\n                    cmd = CMD.C;\n                    path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n                    cpx = p[off - 2];\n                    cpy = p[off - 1];\n                    break;\n                case 'c':\n                    cmd = CMD.C;\n                    path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n                    cpx += p[off - 2];\n                    cpy += p[off - 1];\n                    break;\n                case 'S':\n                    ctlPtx = cpx;\n                    ctlPty = cpy;\n                    len = path.len();\n                    pathData = path.data;\n                    if (prevCmd === CMD.C) {\n                        ctlPtx += cpx - pathData[len - 4];\n                        ctlPty += cpy - pathData[len - 3];\n                    }\n                    cmd = CMD.C;\n                    x1 = p[off++];\n                    y1 = p[off++];\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                    break;\n                case 's':\n                    ctlPtx = cpx;\n                    ctlPty = cpy;\n                    len = path.len();\n                    pathData = path.data;\n                    if (prevCmd === CMD.C) {\n                        ctlPtx += cpx - pathData[len - 4];\n                        ctlPty += cpy - pathData[len - 3];\n                    }\n                    cmd = CMD.C;\n                    x1 = cpx + p[off++];\n                    y1 = cpy + p[off++];\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                    break;\n                case 'Q':\n                    x1 = p[off++];\n                    y1 = p[off++];\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.Q;\n                    path.addData(cmd, x1, y1, cpx, cpy);\n                    break;\n                case 'q':\n                    x1 = p[off++] + cpx;\n                    y1 = p[off++] + cpy;\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.Q;\n                    path.addData(cmd, x1, y1, cpx, cpy);\n                    break;\n                case 'T':\n                    ctlPtx = cpx;\n                    ctlPty = cpy;\n                    len = path.len();\n                    pathData = path.data;\n                    if (prevCmd === CMD.Q) {\n                        ctlPtx += cpx - pathData[len - 4];\n                        ctlPty += cpy - pathData[len - 3];\n                    }\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.Q;\n                    path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                    break;\n                case 't':\n                    ctlPtx = cpx;\n                    ctlPty = cpy;\n                    len = path.len();\n                    pathData = path.data;\n                    if (prevCmd === CMD.Q) {\n                        ctlPtx += cpx - pathData[len - 4];\n                        ctlPty += cpy - pathData[len - 3];\n                    }\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.Q;\n                    path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                    break;\n                case 'A':\n                    rx = p[off++];\n                    ry = p[off++];\n                    psi = p[off++];\n                    fa = p[off++];\n                    fs = p[off++];\n                    x1 = cpx, y1 = cpy;\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.A;\n                    processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n                    break;\n                case 'a':\n                    rx = p[off++];\n                    ry = p[off++];\n                    psi = p[off++];\n                    fa = p[off++];\n                    fs = p[off++];\n                    x1 = cpx, y1 = cpy;\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.A;\n                    processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n                    break;\n            }\n        }\n        if (cmdStr === 'z' || cmdStr === 'Z') {\n            cmd = CMD.Z;\n            path.addData(cmd);\n            cpx = subpathX;\n            cpy = subpathY;\n        }\n        prevCmd = cmd;\n    }\n    path.toStatic();\n    return path;\n}\nvar SVGPath = (function (_super) {\n    __extends(SVGPath, _super);\n    function SVGPath() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SVGPath.prototype.applyTransform = function (m) { };\n    return SVGPath;\n}(Path));\nfunction isPathProxy(path) {\n    return path.setData != null;\n}\nfunction createPathOptions(str, opts) {\n    var pathProxy = createPathProxyFromString(str);\n    var innerOpts = extend({}, opts);\n    innerOpts.buildPath = function (path) {\n        if (isPathProxy(path)) {\n            path.setData(pathProxy.data);\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx, 1);\n            }\n        }\n        else {\n            var ctx = path;\n            pathProxy.rebuildPath(ctx, 1);\n        }\n    };\n    innerOpts.applyTransform = function (m) {\n        transformPath(pathProxy, m);\n        this.dirtyShape();\n    };\n    return innerOpts;\n}\nexport function createFromString(str, opts) {\n    return new SVGPath(createPathOptions(str, opts));\n}\nexport function extendFromString(str, defaultOpts) {\n    var innerOpts = createPathOptions(str, defaultOpts);\n    var Sub = (function (_super) {\n        __extends(Sub, _super);\n        function Sub(opts) {\n            var _this = _super.call(this, opts) || this;\n            _this.applyTransform = innerOpts.applyTransform;\n            _this.buildPath = innerOpts.buildPath;\n            return _this;\n        }\n        return Sub;\n    }(SVGPath));\n    return Sub;\n}\nexport function mergePath(pathEls, opts) {\n    var pathList = [];\n    var len = pathEls.length;\n    for (var i = 0; i < len; i++) {\n        var pathEl = pathEls[i];\n        pathList.push(pathEl.getUpdatedPathProxy(true));\n    }\n    var pathBundle = new Path(opts);\n    pathBundle.createPathProxy();\n    pathBundle.buildPath = function (path) {\n        if (isPathProxy(path)) {\n            path.appendPath(pathList);\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx, 1);\n            }\n        }\n    };\n    return pathBundle;\n}\nexport function clonePath(sourcePath, opts) {\n    opts = opts || {};\n    var path = new Path();\n    if (sourcePath.shape) {\n        path.setShape(sourcePath.shape);\n    }\n    path.setStyle(sourcePath.style);\n    if (opts.bakeTransform) {\n        transformPath(path.path, sourcePath.getComputedTransform());\n    }\n    else {\n        if (opts.toLocal) {\n            path.setLocalTransform(sourcePath.getComputedTransform());\n        }\n        else {\n            path.copyTransform(sourcePath);\n        }\n    }\n    path.buildPath = sourcePath.buildPath;\n    path.applyTransform = path.applyTransform;\n    path.z = sourcePath.z;\n    path.z2 = sourcePath.z2;\n    path.zlevel = sourcePath.zlevel;\n    return path;\n}\n"],"names":["nodeParsers","INHERITABLE_STYLE_ATTRIBUTES_MAP","INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS","keys","SELF_STYLE_ATTRIBUTES_MAP","SELF_STYLE_ATTRIBUTES_MAP_KEYS","SVGParser","this","_defs","_root","prototype","parse","xml","opt","svg","parseXML","_defsUsePending","root","Group","named","viewBox","getAttribute","width","parseFloat","height","isNaN","parseAttributes","viewBoxRect","viewBoxTransform","child","firstChild","_parseNode","nextSibling","defs","defsUsePending","i","length","item","style","applyDefs","viewBoxArr","splitNumberSequence","x","y","makeViewBoxTransform","ignoreViewBox","elRoot","add","scaleX","scaleY","scale","ignoreRootClip","setClipPath","Rect","shape","xmlNode","parentGroup","namedFrom","isInDefs","isInText","el","nodeName","toLowerCase","namedFromForSub","parser_1","hasOwn","call","nameAttr","newNamed","name","svgNodeTagLower","push","parser","paintServerParsers","def","id","isGroup","nodeType","_parseText","text","TSpan","textContent","silent","_textX","_textY","inheritStyle","parentSelfStyle","__selfStyle","textBaseline","zrTextBaseline","parentInheritedStyle","__inheritedStyle","textAlign","zrTextAlign","applyTextAlignment","textStyle","fontSize","font","fontFamily","fontStyle","fontWeight","join","rect","getBoundingRect","internalField","g","setShape","circle","Circle","cx","cy","r","line","Line","x1","y1","x2","y2","ellipse","Ellipse","rx","ry","pointsArr","pointsStr","parsePoints","polygon","Polygon","points","polyline","Polyline","img","ZRImage","setStyle","image","dx","dy","d","path","createFromString","parseInt","gradient","LinearGradient","parsePaintServerUnit","parseGradientColorStops","RadialGradient","global","stop","toLocaleLowerCase","offsetStr","offset","indexOf","styleVals","parseInlineStyle","stopColor","colorStops","color","parent","defaults","pointsString","list","onlyInlineStyle","isTextGroup","disp","inheritedStyle","selfStyle","node","transform","replace","transformOps_1","mt","transformRegex","str","type","value","valueArr","matrix","DEGREE_TO_ANGLE","sx","Math","tan","sy","setLocalTransform","parseTransformAttribute","inheritableStyleResult","selfStyleResult","svgAttrName","attrValue","parseAttributeStyle","fill","getFillStrokeStyle","stroke","each","propName","lineDash","map","visibility","invisible","display","ignore","urlRegex","method","urlMatch","match","url","trim","numberReg","rawStr","PI","styleRegex","styleRegResult","lastIndex","exec","svgStlAttr","zrInheritableStlAttr","zrSelfStlAttr","boundingRect","min","parseSVG","isString","DOMParser","parseFromString","svgNode","mathSqrt","sqrt","mathSin","sin","mathCos","cos","vMag","v","vRatio","u","vAngle","acos","processArc","fa","fs","psiDeg","cmd","psi","xp","yp","lambda","f","cxp","cyp","theta","dTheta","n","round","addData","commandReg","SVGPath","_super","apply","arguments","__extends","applyTransform","m","Path","isPathProxy","setData","createPathOptions","opts","pathProxy","data","PathProxy","prevCmd","cpx","cpy","subpathX","subpathY","CMD","cmdList","l","cmdText","cmdStr","charAt","p","pLen","off","ctlPtx","ctlPty","len","pathData","L","M","C","Q","A","Z","toStatic","createPathProxyFromString","innerOpts","extend","buildPath","ctx","getContext","rebuildPath","transformPath","dirtyShape","extendFromString","defaultOpts","Sub","_this","mergePath","pathEls","pathList","pathEl","getUpdatedPathProxy","pathBundle","createPathProxy","appendPath","clonePath","sourcePath","bakeTransform","getComputedTransform","toLocal","copyTransform","z","z2","zlevel"],"sourceRoot":""}