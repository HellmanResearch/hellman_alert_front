{"version":3,"file":"static/js/2258.ba5632fe.js","mappings":"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","sources":["../node_modules/echarts/lib/coord/cartesian/AxisModel.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport ComponentModel from '../../model/Component.js';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin.js';\nimport { SINGLE_REFERRING } from '../../util/model.js';\n\nvar CartesianAxisModel =\n/** @class */\nfunction (_super) {\n  __extends(CartesianAxisModel, _super);\n\n  function CartesianAxisModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CartesianAxisModel.prototype.getCoordSysModel = function () {\n    return this.getReferringComponents('grid', SINGLE_REFERRING).models[0];\n  };\n\n  CartesianAxisModel.type = 'cartesian2dAxis';\n  return CartesianAxisModel;\n}(ComponentModel);\n\nexport { CartesianAxisModel };\nzrUtil.mixin(CartesianAxisModel, AxisModelCommonMixin);\nexport default CartesianAxisModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\n\nvar Cartesian =\n/** @class */\nfunction () {\n  function Cartesian(name) {\n    this.type = 'cartesian';\n    this._dimList = [];\n    this._axes = {};\n    this.name = name || '';\n  }\n\n  Cartesian.prototype.getAxis = function (dim) {\n    return this._axes[dim];\n  };\n\n  Cartesian.prototype.getAxes = function () {\n    return zrUtil.map(this._dimList, function (dim) {\n      return this._axes[dim];\n    }, this);\n  };\n\n  Cartesian.prototype.getAxesByScale = function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  };\n\n  Cartesian.prototype.addAxis = function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  };\n\n  return Cartesian;\n}();\n\n;\nexport default Cartesian;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport Cartesian from './Cartesian.js';\nimport { invert } from 'zrender/lib/core/matrix.js';\nimport { applyTransform } from 'zrender/lib/core/vector.js';\nexport var cartesian2DDimensions = ['x', 'y'];\n\nfunction canCalculateAffineTransform(scale) {\n  return scale.type === 'interval' || scale.type === 'time';\n}\n\nvar Cartesian2D =\n/** @class */\nfunction (_super) {\n  __extends(Cartesian2D, _super);\n\n  function Cartesian2D() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'cartesian2d';\n    _this.dimensions = cartesian2DDimensions;\n    return _this;\n  }\n  /**\n   * Calculate an affine transform matrix if two axes are time or value.\n   * It's mainly for accelartion on the large time series data.\n   */\n\n\n  Cartesian2D.prototype.calcAffineTransform = function () {\n    this._transform = this._invTransform = null;\n    var xAxisScale = this.getAxis('x').scale;\n    var yAxisScale = this.getAxis('y').scale;\n\n    if (!canCalculateAffineTransform(xAxisScale) || !canCalculateAffineTransform(yAxisScale)) {\n      return;\n    }\n\n    var xScaleExtent = xAxisScale.getExtent();\n    var yScaleExtent = yAxisScale.getExtent();\n    var start = this.dataToPoint([xScaleExtent[0], yScaleExtent[0]]);\n    var end = this.dataToPoint([xScaleExtent[1], yScaleExtent[1]]);\n    var xScaleSpan = xScaleExtent[1] - xScaleExtent[0];\n    var yScaleSpan = yScaleExtent[1] - yScaleExtent[0];\n\n    if (!xScaleSpan || !yScaleSpan) {\n      return;\n    } // Accelerate data to point calculation on the special large time series data.\n\n\n    var scaleX = (end[0] - start[0]) / xScaleSpan;\n    var scaleY = (end[1] - start[1]) / yScaleSpan;\n    var translateX = start[0] - xScaleExtent[0] * scaleX;\n    var translateY = start[1] - yScaleExtent[0] * scaleY;\n    var m = this._transform = [scaleX, 0, 0, scaleY, translateX, translateY];\n    this._invTransform = invert([], m);\n  };\n  /**\n   * Base axis will be used on stacking.\n   */\n\n\n  Cartesian2D.prototype.getBaseAxis = function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  };\n\n  Cartesian2D.prototype.containPoint = function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  };\n\n  Cartesian2D.prototype.containData = function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  };\n\n  Cartesian2D.prototype.containZone = function (data1, data2) {\n    var zoneDiag1 = this.dataToPoint(data1);\n    var zoneDiag2 = this.dataToPoint(data2);\n    var area = this.getArea();\n    var zone = new BoundingRect(zoneDiag1[0], zoneDiag1[1], zoneDiag2[0] - zoneDiag1[0], zoneDiag2[1] - zoneDiag1[1]);\n    return area.intersect(zone);\n  };\n\n  Cartesian2D.prototype.dataToPoint = function (data, clamp, out) {\n    out = out || [];\n    var xVal = data[0];\n    var yVal = data[1]; // Fast path\n\n    if (this._transform // It's supported that if data is like `[Inifity, 123]`, where only Y pixel calculated.\n    && xVal != null && isFinite(xVal) && yVal != null && isFinite(yVal)) {\n      return applyTransform(out, data, this._transform);\n    }\n\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(xVal, clamp));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(yVal, clamp));\n    return out;\n  };\n\n  Cartesian2D.prototype.clampData = function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  };\n\n  Cartesian2D.prototype.pointToData = function (point, clamp) {\n    var out = [];\n\n    if (this._invTransform) {\n      return applyTransform(out, point, this._invTransform);\n    }\n\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp);\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp);\n    return out;\n  };\n\n  Cartesian2D.prototype.getOtherAxis = function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  };\n  /**\n   * Get rect area of cartesian.\n   * Area will have a contain function to determine if a point is in the coordinate system.\n   */\n\n\n  Cartesian2D.prototype.getArea = function () {\n    var xExtent = this.getAxis('x').getGlobalExtent();\n    var yExtent = this.getAxis('y').getGlobalExtent();\n    var x = Math.min(xExtent[0], xExtent[1]);\n    var y = Math.min(yExtent[0], yExtent[1]);\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\n    return new BoundingRect(x, y, width, height);\n  };\n\n  return Cartesian2D;\n}(Cartesian);\n\n;\nexport default Cartesian2D;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Axis from '../Axis.js';\n\nvar Axis2D =\n/** @class */\nfunction (_super) {\n  __extends(Axis2D, _super);\n\n  function Axis2D(dim, scale, coordExtent, axisType, position) {\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\n    /**\n     * Index of axis, can be used as key\n     * Injected outside.\n     */\n\n\n    _this.index = 0;\n    _this.type = axisType || 'value';\n    _this.position = position || 'bottom';\n    return _this;\n  }\n\n  Axis2D.prototype.isHorizontal = function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  };\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n\n\n  Axis2D.prototype.getGlobalExtent = function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  };\n\n  Axis2D.prototype.pointToData = function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  };\n  /**\n   * Set ordinalSortInfo\n   * @param info new OrdinalSortInfo\n   */\n\n\n  Axis2D.prototype.setCategorySortInfo = function (info) {\n    if (this.type !== 'category') {\n      return false;\n    }\n\n    this.model.option.categorySortInfo = info;\n    this.scale.setSortInfo(info);\n  };\n\n  return Axis2D;\n}(Axis);\n\nexport default Axis2D;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nimport { isObject, each, indexOf, retrieve3, keys } from 'zrender/lib/core/util.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport { createScaleByModel, ifAxisCrossZero, niceScaleExtent, estimateLabelUnionRect, getDataDimensionsOnAxis } from '../../coord/axisHelper.js';\nimport Cartesian2D, { cartesian2DDimensions } from './Cartesian2D.js';\nimport Axis2D from './Axis2D.js';\nimport { SINGLE_REFERRING } from '../../util/model.js';\nimport { isCartesian2DSeries, findAxisModels } from './cartesianAxisHelper.js';\nimport { isIntervalOrLogScale } from '../../scale/helper.js';\nimport { alignScaleTicks } from '../axisAlignTicks.js';\n\nvar Grid =\n/** @class */\nfunction () {\n  function Grid(gridModel, ecModel, api) {\n    // FIXME:TS where used (different from registered type 'cartesian2d')?\n    this.type = 'grid';\n    this._coordsMap = {};\n    this._coordsList = [];\n    this._axesMap = {};\n    this._axesList = [];\n    this.axisPointerEnabled = true;\n    this.dimensions = cartesian2DDimensions;\n\n    this._initCartesian(gridModel, ecModel, api);\n\n    this.model = gridModel;\n  }\n\n  Grid.prototype.getRect = function () {\n    return this._rect;\n  };\n\n  Grid.prototype.update = function (ecModel, api) {\n    var axesMap = this._axesMap;\n\n    this._updateScale(ecModel, this.model);\n\n    function updateAxisTicks(axes) {\n      var alignTo; // Axis is added in order of axisIndex.\n\n      var axesIndices = keys(axes);\n      var len = axesIndices.length;\n\n      if (!len) {\n        return;\n      }\n\n      var axisNeedsAlign = []; // Process once and calculate the ticks for those don't use alignTicks.\n\n      for (var i = len - 1; i >= 0; i--) {\n        var idx = +axesIndices[i]; // Convert to number.\n\n        var axis = axes[idx];\n        var model = axis.model;\n        var scale = axis.scale;\n\n        if ( // Only value and log axis without interval support alignTicks.\n        isIntervalOrLogScale(scale) && model.get('alignTicks') && model.get('interval') == null) {\n          axisNeedsAlign.push(axis);\n        } else {\n          niceScaleExtent(scale, model);\n\n          if (isIntervalOrLogScale(scale)) {\n            // Can only align to interval or log axis.\n            alignTo = axis;\n          }\n        }\n      }\n\n      ; // All axes has set alignTicks. Pick the first one.\n      // PENDING. Should we find the axis that both set interval, min, max and align to this one?\n\n      if (axisNeedsAlign.length) {\n        if (!alignTo) {\n          alignTo = axisNeedsAlign.pop();\n          niceScaleExtent(alignTo.scale, alignTo.model);\n        }\n\n        each(axisNeedsAlign, function (axis) {\n          alignScaleTicks(axis.scale, axis.model, alignTo.scale);\n        });\n      }\n    }\n\n    updateAxisTicks(axesMap.x);\n    updateAxisTicks(axesMap.y); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n    var onZeroRecords = {};\n    each(axesMap.x, function (xAxis) {\n      fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n    });\n    each(axesMap.y, function (yAxis) {\n      fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n    }); // Resize again if containLabel is enabled\n    // FIXME It may cause getting wrong grid size in data processing stage\n\n    this.resize(this.model, api);\n  };\n  /**\n   * Resize the grid\n   */\n\n\n  Grid.prototype.resize = function (gridModel, api, ignoreContainLabel) {\n    var boxLayoutParams = gridModel.getBoxLayoutParams();\n    var isContainLabel = !ignoreContainLabel && gridModel.get('containLabel');\n    var gridRect = getLayoutRect(boxLayoutParams, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    this._rect = gridRect;\n    var axesList = this._axesList;\n    adjustAxes(); // Minus label size\n\n    if (isContainLabel) {\n      each(axesList, function (axis) {\n        if (!axis.model.get(['axisLabel', 'inside'])) {\n          var labelUnionRect = estimateLabelUnionRect(axis);\n\n          if (labelUnionRect) {\n            var dim = axis.isHorizontal() ? 'height' : 'width';\n            var margin = axis.model.get(['axisLabel', 'margin']);\n            gridRect[dim] -= labelUnionRect[dim] + margin;\n\n            if (axis.position === 'top') {\n              gridRect.y += labelUnionRect.height + margin;\n            } else if (axis.position === 'left') {\n              gridRect.x += labelUnionRect.width + margin;\n            }\n          }\n        }\n      });\n      adjustAxes();\n    }\n\n    each(this._coordsList, function (coord) {\n      // Calculate affine matrix to accelerate the data to point transform.\n      // If all the axes scales are time or value.\n      coord.calcAffineTransform();\n    });\n\n    function adjustAxes() {\n      each(axesList, function (axis) {\n        var isHorizontal = axis.isHorizontal();\n        var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n        var idx = axis.inverse ? 1 : 0;\n        axis.setExtent(extent[idx], extent[1 - idx]);\n        updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n      });\n    }\n  };\n\n  Grid.prototype.getAxis = function (dim, axisIndex) {\n    var axesMapOnDim = this._axesMap[dim];\n\n    if (axesMapOnDim != null) {\n      return axesMapOnDim[axisIndex || 0];\n    }\n  };\n\n  Grid.prototype.getAxes = function () {\n    return this._axesList.slice();\n  };\n\n  Grid.prototype.getCartesian = function (xAxisIndex, yAxisIndex) {\n    if (xAxisIndex != null && yAxisIndex != null) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      return this._coordsMap[key];\n    }\n\n    if (isObject(xAxisIndex)) {\n      yAxisIndex = xAxisIndex.yAxisIndex;\n      xAxisIndex = xAxisIndex.xAxisIndex;\n    }\n\n    for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n      if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n        return coordList[i];\n      }\n    }\n  };\n\n  Grid.prototype.getCartesians = function () {\n    return this._coordsList.slice();\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.convertToPixel = function (ecModel, finder, value) {\n    var target = this._findConvertTarget(finder);\n\n    return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.convertFromPixel = function (ecModel, finder, value) {\n    var target = this._findConvertTarget(finder);\n\n    return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n  };\n\n  Grid.prototype._findConvertTarget = function (finder) {\n    var seriesModel = finder.seriesModel;\n    var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis', SINGLE_REFERRING).models[0];\n    var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis', SINGLE_REFERRING).models[0];\n    var gridModel = finder.gridModel;\n    var coordsList = this._coordsList;\n    var cartesian;\n    var axis;\n\n    if (seriesModel) {\n      cartesian = seriesModel.coordinateSystem;\n      indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n    } else if (xAxisModel && yAxisModel) {\n      cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n    } else if (xAxisModel) {\n      axis = this.getAxis('x', xAxisModel.componentIndex);\n    } else if (yAxisModel) {\n      axis = this.getAxis('y', yAxisModel.componentIndex);\n    } // Lowest priority.\n    else if (gridModel) {\n        var grid = gridModel.coordinateSystem;\n\n        if (grid === this) {\n          cartesian = this._coordsList[0];\n        }\n      }\n\n    return {\n      cartesian: cartesian,\n      axis: axis\n    };\n  };\n  /**\n   * @implements\n   */\n\n\n  Grid.prototype.containPoint = function (point) {\n    var coord = this._coordsList[0];\n\n    if (coord) {\n      return coord.containPoint(point);\n    }\n  };\n  /**\n   * Initialize cartesian coordinate systems\n   */\n\n\n  Grid.prototype._initCartesian = function (gridModel, ecModel, api) {\n    var _this = this;\n\n    var grid = this;\n    var axisPositionUsed = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false\n    };\n    var axesMap = {\n      x: {},\n      y: {}\n    };\n    var axesCount = {\n      x: 0,\n      y: 0\n    }; /// Create axis\n\n    ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n    ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n    if (!axesCount.x || !axesCount.y) {\n      // Roll back when there no either x or y axis\n      this._axesMap = {};\n      this._axesList = [];\n      return;\n    }\n\n    this._axesMap = axesMap; /// Create cartesian2d\n\n    each(axesMap.x, function (xAxis, xAxisIndex) {\n      each(axesMap.y, function (yAxis, yAxisIndex) {\n        var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n        var cartesian = new Cartesian2D(key);\n        cartesian.master = _this;\n        cartesian.model = gridModel;\n        _this._coordsMap[key] = cartesian;\n\n        _this._coordsList.push(cartesian);\n\n        cartesian.addAxis(xAxis);\n        cartesian.addAxis(yAxis);\n      });\n    });\n\n    function createAxisCreator(dimName) {\n      return function (axisModel, idx) {\n        if (!isAxisUsedInTheGrid(axisModel, gridModel)) {\n          return;\n        }\n\n        var axisPosition = axisModel.get('position');\n\n        if (dimName === 'x') {\n          // Fix position\n          if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n            // Default bottom of X\n            axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n          }\n        } else {\n          // Fix position\n          if (axisPosition !== 'left' && axisPosition !== 'right') {\n            // Default left of Y\n            axisPosition = axisPositionUsed.left ? 'right' : 'left';\n          }\n        }\n\n        axisPositionUsed[axisPosition] = true;\n        var axis = new Axis2D(dimName, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n        var isCategory = axis.type === 'category';\n        axis.onBand = isCategory && axisModel.get('boundaryGap');\n        axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n        axisModel.axis = axis; // Inject axisModel into axis\n\n        axis.model = axisModel; // Inject grid info axis\n\n        axis.grid = grid; // Index of axis, can be used as key\n\n        axis.index = idx;\n\n        grid._axesList.push(axis);\n\n        axesMap[dimName][idx] = axis;\n        axesCount[dimName]++;\n      };\n    }\n  };\n  /**\n   * Update cartesian properties from series.\n   */\n\n\n  Grid.prototype._updateScale = function (ecModel, gridModel) {\n    // Reset scale\n    each(this._axesList, function (axis) {\n      axis.scale.setExtent(Infinity, -Infinity);\n\n      if (axis.type === 'category') {\n        var categorySortInfo = axis.model.get('categorySortInfo');\n        axis.scale.setSortInfo(categorySortInfo);\n      }\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (isCartesian2DSeries(seriesModel)) {\n        var axesModelMap = findAxisModels(seriesModel);\n        var xAxisModel = axesModelMap.xAxisModel;\n        var yAxisModel = axesModelMap.yAxisModel;\n\n        if (!isAxisUsedInTheGrid(xAxisModel, gridModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel)) {\n          return;\n        }\n\n        var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        var data = seriesModel.getData();\n        var xAxis = cartesian.getAxis('x');\n        var yAxis = cartesian.getAxis('y');\n        unionExtent(data, xAxis);\n        unionExtent(data, yAxis);\n      }\n    }, this);\n\n    function unionExtent(data, axis) {\n      each(getDataDimensionsOnAxis(data, axis.dim), function (dim) {\n        axis.scale.unionExtentFromData(data, dim);\n      });\n    }\n  };\n  /**\n   * @param dim 'x' or 'y' or 'auto' or null/undefined\n   */\n\n\n  Grid.prototype.getTooltipAxes = function (dim) {\n    var baseAxes = [];\n    var otherAxes = [];\n    each(this.getCartesians(), function (cartesian) {\n      var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n      var otherAxis = cartesian.getOtherAxis(baseAxis);\n      indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n      indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n    });\n    return {\n      baseAxes: baseAxes,\n      otherAxes: otherAxes\n    };\n  };\n\n  Grid.create = function (ecModel, api) {\n    var grids = [];\n    ecModel.eachComponent('grid', function (gridModel, idx) {\n      var grid = new Grid(gridModel, ecModel, api);\n      grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n      // should be performed in create stage.\n\n      grid.resize(gridModel, api, true);\n      gridModel.coordinateSystem = grid;\n      grids.push(grid);\n    }); // Inject the coordinateSystems into seriesModel\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (!isCartesian2DSeries(seriesModel)) {\n        return;\n      }\n\n      var axesModelMap = findAxisModels(seriesModel);\n      var xAxisModel = axesModelMap.xAxisModel;\n      var yAxisModel = axesModelMap.yAxisModel;\n      var gridModel = xAxisModel.getCoordSysModel();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!gridModel) {\n          throw new Error('Grid \"' + retrieve3(xAxisModel.get('gridIndex'), xAxisModel.get('gridId'), 0) + '\" not found');\n        }\n\n        if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n          throw new Error('xAxis and yAxis must use the same grid');\n        }\n      }\n\n      var grid = gridModel.coordinateSystem;\n      seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n    });\n    return grids;\n  }; // For deciding which dimensions to use when creating list data\n\n\n  Grid.dimensions = cartesian2DDimensions;\n  return Grid;\n}();\n/**\n * Check if the axis is used in the specified grid.\n */\n\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, // Key: see `getOnZeroRecordKey`\nonZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get(['axisLine', 'onZero']);\n  var onZeroAxisIndex = axisModel.get(['axisLine', 'onZeroAxisIndex']);\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nexport default Grid;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentModel from '../../model/Component.js';\n\nvar GridModel =\n/** @class */\nfunction (_super) {\n  __extends(GridModel, _super);\n\n  function GridModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GridModel.type = 'grid';\n  GridModel.dependencies = ['xAxis', 'yAxis'];\n  GridModel.layoutMode = 'box';\n  GridModel.defaultOption = {\n    show: false,\n    // zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 70,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  };\n  return GridModel;\n}(ComponentModel);\n\nexport default GridModel;"],"names":["CartesianAxisModel","_super","apply","this","arguments","__extends","prototype","getCoordSysModel","getReferringComponents","SINGLE_REFERRING","models","type","ComponentModel","zrUtil","AxisModelCommonMixin","Cartesian","name","_dimList","_axes","getAxis","dim","getAxes","getAxesByScale","scaleType","toLowerCase","axis","scale","addAxis","push","cartesian2DDimensions","canCalculateAffineTransform","Cartesian2D","_this","dimensions","calcAffineTransform","_transform","_invTransform","xAxisScale","yAxisScale","xScaleExtent","getExtent","yScaleExtent","start","dataToPoint","end","xScaleSpan","yScaleSpan","scaleX","scaleY","translateX","translateY","m","invert","getBaseAxis","containPoint","point","axisX","axisY","contain","toLocalCoord","containData","data","containZone","data1","data2","zoneDiag1","zoneDiag2","area","getArea","zone","BoundingRect","intersect","clamp","out","xVal","yVal","isFinite","applyTransform","xAxis","yAxis","toGlobalCoord","dataToCoord","clampData","xScale","yScale","xAxisExtent","yAxisExtent","x","parse","y","Math","min","max","pointToData","coordToData","getOtherAxis","xExtent","getGlobalExtent","yExtent","width","height","Axis2D","coordExtent","axisType","position","call","index","isHorizontal","asc","ret","reverse","setCategorySortInfo","info","model","option","categorySortInfo","setSortInfo","Axis","Grid","gridModel","ecModel","api","_coordsMap","_coordsList","_axesMap","_axesList","axisPointerEnabled","_initCartesian","getRect","_rect","update","axesMap","updateAxisTicks","axes","alignTo","axesIndices","keys","len","length","axisNeedsAlign","i","isIntervalOrLogScale","get","niceScaleExtent","pop","each","alignScaleTicks","_updateScale","onZeroRecords","fixAxisOnZero","resize","ignoreContainLabel","boxLayoutParams","getBoxLayoutParams","isContainLabel","gridRect","getLayoutRect","getWidth","getHeight","axesList","adjustAxes","extent","idx","inverse","setExtent","coordBase","axisExtent","axisExtentSum","coord","updateAxisTransform","labelUnionRect","estimateLabelUnionRect","margin","axisIndex","axesMapOnDim","slice","getCartesian","xAxisIndex","yAxisIndex","key","isObject","coordList","getCartesians","convertToPixel","finder","value","target","_findConvertTarget","cartesian","convertFromPixel","seriesModel","xAxisModel","yAxisModel","coordsList","coordinateSystem","indexOf","componentIndex","grid","axisPositionUsed","left","right","top","bottom","axesCount","eachComponent","createAxisCreator","dimName","axisModel","isAxisUsedInTheGrid","axisPosition","createScaleByModel","isCategory","onBand","master","unionExtent","getDataDimensionsOnAxis","unionExtentFromData","Infinity","eachSeries","isCartesian2DSeries","axesModelMap","findAxisModels","getData","getTooltipAxes","baseAxes","otherAxes","baseAxis","otherAxis","create","grids","otherAxisDim","getAxesOnZeroOf","otherAxisOnZeroOf","onZero","onZeroAxisIndex","canOnZeroToAxis","hasOwnProperty","getOnZeroRecordKey","ifAxisCrossZero","GridModel","dependencies","layoutMode","defaultOption","show","z","containLabel","backgroundColor","borderWidth","borderColor"],"sourceRoot":""}