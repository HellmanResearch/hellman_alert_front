{"version":3,"file":"static/js/3200.609b590d.js","mappings":"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","sources":["../node_modules/zrender/lib/zrender.js"],"sourcesContent":["/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nimport env from './core/env.js';\nimport * as zrUtil from './core/util.js';\nimport Handler from './Handler.js';\nimport Storage from './Storage.js';\nimport Animation, { getTime } from './animation/Animation.js';\nimport HandlerProxy from './dom/HandlerProxy.js';\nimport { lum } from './tool/color.js';\nimport { DARK_MODE_THRESHOLD } from './config.js';\nimport Group from './graphic/Group.js';\nvar painterCtors = {};\nvar instances = {};\nfunction delInstance(id) {\n    delete instances[id];\n}\nfunction isDarkMode(backgroundColor) {\n    if (!backgroundColor) {\n        return false;\n    }\n    if (typeof backgroundColor === 'string') {\n        return lum(backgroundColor, 1) < DARK_MODE_THRESHOLD;\n    }\n    else if (backgroundColor.colorStops) {\n        var colorStops = backgroundColor.colorStops;\n        var totalLum = 0;\n        var len = colorStops.length;\n        for (var i = 0; i < len; i++) {\n            totalLum += lum(colorStops[i].color, 1);\n        }\n        totalLum /= len;\n        return totalLum < DARK_MODE_THRESHOLD;\n    }\n    return false;\n}\nvar ZRender = (function () {\n    function ZRender(id, dom, opts) {\n        var _this = this;\n        this._sleepAfterStill = 10;\n        this._stillFrameAccum = 0;\n        this._needsRefresh = true;\n        this._needsRefreshHover = true;\n        this._darkMode = false;\n        opts = opts || {};\n        this.dom = dom;\n        this.id = id;\n        var storage = new Storage();\n        var rendererType = opts.renderer || 'canvas';\n        if (!painterCtors[rendererType]) {\n            rendererType = zrUtil.keys(painterCtors)[0];\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!painterCtors[rendererType]) {\n                throw new Error(\"Renderer '\" + rendererType + \"' is not imported. Please import it first.\");\n            }\n        }\n        opts.useDirtyRect = opts.useDirtyRect == null\n            ? false\n            : opts.useDirtyRect;\n        var painter = new painterCtors[rendererType](dom, storage, opts, id);\n        var ssrMode = opts.ssr || painter.ssrOnly;\n        this.storage = storage;\n        this.painter = painter;\n        var handerProxy = (!env.node && !env.worker && !ssrMode)\n            ? new HandlerProxy(painter.getViewportRoot(), painter.root)\n            : null;\n        var useCoarsePointer = opts.useCoarsePointer;\n        var usePointerSize = (useCoarsePointer == null || useCoarsePointer === 'auto')\n            ? env.touchEventsSupported\n            : !!useCoarsePointer;\n        var defaultPointerSize = 44;\n        var pointerSize;\n        if (usePointerSize) {\n            pointerSize = zrUtil.retrieve2(opts.pointerSize, defaultPointerSize);\n        }\n        this.handler = new Handler(storage, painter, handerProxy, painter.root, pointerSize);\n        this.animation = new Animation({\n            stage: {\n                update: ssrMode ? null : function () { return _this._flush(true); }\n            }\n        });\n        if (!ssrMode) {\n            this.animation.start();\n        }\n    }\n    ZRender.prototype.add = function (el) {\n        if (!el) {\n            return;\n        }\n        this.storage.addRoot(el);\n        el.addSelfToZr(this);\n        this.refresh();\n    };\n    ZRender.prototype.remove = function (el) {\n        if (!el) {\n            return;\n        }\n        this.storage.delRoot(el);\n        el.removeSelfFromZr(this);\n        this.refresh();\n    };\n    ZRender.prototype.configLayer = function (zLevel, config) {\n        if (this.painter.configLayer) {\n            this.painter.configLayer(zLevel, config);\n        }\n        this.refresh();\n    };\n    ZRender.prototype.setBackgroundColor = function (backgroundColor) {\n        if (this.painter.setBackgroundColor) {\n            this.painter.setBackgroundColor(backgroundColor);\n        }\n        this.refresh();\n        this._backgroundColor = backgroundColor;\n        this._darkMode = isDarkMode(backgroundColor);\n    };\n    ZRender.prototype.getBackgroundColor = function () {\n        return this._backgroundColor;\n    };\n    ZRender.prototype.setDarkMode = function (darkMode) {\n        this._darkMode = darkMode;\n    };\n    ZRender.prototype.isDarkMode = function () {\n        return this._darkMode;\n    };\n    ZRender.prototype.refreshImmediately = function (fromInside) {\n        if (!fromInside) {\n            this.animation.update(true);\n        }\n        this._needsRefresh = false;\n        this.painter.refresh();\n        this._needsRefresh = false;\n    };\n    ZRender.prototype.refresh = function () {\n        this._needsRefresh = true;\n        this.animation.start();\n    };\n    ZRender.prototype.flush = function () {\n        this._flush(false);\n    };\n    ZRender.prototype._flush = function (fromInside) {\n        var triggerRendered;\n        var start = getTime();\n        if (this._needsRefresh) {\n            triggerRendered = true;\n            this.refreshImmediately(fromInside);\n        }\n        if (this._needsRefreshHover) {\n            triggerRendered = true;\n            this.refreshHoverImmediately();\n        }\n        var end = getTime();\n        if (triggerRendered) {\n            this._stillFrameAccum = 0;\n            this.trigger('rendered', {\n                elapsedTime: end - start\n            });\n        }\n        else if (this._sleepAfterStill > 0) {\n            this._stillFrameAccum++;\n            if (this._stillFrameAccum > this._sleepAfterStill) {\n                this.animation.stop();\n            }\n        }\n    };\n    ZRender.prototype.setSleepAfterStill = function (stillFramesCount) {\n        this._sleepAfterStill = stillFramesCount;\n    };\n    ZRender.prototype.wakeUp = function () {\n        this.animation.start();\n        this._stillFrameAccum = 0;\n    };\n    ZRender.prototype.refreshHover = function () {\n        this._needsRefreshHover = true;\n    };\n    ZRender.prototype.refreshHoverImmediately = function () {\n        this._needsRefreshHover = false;\n        if (this.painter.refreshHover && this.painter.getType() === 'canvas') {\n            this.painter.refreshHover();\n        }\n    };\n    ZRender.prototype.resize = function (opts) {\n        opts = opts || {};\n        this.painter.resize(opts.width, opts.height);\n        this.handler.resize();\n    };\n    ZRender.prototype.clearAnimation = function () {\n        this.animation.clear();\n    };\n    ZRender.prototype.getWidth = function () {\n        return this.painter.getWidth();\n    };\n    ZRender.prototype.getHeight = function () {\n        return this.painter.getHeight();\n    };\n    ZRender.prototype.setCursorStyle = function (cursorStyle) {\n        this.handler.setCursorStyle(cursorStyle);\n    };\n    ZRender.prototype.findHover = function (x, y) {\n        return this.handler.findHover(x, y);\n    };\n    ZRender.prototype.on = function (eventName, eventHandler, context) {\n        this.handler.on(eventName, eventHandler, context);\n        return this;\n    };\n    ZRender.prototype.off = function (eventName, eventHandler) {\n        this.handler.off(eventName, eventHandler);\n    };\n    ZRender.prototype.trigger = function (eventName, event) {\n        this.handler.trigger(eventName, event);\n    };\n    ZRender.prototype.clear = function () {\n        var roots = this.storage.getRoots();\n        for (var i = 0; i < roots.length; i++) {\n            if (roots[i] instanceof Group) {\n                roots[i].removeSelfFromZr(this);\n            }\n        }\n        this.storage.delAllRoots();\n        this.painter.clear();\n    };\n    ZRender.prototype.dispose = function () {\n        this.animation.stop();\n        this.clear();\n        this.storage.dispose();\n        this.painter.dispose();\n        this.handler.dispose();\n        this.animation =\n            this.storage =\n                this.painter =\n                    this.handler = null;\n        delInstance(this.id);\n    };\n    return ZRender;\n}());\nexport function init(dom, opts) {\n    var zr = new ZRender(zrUtil.guid(), dom, opts);\n    instances[zr.id] = zr;\n    return zr;\n}\nexport function dispose(zr) {\n    zr.dispose();\n}\nexport function disposeAll() {\n    for (var key in instances) {\n        if (instances.hasOwnProperty(key)) {\n            instances[key].dispose();\n        }\n    }\n    instances = {};\n}\nexport function getInstance(id) {\n    return instances[id];\n}\nexport function registerPainter(name, Ctor) {\n    painterCtors[name] = Ctor;\n}\nexport var version = '5.4.0';\n;\n"],"names":["painterCtors","instances","ZRender","id","dom","opts","_this","this","_sleepAfterStill","_stillFrameAccum","_needsRefresh","_needsRefreshHover","_darkMode","storage","Storage","rendererType","renderer","zrUtil","useDirtyRect","painter","ssrMode","ssr","ssrOnly","pointerSize","handerProxy","env","HandlerProxy","getViewportRoot","root","useCoarsePointer","handler","Handler","animation","Animation","stage","update","_flush","start","prototype","add","el","addRoot","addSelfToZr","refresh","remove","delRoot","removeSelfFromZr","configLayer","zLevel","config","setBackgroundColor","backgroundColor","_backgroundColor","lum","DARK_MODE_THRESHOLD","colorStops","totalLum","len","length","i","color","isDarkMode","getBackgroundColor","setDarkMode","darkMode","refreshImmediately","fromInside","flush","triggerRendered","getTime","refreshHoverImmediately","end","trigger","elapsedTime","stop","setSleepAfterStill","stillFramesCount","wakeUp","refreshHover","getType","resize","width","height","clearAnimation","clear","getWidth","getHeight","setCursorStyle","cursorStyle","findHover","x","y","on","eventName","eventHandler","context","off","event","roots","getRoots","Group","delAllRoots","dispose","init","zr","registerPainter","name","Ctor"],"sourceRoot":""}