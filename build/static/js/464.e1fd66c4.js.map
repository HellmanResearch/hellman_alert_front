{"version":3,"file":"static/js/464.e1fd66c4.js","mappings":"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","sources":["../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as modelUtil from '../../util/model.js';\n/**\n * @param finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param ecModel\n * @return  {point: [x, y], el: ...} point Will not be null.\n */\n\nexport default function findPointFromSeries(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    if (finder.isStacked) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var valueAxisDim = valueAxis.dim;\n      var baseAxisDim = baseAxis.dim;\n      var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n      var baseDim = data.mapDimension(baseAxisDim);\n      var stackedData = [];\n      stackedData[baseDataOffset] = data.get(baseDim, dataIndex);\n      stackedData[1 - baseDataOffset] = data.get(data.getCalculationInfo('stackResultDimension'), dataIndex);\n      point = coordSys.dataToPoint(stackedData) || [];\n    } else {\n      point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }), dataIndex)) || [];\n    }\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nexport function register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n\nexport function unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { makeInner } from '../../util/model.js';\nimport * as modelHelper from './modelHelper.js';\nimport findPointFromSeries from './findPointFromSeries.js';\nimport { each, curry, bind, extend } from 'zrender/lib/core/util.js';\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @return content of event obj for echarts.connect.\n */\n\nexport default function axisTrigger(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputPayload = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputPayload);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputPayload);\n  });\n  updateModelActually(showValueMap, axesInfo, outputPayload);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputPayload;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, noSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By default use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!noSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimensionsAll(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get(['label', 'precision']),\n      formatter: axisPointerModel.get(['label', 'formatter'])\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputPayload) {\n  var outputAxesInfo = outputPayload.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    // Not blur others when highlight in axisPointer.\n    notBlur: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    // Not blur others when highlight in axisPointer.\n    notBlur: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport AxisView from '../axis/AxisView.js';\nimport CartesianAxisPointer from './CartesianAxisPointer.js';\nimport AxisPointerModel from './AxisPointerModel.js';\nimport AxisPointerView from './AxisPointerView.js';\nimport { isArray } from 'zrender/lib/core/util.js';\nimport { collect } from './modelHelper.js';\nimport axisTrigger from './axisTrigger.js';\nexport function install(registers) {\n  // CartesianAxisPointer is not supposed to be required here. But consider\n  // echarts.simple.js and online build tooltip, which only require gridSimple,\n  // CartesianAxisPointer should be able to required somewhere.\n  AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n  registers.registerComponentModel(AxisPointerModel);\n  registers.registerComponentView(AxisPointerView);\n  registers.registerPreprocessor(function (option) {\n    // Always has a global axisPointerModel for default setting.\n    if (option) {\n      (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n      var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n      // is not set, remain null/undefined, otherwise it will\n      // override existent link setting.\n\n      if (link && !isArray(link)) {\n        option.axisPointer.link = [link];\n      }\n    }\n  }); // This process should proformed after coordinate systems created\n  // and series data processed. So put it on statistic processing stage.\n\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    ecModel.getComponent('axisPointer').coordSysAxesInfo = collect(ecModel, api);\n  }); // Broadcast to all views.\n\n  registers.registerAction({\n    type: 'updateAxisPointer',\n    event: 'updateAxisPointer',\n    update: ':updateAxisPointer'\n  }, axisTrigger);\n}"],"names":["findPointFromSeries","finder","ecModel","seriesModel","point","seriesIndex","getSeriesByIndex","data","getData","dataIndex","modelUtil","zrUtil","el","getItemGraphicEl","coordSys","coordinateSystem","getTooltipPosition","dataToPoint","isStacked","baseAxis","getBaseAxis","valueAxisDim","getOtherAxis","dim","baseAxisDim","baseDataOffset","baseDim","mapDimension","stackedData","get","getCalculationInfo","getValues","dimensions","rect","getBoundingRect","clone","applyTransform","transform","x","width","y","height","inner","makeInner","each","register","key","api","handler","env","zr","getZr","records","initialized","useHandler","eventType","cb","on","e","dis","pendings","showTip","hideTip","dispatchAction","payload","pendingList","type","push","makeDispatchAction","record","actuallyPayload","showLen","length","hideLen","dispatchTooltipFinally","doEnter","onLeave","initGlobalListeners","currTrigger","unregister","axisTrigger","bind","coordSysAxesInfo","getComponent","illegalPoint","isIllegalPoint","inputAxesInfo","axesInfo","shouldHide","outputPayload","showValueMap","dataByCoordSys","list","map","updaters","showPointer","curry","showTooltip","coordSysMap","coordSysKey","coordSysContainsPoint","containPoint","axisInfo","axis","inputAxisInfo","i","axisDim","model","componentIndex","axisIndex","findInputAxisInfo","val","value","pointToData","processOnAxis","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","scale","parse","makeMapperParam","outputAxesInfo","option","axisPointerModel","valItem","useHandle","status","seriesDataIndices","payloadBatch","slice","updateModelActually","sampleItem","dataByAxis","escapeConnect","tooltipOption","position","dataIndexInside","dispatchTooltipActually","highDownKey","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","notBlur","batch","dispatchHighDownActually","newValue","noSnap","outputFinder","isBlank","containData","involveSeries","payloadInfo","snapToValue","minDist","Number","MAX_VALUE","minDiff","seriesModels","series","idx","seriesNestestValue","dataIndices","dataDim","mapDimensionsAll","getAxisTooltipData","result","nestestValue","indicesOfNearest","isFinite","diff","dist","Math","abs","getRawIndex","buildPayloadsBySeries","extend","snap","axisModel","triggerTooltip","coordSysModel","modelHelper","coordSysItem","coordSysId","id","coordSysIndex","coordSysType","coordSysMainType","mainType","axisType","axisId","valueLabelOpt","precision","formatter","item","axisName","name","isNaN","install","registers","AxisView","CartesianAxisPointer","registerComponentModel","AxisPointerModel","registerComponentView","AxisPointerView","registerPreprocessor","axisPointer","link","isArray","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","collect","registerAction","event","update"],"sourceRoot":""}