{"version":3,"file":"static/js/7414.7d502c3c.js","mappings":"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","sources":["../node_modules/zrender/lib/graphic/constants.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/zrender/lib/graphic/helper/parseText.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/zrender/lib/graphic/helper/roundSector.js","../node_modules/zrender/lib/graphic/helper/subPixelOptimize.js"],"sourcesContent":["export var REDRAW_BIT = 1;\nexport var STYLE_CHANGED_BIT = 2;\nexport var SHAPE_CHANGED_BIT = 4;\n","import LRU from '../../core/LRU.js';\nimport { platformApi } from '../../core/platform.js';\nvar globalImageCache = new LRU(50);\nexport function findExistImage(newImageOrSrc) {\n    if (typeof newImageOrSrc === 'string') {\n        var cachedImgObj = globalImageCache.get(newImageOrSrc);\n        return cachedImgObj && cachedImgObj.image;\n    }\n    else {\n        return newImageOrSrc;\n    }\n}\nexport function createOrUpdateImage(newImageOrSrc, image, hostEl, onload, cbPayload) {\n    if (!newImageOrSrc) {\n        return image;\n    }\n    else if (typeof newImageOrSrc === 'string') {\n        if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n            return image;\n        }\n        var cachedImgObj = globalImageCache.get(newImageOrSrc);\n        var pendingWrap = { hostEl: hostEl, cb: onload, cbPayload: cbPayload };\n        if (cachedImgObj) {\n            image = cachedImgObj.image;\n            !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n        }\n        else {\n            image = platformApi.loadImage(newImageOrSrc, imageOnLoad, imageOnLoad);\n            image.__zrImageSrc = newImageOrSrc;\n            globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n                image: image,\n                pending: [pendingWrap]\n            });\n        }\n        return image;\n    }\n    else {\n        return newImageOrSrc;\n    }\n}\nfunction imageOnLoad() {\n    var cachedImgObj = this.__cachedImgObj;\n    this.onload = this.onerror = this.__cachedImgObj = null;\n    for (var i = 0; i < cachedImgObj.pending.length; i++) {\n        var pendingWrap = cachedImgObj.pending[i];\n        var cb = pendingWrap.cb;\n        cb && cb(this, pendingWrap.cbPayload);\n        pendingWrap.hostEl.dirty();\n    }\n    cachedImgObj.pending.length = 0;\n}\nexport function isImageReady(image) {\n    return image && image.width && image.height;\n}\n","import * as imageHelper from '../helper/image.js';\nimport { extend, retrieve2, retrieve3, reduce } from '../../core/util.js';\nimport { getLineHeight, getWidth, parsePercent } from '../../contain/text.js';\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nexport function truncateText(text, containerWidth, font, ellipsis, options) {\n    if (!containerWidth) {\n        return '';\n    }\n    var textLines = (text + '').split('\\n');\n    options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n    for (var i = 0, len = textLines.length; i < len; i++) {\n        textLines[i] = truncateSingleLine(textLines[i], options);\n    }\n    return textLines.join('\\n');\n}\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n    options = options || {};\n    var preparedOpts = extend({}, options);\n    preparedOpts.font = font;\n    ellipsis = retrieve2(ellipsis, '...');\n    preparedOpts.maxIterations = retrieve2(options.maxIterations, 2);\n    var minChar = preparedOpts.minChar = retrieve2(options.minChar, 0);\n    preparedOpts.cnCharWidth = getWidth('国', font);\n    var ascCharWidth = preparedOpts.ascCharWidth = getWidth('a', font);\n    preparedOpts.placeholder = retrieve2(options.placeholder, '');\n    var contentWidth = containerWidth = Math.max(0, containerWidth - 1);\n    for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n        contentWidth -= ascCharWidth;\n    }\n    var ellipsisWidth = getWidth(ellipsis, font);\n    if (ellipsisWidth > contentWidth) {\n        ellipsis = '';\n        ellipsisWidth = 0;\n    }\n    contentWidth = containerWidth - ellipsisWidth;\n    preparedOpts.ellipsis = ellipsis;\n    preparedOpts.ellipsisWidth = ellipsisWidth;\n    preparedOpts.contentWidth = contentWidth;\n    preparedOpts.containerWidth = containerWidth;\n    return preparedOpts;\n}\nfunction truncateSingleLine(textLine, options) {\n    var containerWidth = options.containerWidth;\n    var font = options.font;\n    var contentWidth = options.contentWidth;\n    if (!containerWidth) {\n        return '';\n    }\n    var lineWidth = getWidth(textLine, font);\n    if (lineWidth <= containerWidth) {\n        return textLine;\n    }\n    for (var j = 0;; j++) {\n        if (lineWidth <= contentWidth || j >= options.maxIterations) {\n            textLine += options.ellipsis;\n            break;\n        }\n        var subLength = j === 0\n            ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n            : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n        textLine = textLine.substr(0, subLength);\n        lineWidth = getWidth(textLine, font);\n    }\n    if (textLine === '') {\n        textLine = options.placeholder;\n    }\n    return textLine;\n}\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n    var width = 0;\n    var i = 0;\n    for (var len = text.length; i < len && width < contentWidth; i++) {\n        var charCode = text.charCodeAt(i);\n        width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n    }\n    return i;\n}\nexport function parsePlainText(text, style) {\n    text != null && (text += '');\n    var overflow = style.overflow;\n    var padding = style.padding;\n    var font = style.font;\n    var truncate = overflow === 'truncate';\n    var calculatedLineHeight = getLineHeight(font);\n    var lineHeight = retrieve2(style.lineHeight, calculatedLineHeight);\n    var bgColorDrawn = !!(style.backgroundColor);\n    var truncateLineOverflow = style.lineOverflow === 'truncate';\n    var width = style.width;\n    var lines;\n    if (width != null && (overflow === 'break' || overflow === 'breakAll')) {\n        lines = text ? wrapText(text, style.font, width, overflow === 'breakAll', 0).lines : [];\n    }\n    else {\n        lines = text ? text.split('\\n') : [];\n    }\n    var contentHeight = lines.length * lineHeight;\n    var height = retrieve2(style.height, contentHeight);\n    if (contentHeight > height && truncateLineOverflow) {\n        var lineCount = Math.floor(height / lineHeight);\n        lines = lines.slice(0, lineCount);\n    }\n    if (text && truncate && width != null) {\n        var options = prepareTruncateOptions(width, font, style.ellipsis, {\n            minChar: style.truncateMinChar,\n            placeholder: style.placeholder\n        });\n        for (var i = 0; i < lines.length; i++) {\n            lines[i] = truncateSingleLine(lines[i], options);\n        }\n    }\n    var outerHeight = height;\n    var contentWidth = 0;\n    for (var i = 0; i < lines.length; i++) {\n        contentWidth = Math.max(getWidth(lines[i], font), contentWidth);\n    }\n    if (width == null) {\n        width = contentWidth;\n    }\n    var outerWidth = contentWidth;\n    if (padding) {\n        outerHeight += padding[0] + padding[2];\n        outerWidth += padding[1] + padding[3];\n        width += padding[1] + padding[3];\n    }\n    if (bgColorDrawn) {\n        outerWidth = width;\n    }\n    return {\n        lines: lines,\n        height: height,\n        outerWidth: outerWidth,\n        outerHeight: outerHeight,\n        lineHeight: lineHeight,\n        calculatedLineHeight: calculatedLineHeight,\n        contentWidth: contentWidth,\n        contentHeight: contentHeight,\n        width: width\n    };\n}\nvar RichTextToken = (function () {\n    function RichTextToken() {\n    }\n    return RichTextToken;\n}());\nvar RichTextLine = (function () {\n    function RichTextLine(tokens) {\n        this.tokens = [];\n        if (tokens) {\n            this.tokens = tokens;\n        }\n    }\n    return RichTextLine;\n}());\nvar RichTextContentBlock = (function () {\n    function RichTextContentBlock() {\n        this.width = 0;\n        this.height = 0;\n        this.contentWidth = 0;\n        this.contentHeight = 0;\n        this.outerWidth = 0;\n        this.outerHeight = 0;\n        this.lines = [];\n    }\n    return RichTextContentBlock;\n}());\nexport { RichTextContentBlock };\nexport function parseRichText(text, style) {\n    var contentBlock = new RichTextContentBlock();\n    text != null && (text += '');\n    if (!text) {\n        return contentBlock;\n    }\n    var topWidth = style.width;\n    var topHeight = style.height;\n    var overflow = style.overflow;\n    var wrapInfo = (overflow === 'break' || overflow === 'breakAll') && topWidth != null\n        ? { width: topWidth, accumWidth: 0, breakAll: overflow === 'breakAll' }\n        : null;\n    var lastIndex = STYLE_REG.lastIndex = 0;\n    var result;\n    while ((result = STYLE_REG.exec(text)) != null) {\n        var matchedIndex = result.index;\n        if (matchedIndex > lastIndex) {\n            pushTokens(contentBlock, text.substring(lastIndex, matchedIndex), style, wrapInfo);\n        }\n        pushTokens(contentBlock, result[2], style, wrapInfo, result[1]);\n        lastIndex = STYLE_REG.lastIndex;\n    }\n    if (lastIndex < text.length) {\n        pushTokens(contentBlock, text.substring(lastIndex, text.length), style, wrapInfo);\n    }\n    var pendingList = [];\n    var calculatedHeight = 0;\n    var calculatedWidth = 0;\n    var stlPadding = style.padding;\n    var truncate = overflow === 'truncate';\n    var truncateLine = style.lineOverflow === 'truncate';\n    function finishLine(line, lineWidth, lineHeight) {\n        line.width = lineWidth;\n        line.lineHeight = lineHeight;\n        calculatedHeight += lineHeight;\n        calculatedWidth = Math.max(calculatedWidth, lineWidth);\n    }\n    outer: for (var i = 0; i < contentBlock.lines.length; i++) {\n        var line = contentBlock.lines[i];\n        var lineHeight = 0;\n        var lineWidth = 0;\n        for (var j = 0; j < line.tokens.length; j++) {\n            var token = line.tokens[j];\n            var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n            var textPadding = token.textPadding = tokenStyle.padding;\n            var paddingH = textPadding ? textPadding[1] + textPadding[3] : 0;\n            var font = token.font = tokenStyle.font || style.font;\n            token.contentHeight = getLineHeight(font);\n            var tokenHeight = retrieve2(tokenStyle.height, token.contentHeight);\n            token.innerHeight = tokenHeight;\n            textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n            token.height = tokenHeight;\n            token.lineHeight = retrieve3(tokenStyle.lineHeight, style.lineHeight, tokenHeight);\n            token.align = tokenStyle && tokenStyle.align || style.align;\n            token.verticalAlign = tokenStyle && tokenStyle.verticalAlign || 'middle';\n            if (truncateLine && topHeight != null && calculatedHeight + token.lineHeight > topHeight) {\n                if (j > 0) {\n                    line.tokens = line.tokens.slice(0, j);\n                    finishLine(line, lineWidth, lineHeight);\n                    contentBlock.lines = contentBlock.lines.slice(0, i + 1);\n                }\n                else {\n                    contentBlock.lines = contentBlock.lines.slice(0, i);\n                }\n                break outer;\n            }\n            var styleTokenWidth = tokenStyle.width;\n            var tokenWidthNotSpecified = styleTokenWidth == null || styleTokenWidth === 'auto';\n            if (typeof styleTokenWidth === 'string' && styleTokenWidth.charAt(styleTokenWidth.length - 1) === '%') {\n                token.percentWidth = styleTokenWidth;\n                pendingList.push(token);\n                token.contentWidth = getWidth(token.text, font);\n            }\n            else {\n                if (tokenWidthNotSpecified) {\n                    var textBackgroundColor = tokenStyle.backgroundColor;\n                    var bgImg = textBackgroundColor && textBackgroundColor.image;\n                    if (bgImg) {\n                        bgImg = imageHelper.findExistImage(bgImg);\n                        if (imageHelper.isImageReady(bgImg)) {\n                            token.width = Math.max(token.width, bgImg.width * tokenHeight / bgImg.height);\n                        }\n                    }\n                }\n                var remainTruncWidth = truncate && topWidth != null\n                    ? topWidth - lineWidth : null;\n                if (remainTruncWidth != null && remainTruncWidth < token.width) {\n                    if (!tokenWidthNotSpecified || remainTruncWidth < paddingH) {\n                        token.text = '';\n                        token.width = token.contentWidth = 0;\n                    }\n                    else {\n                        token.text = truncateText(token.text, remainTruncWidth - paddingH, font, style.ellipsis, { minChar: style.truncateMinChar });\n                        token.width = token.contentWidth = getWidth(token.text, font);\n                    }\n                }\n                else {\n                    token.contentWidth = getWidth(token.text, font);\n                }\n            }\n            token.width += paddingH;\n            lineWidth += token.width;\n            tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n        }\n        finishLine(line, lineWidth, lineHeight);\n    }\n    contentBlock.outerWidth = contentBlock.width = retrieve2(topWidth, calculatedWidth);\n    contentBlock.outerHeight = contentBlock.height = retrieve2(topHeight, calculatedHeight);\n    contentBlock.contentHeight = calculatedHeight;\n    contentBlock.contentWidth = calculatedWidth;\n    if (stlPadding) {\n        contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n        contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n    }\n    for (var i = 0; i < pendingList.length; i++) {\n        var token = pendingList[i];\n        var percentWidth = token.percentWidth;\n        token.width = parseInt(percentWidth, 10) / 100 * contentBlock.width;\n    }\n    return contentBlock;\n}\nfunction pushTokens(block, str, style, wrapInfo, styleName) {\n    var isEmptyStr = str === '';\n    var tokenStyle = styleName && style.rich[styleName] || {};\n    var lines = block.lines;\n    var font = tokenStyle.font || style.font;\n    var newLine = false;\n    var strLines;\n    var linesWidths;\n    if (wrapInfo) {\n        var tokenPadding = tokenStyle.padding;\n        var tokenPaddingH = tokenPadding ? tokenPadding[1] + tokenPadding[3] : 0;\n        if (tokenStyle.width != null && tokenStyle.width !== 'auto') {\n            var outerWidth_1 = parsePercent(tokenStyle.width, wrapInfo.width) + tokenPaddingH;\n            if (lines.length > 0) {\n                if (outerWidth_1 + wrapInfo.accumWidth > wrapInfo.width) {\n                    strLines = str.split('\\n');\n                    newLine = true;\n                }\n            }\n            wrapInfo.accumWidth = outerWidth_1;\n        }\n        else {\n            var res = wrapText(str, font, wrapInfo.width, wrapInfo.breakAll, wrapInfo.accumWidth);\n            wrapInfo.accumWidth = res.accumWidth + tokenPaddingH;\n            linesWidths = res.linesWidths;\n            strLines = res.lines;\n        }\n    }\n    else {\n        strLines = str.split('\\n');\n    }\n    for (var i = 0; i < strLines.length; i++) {\n        var text = strLines[i];\n        var token = new RichTextToken();\n        token.styleName = styleName;\n        token.text = text;\n        token.isLineHolder = !text && !isEmptyStr;\n        if (typeof tokenStyle.width === 'number') {\n            token.width = tokenStyle.width;\n        }\n        else {\n            token.width = linesWidths\n                ? linesWidths[i]\n                : getWidth(text, font);\n        }\n        if (!i && !newLine) {\n            var tokens = (lines[lines.length - 1] || (lines[0] = new RichTextLine())).tokens;\n            var tokensLen = tokens.length;\n            (tokensLen === 1 && tokens[0].isLineHolder)\n                ? (tokens[0] = token)\n                : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n        }\n        else {\n            lines.push(new RichTextLine([token]));\n        }\n    }\n}\nfunction isLatin(ch) {\n    var code = ch.charCodeAt(0);\n    return code >= 0x21 && code <= 0x17F;\n}\nvar breakCharMap = reduce(',&?/;] '.split(''), function (obj, ch) {\n    obj[ch] = true;\n    return obj;\n}, {});\nfunction isWordBreakChar(ch) {\n    if (isLatin(ch)) {\n        if (breakCharMap[ch]) {\n            return true;\n        }\n        return false;\n    }\n    return true;\n}\nfunction wrapText(text, font, lineWidth, isBreakAll, lastAccumWidth) {\n    var lines = [];\n    var linesWidths = [];\n    var line = '';\n    var currentWord = '';\n    var currentWordWidth = 0;\n    var accumWidth = 0;\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\n') {\n            if (currentWord) {\n                line += currentWord;\n                accumWidth += currentWordWidth;\n            }\n            lines.push(line);\n            linesWidths.push(accumWidth);\n            line = '';\n            currentWord = '';\n            currentWordWidth = 0;\n            accumWidth = 0;\n            continue;\n        }\n        var chWidth = getWidth(ch, font);\n        var inWord = isBreakAll ? false : !isWordBreakChar(ch);\n        if (!lines.length\n            ? lastAccumWidth + accumWidth + chWidth > lineWidth\n            : accumWidth + chWidth > lineWidth) {\n            if (!accumWidth) {\n                if (inWord) {\n                    lines.push(currentWord);\n                    linesWidths.push(currentWordWidth);\n                    currentWord = ch;\n                    currentWordWidth = chWidth;\n                }\n                else {\n                    lines.push(ch);\n                    linesWidths.push(chWidth);\n                }\n            }\n            else if (line || currentWord) {\n                if (inWord) {\n                    if (!line) {\n                        line = currentWord;\n                        currentWord = '';\n                        currentWordWidth = 0;\n                        accumWidth = currentWordWidth;\n                    }\n                    lines.push(line);\n                    linesWidths.push(accumWidth - currentWordWidth);\n                    currentWord += ch;\n                    currentWordWidth += chWidth;\n                    line = '';\n                    accumWidth = currentWordWidth;\n                }\n                else {\n                    if (currentWord) {\n                        line += currentWord;\n                        currentWord = '';\n                        currentWordWidth = 0;\n                    }\n                    lines.push(line);\n                    linesWidths.push(accumWidth);\n                    line = ch;\n                    accumWidth = chWidth;\n                }\n            }\n            continue;\n        }\n        accumWidth += chWidth;\n        if (inWord) {\n            currentWord += ch;\n            currentWordWidth += chWidth;\n        }\n        else {\n            if (currentWord) {\n                line += currentWord;\n                currentWord = '';\n                currentWordWidth = 0;\n            }\n            line += ch;\n        }\n    }\n    if (!lines.length && !line) {\n        line = text;\n        currentWord = '';\n        currentWordWidth = 0;\n    }\n    if (currentWord) {\n        line += currentWord;\n    }\n    if (line) {\n        lines.push(line);\n        linesWidths.push(accumWidth);\n    }\n    if (lines.length === 1) {\n        accumWidth += lastAccumWidth;\n    }\n    return {\n        accumWidth: accumWidth,\n        lines: lines,\n        linesWidths: linesWidths\n    };\n}\n","import smoothBezier from './smoothBezier.js';\nexport function buildPath(ctx, shape, closePath) {\n    var smooth = shape.smooth;\n    var points = shape.points;\n    if (points && points.length >= 2) {\n        if (smooth) {\n            var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n            ctx.moveTo(points[0][0], points[0][1]);\n            var len = points.length;\n            for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                var cp1 = controlPoints[i * 2];\n                var cp2 = controlPoints[i * 2 + 1];\n                var p = points[(i + 1) % len];\n                ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n            }\n        }\n        else {\n            ctx.moveTo(points[0][0], points[0][1]);\n            for (var i = 1, l = points.length; i < l; i++) {\n                ctx.lineTo(points[i][0], points[i][1]);\n            }\n        }\n        closePath && ctx.closePath();\n    }\n}\n","import { min as v2Min, max as v2Max, scale as v2Scale, distance as v2Distance, add as v2Add, clone as v2Clone, sub as v2Sub } from '../../core/vector.js';\nexport default function smoothBezier(points, smooth, isLoop, constraint) {\n    var cps = [];\n    var v = [];\n    var v1 = [];\n    var v2 = [];\n    var prevPoint;\n    var nextPoint;\n    var min;\n    var max;\n    if (constraint) {\n        min = [Infinity, Infinity];\n        max = [-Infinity, -Infinity];\n        for (var i = 0, len = points.length; i < len; i++) {\n            v2Min(min, min, points[i]);\n            v2Max(max, max, points[i]);\n        }\n        v2Min(min, min, constraint[0]);\n        v2Max(max, max, constraint[1]);\n    }\n    for (var i = 0, len = points.length; i < len; i++) {\n        var point = points[i];\n        if (isLoop) {\n            prevPoint = points[i ? i - 1 : len - 1];\n            nextPoint = points[(i + 1) % len];\n        }\n        else {\n            if (i === 0 || i === len - 1) {\n                cps.push(v2Clone(points[i]));\n                continue;\n            }\n            else {\n                prevPoint = points[i - 1];\n                nextPoint = points[i + 1];\n            }\n        }\n        v2Sub(v, nextPoint, prevPoint);\n        v2Scale(v, v, smooth);\n        var d0 = v2Distance(point, prevPoint);\n        var d1 = v2Distance(point, nextPoint);\n        var sum = d0 + d1;\n        if (sum !== 0) {\n            d0 /= sum;\n            d1 /= sum;\n        }\n        v2Scale(v1, v, -d0);\n        v2Scale(v2, v, d1);\n        var cp0 = v2Add([], point, v1);\n        var cp1 = v2Add([], point, v2);\n        if (constraint) {\n            v2Max(cp0, cp0, min);\n            v2Min(cp0, cp0, max);\n            v2Max(cp1, cp1, min);\n            v2Min(cp1, cp1, max);\n        }\n        cps.push(cp0);\n        cps.push(cp1);\n    }\n    if (isLoop) {\n        cps.push(cps.shift());\n    }\n    return cps;\n}\n","export function buildPath(ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n    var r = shape.r;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    if (width < 0) {\n        x = x + width;\n        width = -width;\n    }\n    if (height < 0) {\n        y = y + height;\n        height = -height;\n    }\n    if (typeof r === 'number') {\n        r1 = r2 = r3 = r4 = r;\n    }\n    else if (r instanceof Array) {\n        if (r.length === 1) {\n            r1 = r2 = r3 = r4 = r[0];\n        }\n        else if (r.length === 2) {\n            r1 = r3 = r[0];\n            r2 = r4 = r[1];\n        }\n        else if (r.length === 3) {\n            r1 = r[0];\n            r2 = r4 = r[1];\n            r3 = r[2];\n        }\n        else {\n            r1 = r[0];\n            r2 = r[1];\n            r3 = r[2];\n            r4 = r[3];\n        }\n    }\n    else {\n        r1 = r2 = r3 = r4 = 0;\n    }\n    var total;\n    if (r1 + r2 > width) {\n        total = r1 + r2;\n        r1 *= width / total;\n        r2 *= width / total;\n    }\n    if (r3 + r4 > width) {\n        total = r3 + r4;\n        r3 *= width / total;\n        r4 *= width / total;\n    }\n    if (r2 + r3 > height) {\n        total = r2 + r3;\n        r2 *= height / total;\n        r3 *= height / total;\n    }\n    if (r1 + r4 > height) {\n        total = r1 + r4;\n        r1 *= height / total;\n        r4 *= height / total;\n    }\n    ctx.moveTo(x + r1, y);\n    ctx.lineTo(x + width - r2, y);\n    r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n    ctx.lineTo(x + width, y + height - r3);\n    r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n    ctx.lineTo(x + r4, y + height);\n    r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n    ctx.lineTo(x, y + r1);\n    r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n","import { isArray } from '../../core/util.js';\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar mathACos = Math.acos;\nvar mathATan2 = Math.atan2;\nvar mathAbs = Math.abs;\nvar mathSqrt = Math.sqrt;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar e = 1e-4;\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var dx10 = x1 - x0;\n    var dy10 = y1 - y0;\n    var dx32 = x3 - x2;\n    var dy32 = y3 - y2;\n    var t = dy32 * dx10 - dx32 * dy10;\n    if (t * t < e) {\n        return;\n    }\n    t = (dx32 * (y0 - y2) - dy32 * (x0 - x2)) / t;\n    return [x0 + t * dx10, y0 + t * dy10];\n}\nfunction computeCornerTangents(x0, y0, x1, y1, radius, cr, clockwise) {\n    var x01 = x0 - x1;\n    var y01 = y0 - y1;\n    var lo = (clockwise ? cr : -cr) / mathSqrt(x01 * x01 + y01 * y01);\n    var ox = lo * y01;\n    var oy = -lo * x01;\n    var x11 = x0 + ox;\n    var y11 = y0 + oy;\n    var x10 = x1 + ox;\n    var y10 = y1 + oy;\n    var x00 = (x11 + x10) / 2;\n    var y00 = (y11 + y10) / 2;\n    var dx = x10 - x11;\n    var dy = y10 - y11;\n    var d2 = dx * dx + dy * dy;\n    var r = radius - cr;\n    var s = x11 * y10 - x10 * y11;\n    var d = (dy < 0 ? -1 : 1) * mathSqrt(mathMax(0, r * r * d2 - s * s));\n    var cx0 = (s * dy - dx * d) / d2;\n    var cy0 = (-s * dx - dy * d) / d2;\n    var cx1 = (s * dy + dx * d) / d2;\n    var cy1 = (-s * dx + dy * d) / d2;\n    var dx0 = cx0 - x00;\n    var dy0 = cy0 - y00;\n    var dx1 = cx1 - x00;\n    var dy1 = cy1 - y00;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n        cx0 = cx1;\n        cy0 = cy1;\n    }\n    return {\n        cx: cx0,\n        cy: cy0,\n        x0: -ox,\n        y0: -oy,\n        x1: cx0 * (radius / r - 1),\n        y1: cy0 * (radius / r - 1)\n    };\n}\nfunction normalizeCornerRadius(cr) {\n    var arr;\n    if (isArray(cr)) {\n        var len = cr.length;\n        if (!len) {\n            return cr;\n        }\n        if (len === 1) {\n            arr = [cr[0], cr[0], 0, 0];\n        }\n        else if (len === 2) {\n            arr = [cr[0], cr[0], cr[1], cr[1]];\n        }\n        else if (len === 3) {\n            arr = cr.concat(cr[2]);\n        }\n        else {\n            arr = cr;\n        }\n    }\n    else {\n        arr = [cr, cr, cr, cr];\n    }\n    return arr;\n}\nexport function buildPath(ctx, shape) {\n    var _a;\n    var radius = mathMax(shape.r, 0);\n    var innerRadius = mathMax(shape.r0 || 0, 0);\n    var hasRadius = radius > 0;\n    var hasInnerRadius = innerRadius > 0;\n    if (!hasRadius && !hasInnerRadius) {\n        return;\n    }\n    if (!hasRadius) {\n        radius = innerRadius;\n        innerRadius = 0;\n    }\n    if (innerRadius > radius) {\n        var tmp = radius;\n        radius = innerRadius;\n        innerRadius = tmp;\n    }\n    var startAngle = shape.startAngle, endAngle = shape.endAngle;\n    if (isNaN(startAngle) || isNaN(endAngle)) {\n        return;\n    }\n    var cx = shape.cx, cy = shape.cy;\n    var clockwise = !!shape.clockwise;\n    var arc = mathAbs(endAngle - startAngle);\n    var mod = arc > PI2 && arc % PI2;\n    mod > e && (arc = mod);\n    if (!(radius > e)) {\n        ctx.moveTo(cx, cy);\n    }\n    else if (arc > PI2 - e) {\n        ctx.moveTo(cx + radius * mathCos(startAngle), cy + radius * mathSin(startAngle));\n        ctx.arc(cx, cy, radius, startAngle, endAngle, !clockwise);\n        if (innerRadius > e) {\n            ctx.moveTo(cx + innerRadius * mathCos(endAngle), cy + innerRadius * mathSin(endAngle));\n            ctx.arc(cx, cy, innerRadius, endAngle, startAngle, clockwise);\n        }\n    }\n    else {\n        var icrStart = void 0;\n        var icrEnd = void 0;\n        var ocrStart = void 0;\n        var ocrEnd = void 0;\n        var ocrs = void 0;\n        var ocre = void 0;\n        var icrs = void 0;\n        var icre = void 0;\n        var ocrMax = void 0;\n        var icrMax = void 0;\n        var limitedOcrMax = void 0;\n        var limitedIcrMax = void 0;\n        var xre = void 0;\n        var yre = void 0;\n        var xirs = void 0;\n        var yirs = void 0;\n        var xrs = radius * mathCos(startAngle);\n        var yrs = radius * mathSin(startAngle);\n        var xire = innerRadius * mathCos(endAngle);\n        var yire = innerRadius * mathSin(endAngle);\n        var hasArc = arc > e;\n        if (hasArc) {\n            var cornerRadius = shape.cornerRadius;\n            if (cornerRadius) {\n                _a = normalizeCornerRadius(cornerRadius), icrStart = _a[0], icrEnd = _a[1], ocrStart = _a[2], ocrEnd = _a[3];\n            }\n            var halfRd = mathAbs(radius - innerRadius) / 2;\n            ocrs = mathMin(halfRd, ocrStart);\n            ocre = mathMin(halfRd, ocrEnd);\n            icrs = mathMin(halfRd, icrStart);\n            icre = mathMin(halfRd, icrEnd);\n            limitedOcrMax = ocrMax = mathMax(ocrs, ocre);\n            limitedIcrMax = icrMax = mathMax(icrs, icre);\n            if (ocrMax > e || icrMax > e) {\n                xre = radius * mathCos(endAngle);\n                yre = radius * mathSin(endAngle);\n                xirs = innerRadius * mathCos(startAngle);\n                yirs = innerRadius * mathSin(startAngle);\n                if (arc < PI) {\n                    var it_1 = intersect(xrs, yrs, xirs, yirs, xre, yre, xire, yire);\n                    if (it_1) {\n                        var x0 = xrs - it_1[0];\n                        var y0 = yrs - it_1[1];\n                        var x1 = xre - it_1[0];\n                        var y1 = yre - it_1[1];\n                        var a = 1 / mathSin(mathACos((x0 * x1 + y0 * y1) / (mathSqrt(x0 * x0 + y0 * y0) * mathSqrt(x1 * x1 + y1 * y1))) / 2);\n                        var b = mathSqrt(it_1[0] * it_1[0] + it_1[1] * it_1[1]);\n                        limitedOcrMax = mathMin(ocrMax, (radius - b) / (a + 1));\n                        limitedIcrMax = mathMin(icrMax, (innerRadius - b) / (a - 1));\n                    }\n                }\n            }\n        }\n        if (!hasArc) {\n            ctx.moveTo(cx + xrs, cy + yrs);\n        }\n        else if (limitedOcrMax > e) {\n            var crStart = mathMin(ocrStart, limitedOcrMax);\n            var crEnd = mathMin(ocrEnd, limitedOcrMax);\n            var ct0 = computeCornerTangents(xirs, yirs, xrs, yrs, radius, crStart, clockwise);\n            var ct1 = computeCornerTangents(xre, yre, xire, yire, radius, crEnd, clockwise);\n            ctx.moveTo(cx + ct0.cx + ct0.x0, cy + ct0.cy + ct0.y0);\n            if (limitedOcrMax < ocrMax && crStart === crEnd) {\n                ctx.arc(cx + ct0.cx, cy + ct0.cy, limitedOcrMax, mathATan2(ct0.y0, ct0.x0), mathATan2(ct1.y0, ct1.x0), !clockwise);\n            }\n            else {\n                crStart > 0 && ctx.arc(cx + ct0.cx, cy + ct0.cy, crStart, mathATan2(ct0.y0, ct0.x0), mathATan2(ct0.y1, ct0.x1), !clockwise);\n                ctx.arc(cx, cy, radius, mathATan2(ct0.cy + ct0.y1, ct0.cx + ct0.x1), mathATan2(ct1.cy + ct1.y1, ct1.cx + ct1.x1), !clockwise);\n                crEnd > 0 && ctx.arc(cx + ct1.cx, cy + ct1.cy, crEnd, mathATan2(ct1.y1, ct1.x1), mathATan2(ct1.y0, ct1.x0), !clockwise);\n            }\n        }\n        else {\n            ctx.moveTo(cx + xrs, cy + yrs);\n            ctx.arc(cx, cy, radius, startAngle, endAngle, !clockwise);\n        }\n        if (!(innerRadius > e) || !hasArc) {\n            ctx.lineTo(cx + xire, cy + yire);\n        }\n        else if (limitedIcrMax > e) {\n            var crStart = mathMin(icrStart, limitedIcrMax);\n            var crEnd = mathMin(icrEnd, limitedIcrMax);\n            var ct0 = computeCornerTangents(xire, yire, xre, yre, innerRadius, -crEnd, clockwise);\n            var ct1 = computeCornerTangents(xrs, yrs, xirs, yirs, innerRadius, -crStart, clockwise);\n            ctx.lineTo(cx + ct0.cx + ct0.x0, cy + ct0.cy + ct0.y0);\n            if (limitedIcrMax < icrMax && crStart === crEnd) {\n                ctx.arc(cx + ct0.cx, cy + ct0.cy, limitedIcrMax, mathATan2(ct0.y0, ct0.x0), mathATan2(ct1.y0, ct1.x0), !clockwise);\n            }\n            else {\n                crEnd > 0 && ctx.arc(cx + ct0.cx, cy + ct0.cy, crEnd, mathATan2(ct0.y0, ct0.x0), mathATan2(ct0.y1, ct0.x1), !clockwise);\n                ctx.arc(cx, cy, innerRadius, mathATan2(ct0.cy + ct0.y1, ct0.cx + ct0.x1), mathATan2(ct1.cy + ct1.y1, ct1.cx + ct1.x1), clockwise);\n                crStart > 0 && ctx.arc(cx + ct1.cx, cy + ct1.cy, crStart, mathATan2(ct1.y1, ct1.x1), mathATan2(ct1.y0, ct1.x0), !clockwise);\n            }\n        }\n        else {\n            ctx.lineTo(cx + xire, cy + yire);\n            ctx.arc(cx, cy, innerRadius, endAngle, startAngle, clockwise);\n        }\n    }\n    ctx.closePath();\n}\n","var round = Math.round;\nexport function subPixelOptimizeLine(outputShape, inputShape, style) {\n    if (!inputShape) {\n        return;\n    }\n    var x1 = inputShape.x1;\n    var x2 = inputShape.x2;\n    var y1 = inputShape.y1;\n    var y2 = inputShape.y2;\n    outputShape.x1 = x1;\n    outputShape.x2 = x2;\n    outputShape.y1 = y1;\n    outputShape.y2 = y2;\n    var lineWidth = style && style.lineWidth;\n    if (!lineWidth) {\n        return outputShape;\n    }\n    if (round(x1 * 2) === round(x2 * 2)) {\n        outputShape.x1 = outputShape.x2 = subPixelOptimize(x1, lineWidth, true);\n    }\n    if (round(y1 * 2) === round(y2 * 2)) {\n        outputShape.y1 = outputShape.y2 = subPixelOptimize(y1, lineWidth, true);\n    }\n    return outputShape;\n}\nexport function subPixelOptimizeRect(outputShape, inputShape, style) {\n    if (!inputShape) {\n        return;\n    }\n    var originX = inputShape.x;\n    var originY = inputShape.y;\n    var originWidth = inputShape.width;\n    var originHeight = inputShape.height;\n    outputShape.x = originX;\n    outputShape.y = originY;\n    outputShape.width = originWidth;\n    outputShape.height = originHeight;\n    var lineWidth = style && style.lineWidth;\n    if (!lineWidth) {\n        return outputShape;\n    }\n    outputShape.x = subPixelOptimize(originX, lineWidth, true);\n    outputShape.y = subPixelOptimize(originY, lineWidth, true);\n    outputShape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - outputShape.x, originWidth === 0 ? 0 : 1);\n    outputShape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - outputShape.y, originHeight === 0 ? 0 : 1);\n    return outputShape;\n}\nexport function subPixelOptimize(position, lineWidth, positiveOrNegative) {\n    if (!lineWidth) {\n        return position;\n    }\n    var doubledPosition = round(position * 2);\n    return (doubledPosition + round(lineWidth)) % 2 === 0\n        ? doubledPosition / 2\n        : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n"],"names":["REDRAW_BIT","STYLE_CHANGED_BIT","SHAPE_CHANGED_BIT","globalImageCache","LRU","findExistImage","newImageOrSrc","cachedImgObj","get","image","createOrUpdateImage","hostEl","onload","cbPayload","__zrImageSrc","pendingWrap","cb","isImageReady","pending","push","platformApi","imageOnLoad","put","__cachedImgObj","this","onerror","i","length","dirty","width","height","STYLE_REG","truncateText","text","containerWidth","font","ellipsis","options","textLines","split","prepareTruncateOptions","len","truncateSingleLine","join","preparedOpts","extend","retrieve2","maxIterations","minChar","cnCharWidth","getWidth","ascCharWidth","placeholder","contentWidth","Math","max","ellipsisWidth","textLine","lineWidth","j","subLength","estimateLength","floor","substr","charCode","charCodeAt","parsePlainText","style","lines","overflow","padding","truncate","calculatedLineHeight","getLineHeight","lineHeight","bgColorDrawn","backgroundColor","truncateLineOverflow","lineOverflow","contentHeight","wrapText","lineCount","slice","truncateMinChar","outerHeight","outerWidth","RichTextToken","RichTextLine","tokens","RichTextContentBlock","parseRichText","contentBlock","result","topWidth","topHeight","wrapInfo","accumWidth","breakAll","lastIndex","exec","matchedIndex","index","pushTokens","substring","pendingList","calculatedHeight","calculatedWidth","stlPadding","truncateLine","finishLine","line","outer","tokenStyle","token","styleName","rich","textPadding","paddingH","tokenHeight","innerHeight","retrieve3","align","verticalAlign","styleTokenWidth","tokenWidthNotSpecified","charAt","percentWidth","textBackgroundColor","bgImg","imageHelper","remainTruncWidth","parseInt","block","str","strLines","linesWidths","isEmptyStr","newLine","tokenPadding","tokenPaddingH","outerWidth_1","parsePercent","res","isLineHolder","tokensLen","breakCharMap","reduce","obj","ch","isWordBreakChar","code","isLatin","isBreakAll","lastAccumWidth","currentWord","currentWordWidth","chWidth","inWord","buildPath","ctx","shape","closePath","smooth","points","controlPoints","isLoop","constraint","prevPoint","nextPoint","min","cps","v","v1","v2","Infinity","v2Min","v2Max","point","v2Clone","v2Sub","v2Scale","d0","v2Distance","d1","sum","cp0","v2Add","cp1","shift","smoothBezier","smoothConstraint","moveTo","cp2","p","bezierCurveTo","l","lineTo","r1","r2","r3","r4","total","x","y","r","Array","arc","PI","PI2","mathSin","sin","mathCos","cos","mathACos","acos","mathATan2","atan2","mathAbs","abs","mathSqrt","sqrt","mathMax","mathMin","e","computeCornerTangents","x0","y0","x1","y1","radius","cr","clockwise","x01","y01","lo","ox","oy","x11","y11","x10","y10","x00","y00","dx","dy","d2","s","d","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","_a","innerRadius","r0","hasRadius","tmp","startAngle","endAngle","isNaN","mod","icrStart","icrEnd","ocrStart","ocrEnd","ocrs","ocre","icrs","icre","ocrMax","icrMax","limitedOcrMax","limitedIcrMax","xre","yre","xirs","yirs","xrs","yrs","xire","yire","hasArc","cornerRadius","arr","isArray","concat","normalizeCornerRadius","halfRd","it_1","x2","y2","x3","y3","dx10","dy10","dx32","dy32","t","intersect","a","b","crStart","crEnd","ct0","ct1","round","subPixelOptimizeLine","outputShape","inputShape","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition"],"sourceRoot":""}