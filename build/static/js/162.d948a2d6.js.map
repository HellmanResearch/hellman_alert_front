{"version":3,"file":"static/js/162.d948a2d6.js","mappings":"0GACA,IAAIA,EAAW,WACb,OAAO,IACT,EAEAA,EAASC,kBAAmB,EAC5B,K,sBCLA,IAAIC,EAAS,WACX,OAAO,IACT,EAEAA,EAAOC,gBAAiB,EACxB,K,mNCDIC,EAAY,CAAC,WAAY,QAAS,WAAY,QAAS,aAc3D,SAASC,EAAYC,GACnB,MAA0B,kBAAZA,GAA2C,kBAAZA,CAC/C,CAOA,IAAIC,EAAa,SAAoBC,EAAGC,GACtC,IAAIC,GAAgBC,EAAAA,EAAAA,KAChBC,EAAYF,EAAcE,UAC1BC,EAAKH,EAAcG,GACnBC,EAAOJ,EAAcI,KACrBC,EAAWL,EAAcK,SACzBC,EAAON,EAAcM,KACrBC,EAAcP,EAAcO,YAC5BC,EAAaR,EAAcQ,WAC3BC,EAAkBT,EAAcS,gBAChCC,EAAgBV,EAAcU,cAE9BC,EAAoBC,EAAAA,WAAiBC,EAAAA,GACrCC,EAAiBH,EAAkBG,eACnCC,EAAgBJ,EAAkBI,cAClCC,EAA2BL,EAAkBK,yBAC7CC,EAAWN,EAAkBM,SAC7BC,EAAuBP,EAAkBO,qBACzCC,EAAYR,EAAkBQ,UAC9BC,EAAaT,EAAkBS,WAC/BC,EAAUV,EAAkBU,QAC5BC,EAAaX,EAAkBW,WAC/BC,EAAiBZ,EAAkBY,eAEnCC,EAAgB,GAAGC,OAAOvB,EAAW,SACrCwB,GAAqBC,EAAAA,EAAAA,IAAQ,WAC/B,OAAOb,CACT,GAAG,CAACV,EAAMU,IAAiB,SAAUc,EAAMC,GACzC,OAAOA,EAAK,IAAMD,EAAK,KAAOC,EAAK,EACrC,IAEIC,EAAUlB,EAAAA,OAAa,MAEvBmB,EAAkB,SAAyBC,GAC7CA,EAAMC,gBACR,EAEIC,EAAiB,SAAwBC,GACvCL,EAAQM,SACVN,EAAQM,QAAQC,SAAyB,kBAATF,EAAoB,CAClDG,MAAOH,GACLA,EAER,EAGII,EAAwB,SAA+BD,GAIzD,IAHA,IAAIE,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC7EG,EAAMlB,EAAmBgB,OAEpBG,EAAI,EAAGA,EAAID,EAAKC,GAAK,EAAG,CAC/B,IAAIT,GAAWE,EAAQO,EAAIL,EAASI,GAAOA,EACvCE,EAAwBpB,EAAmBU,GAC3CW,EAAQD,EAAsBC,MAC9BC,EAAOF,EAAsBE,KAEjC,IAAKD,IAAUC,EAAKC,SAClB,OAAOb,CAEX,CAEA,OAAQ,CACV,EAEIc,EAAkBtC,EAAAA,UAAe,WACnC,OAAO2B,EAAsB,EAC/B,IACIY,GAAmBC,EAAAA,EAAAA,GAAeF,EAAiB,GACnDG,EAAcF,EAAiB,GAC/BG,EAAiBH,EAAiB,GAElCI,EAAY,SAAmBjB,GACjC,IAAIkB,EAAef,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,IAAmBA,UAAU,GAClFa,EAAehB,GACf,IAAImB,EAAO,CACTC,OAAQF,EAAe,WAAa,SAGlCG,EAAcjC,EAAmBY,GAEhCqB,EAKL5C,EAAc4C,EAAYC,MAAOtB,EAAOmB,GAJtC1C,EAAc,MAAO,EAAG0C,EAK5B,GAGAI,EAAAA,EAAAA,YAAU,WACRN,GAAuC,IAA7BvC,EAAqCuB,EAAsB,IAAM,EAC7E,GAAG,CAACb,EAAmBgB,OAAQnC,IAE/B,IAAIuD,EAAalD,EAAAA,aAAkB,SAAUgD,GAC3C,OAAOzC,EAAU4C,IAAIH,IAAmB,aAATtD,CACjC,GAAG,CAACA,GAAM0D,EAAAA,EAAAA,GAAmB7C,GAAW8C,cAExCJ,EAAAA,EAAAA,YAAU,WAMR,IAgBMK,EAhBFC,EAAYC,YAAW,WACzB,IAAK/D,GAAYD,GAA2B,IAAnBe,EAAUkD,KAAY,CAC7C,IAAIT,EAAQU,MAAMC,KAAKpD,GAAW,GAC9BmB,EAAQZ,EAAmB8C,WAAU,SAAUC,GAEjD,OADWA,EAAKzB,KACJY,QAAUA,CACxB,KAEe,IAAXtB,IACFiB,EAAUjB,GACVJ,EAAeI,GAEnB,CACF,IAEIlC,IAGuC,QAAxC8D,EAAmBpC,EAAQM,eAA0C,IAArB8B,GAAuCA,EAAiB7B,cAASM,IAGpH,OAAO,WACL,OAAO+B,aAAaP,EACtB,CACF,GAAG,CAAC/D,EAAMG,IAEV,IAAIoE,EAAgB,SAAuBf,QAC3BjB,IAAViB,GACF3C,EAAS2C,EAAO,CACdgB,UAAWzD,EAAU4C,IAAIH,KAKxBvD,GACHG,GAAW,EAEf,EA4EA,GAzEAI,EAAAA,oBAA0Bb,GAAK,WAC7B,MAAO,CACL8E,UAAW,SAAmB7C,GAC5B,IAAI8C,EAAQ9C,EAAM8C,MACdC,EAAU/C,EAAM+C,QAEpB,OAAQD,GAEN,KAAKE,EAAAA,EAAAA,EACL,KAAKA,EAAAA,EAAAA,EACL,KAAKA,EAAAA,EAAAA,GACL,KAAKA,EAAAA,EAAAA,KAED,IAAIxC,EAAS,EAcb,GAZIsC,IAAUE,EAAAA,EAAAA,GACZxC,GAAU,EACDsC,IAAUE,EAAAA,EAAAA,KACnBxC,EAAS,GACAyC,EAAAA,EAAAA,MAAmBF,IACxBD,IAAUE,EAAAA,EAAAA,EACZxC,EAAS,EACAsC,IAAUE,EAAAA,EAAAA,IACnBxC,GAAU,IAIC,IAAXA,EAAc,CAChB,IAAI0C,EAAkB3C,EAAsBc,EAAcb,EAAQA,GAClEN,EAAegD,GACf3B,EAAU2B,GAAiB,EAC7B,CAEA,MAIJ,KAAKF,EAAAA,EAAAA,MAGD,IAAIG,EAAOzD,EAAmB2B,GAE1B8B,IAASA,EAAKnC,KAAKC,SACrB0B,EAAcQ,EAAKvB,OAEnBe,OAAchC,GAGZvC,GACF4B,EAAMC,iBAGR,MAIJ,KAAK+C,EAAAA,EAAAA,IAEDxE,GAAW,GAEPJ,GACF4B,EAAMoD,kBAIhB,EACAC,QAAS,WAAoB,EAC7BhD,SAAU,SAAkBC,GAC1BJ,EAAeI,EACjB,EAEJ,IAEkC,IAA9BZ,EAAmBgB,OACrB,OAAoB9B,EAAAA,cAAoB,MAAO,CAC7C0E,KAAM,UACNnF,GAAI,GAAGsB,OAAOtB,EAAI,SAClBoF,UAAW,GAAG9D,OAAOD,EAAe,UACpCgE,YAAazD,GACZtB,GAGL,IAAIgF,GAAoBC,OAAOC,KAAKvE,GAAYwE,KAAI,SAAUC,GAC5D,OAAOzE,EAAWyE,EACpB,IAEIC,GAAW,SAAkBX,GAC/B,OAAOA,EAAKY,KACd,EAEIC,GAAa,SAAoB1D,GACnC,IAAI6C,EAAOzD,EAAmBY,GAC9B,IAAK6C,EAAM,OAAO,KAClB,IAAIc,EAAWd,EAAKnC,MAAQ,CAAC,EACzBY,EAAQqC,EAASrC,MACjBb,EAAQoC,EAAKpC,MACbmD,GAAQC,EAAAA,EAAAA,GAAUF,GAAU,GAC5BG,EAAcN,GAASX,GAC3B,OAAOA,EAAoBvE,EAAAA,cAAoB,OAAOyF,EAAAA,EAAAA,GAAS,CAC7D,aAAqC,kBAAhBD,GAA6BrD,EAAsB,KAAdqD,GACzDF,EAAO,CACRL,IAAKvD,EACLgD,KAAMvC,EAAQ,eAAiB,SAC/B5C,GAAI,GAAGsB,OAAOtB,EAAI,UAAUsB,OAAOa,GACnC,gBAAiBwB,EAAWF,KAC1BA,GAAS,IACf,EAEA,OAAoBhD,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoB,MAAO,CACpG0E,KAAM,UACNnF,GAAI,GAAGsB,OAAOtB,EAAI,SAClBmG,MAAO,CACLC,OAAQ,EACRC,MAAO,EACPC,SAAU,WAEXT,GAAW3C,EAAc,GAAI2C,GAAW3C,GAAc2C,GAAW3C,EAAc,IAAkBzC,EAAAA,cAAoB8F,EAAAA,EAAM,CAC5HC,QAAS,MACT5G,IAAK+B,EACLkB,KAAMtB,EACN6E,OAAQjF,EACRsF,WAAYrF,EACZsF,YAAY,EACZrB,YAAazD,EACb+E,SAAUpG,EACVW,QAASA,IACR,SAAU8D,EAAM4B,GACjB,IAAIC,EAEAjE,EAAQoC,EAAKpC,MACbkE,EAAc9B,EAAK8B,YACnBjE,EAAOmC,EAAKnC,KACZ+C,EAAQZ,EAAKY,MACbnC,EAAQuB,EAAKvB,MACbiC,EAAM7C,EAAK6C,IAEf,GAAI9C,EAAO,CACT,IAAImE,EAEAC,EAA4C,QAA9BD,EAAclE,EAAKoE,aAAmC,IAAhBF,EAAyBA,EAAcvH,EAAYoG,GAASA,EAAM9B,gBAAatB,EACvI,OAAoB/B,EAAAA,cAAoB,MAAO,CAC7C2E,UAAW8B,IAAW7F,EAAe,GAAGC,OAAOD,EAAe,WAC9D4F,MAAOD,QACIxE,IAAVoD,EAAsBA,EAAQF,EACnC,CAEA,IAAI5C,EAAWD,EAAKC,SAChBmE,EAAQpE,EAAKoE,MAEbd,GADWtD,EAAKsE,SACRtE,EAAKsD,OACbf,EAAYvC,EAAKuC,UACjBgC,GAAaC,EAAAA,EAAAA,GAAyBxE,EAAMtD,GAE5C+H,GAAcC,EAAAA,EAAAA,GAAKH,EAAY9B,IAE/Bb,EAAWd,EAAWF,GACtB+D,EAAkB,GAAGlG,OAAOD,EAAe,WAC3CoG,EAAkBP,IAAW7F,EAAemG,EAAiBpC,GAAYyB,EAAc,CAAC,GAAGa,EAAAA,EAAAA,GAAgBb,EAAa,GAAGvF,OAAOkG,EAAiB,YAAaV,IAAcY,EAAAA,EAAAA,GAAgBb,EAAa,GAAGvF,OAAOkG,EAAiB,WAAYtE,IAAgB0D,IAAc9D,IAAW4E,EAAAA,EAAAA,GAAgBb,EAAa,GAAGvF,OAAOkG,EAAiB,aAAc1E,IAAW4E,EAAAA,EAAAA,GAAgBb,EAAa,GAAGvF,OAAOkG,EAAiB,aAAc/C,GAAWoC,IAC7bZ,EAAcN,GAASX,GACvB2C,GAAe5G,GAAwD,oBAAzBA,GAAuC0D,EAErFhF,EAAiC,kBAAhBwG,EAA2BA,EAAcA,GAAexC,EAEzEmE,EAAcpI,EAAYC,GAAWA,EAAQqE,gBAAatB,EAM9D,YAJcA,IAAVyE,IACFW,EAAcX,GAGIxG,EAAAA,cAAoB,OAAOyF,EAAAA,EAAAA,GAAS,CAAC,GAAGF,EAAAA,EAAAA,GAAUsB,GAAc,CAClF,gBAAiB7C,EACjBW,UAAWqC,EACXR,MAAOW,EACPC,YAAa,WACP3E,IAAgB0D,GAAa9D,GAIjCM,EAAUwD,EACZ,EACAkB,QAAS,WACFhF,GACH0B,EAAcf,EAElB,EACA0C,MAAOA,IACQ1F,EAAAA,cAAoB,MAAO,CAC1C2E,UAAW,GAAG9D,OAAOkG,EAAiB,aACrC/H,GAAuBgB,EAAAA,eAAqBM,IAAyB0D,EAAUkD,GAA4BlH,EAAAA,cAAoBsH,EAAAA,EAAU,CAC1I3C,UAAW,GAAG9D,OAAOD,EAAe,iBACpC2G,cAAejH,EACfkH,mBAAoB,CAClBtE,WAAYc,IAEbA,EAAW,SAAM,MACtB,IACF,EAEIyD,EAA6BzH,EAAAA,WAAiBf,GAClDwI,EAAcC,YAAc,aAC5B,K","sources":["../node_modules/rc-select/es/OptGroup.js","../node_modules/rc-select/es/Option.js","../node_modules/rc-select/es/OptionList.js"],"sourcesContent":["/** This is a placeholder, not real render in dom */\nvar OptGroup = function OptGroup() {\n  return null;\n};\n\nOptGroup.isSelectOptGroup = true;\nexport default OptGroup;","/** This is a placeholder, not real render in dom */\nvar Option = function Option() {\n  return null;\n};\n\nOption.isSelectOption = true;\nexport default Option;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _excluded = [\"disabled\", \"title\", \"children\", \"style\", \"className\"];\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport omit from \"rc-util/es/omit\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport classNames from 'classnames';\nimport List from 'rc-virtual-list';\nimport TransBtn from './TransBtn';\nimport { isPlatformMac } from './utils/platformUtil';\nimport useBaseProps from './hooks/useBaseProps';\nimport SelectContext from './SelectContext';\n\nfunction isTitleType(content) {\n  return typeof content === 'string' || typeof content === 'number';\n}\n/**\n * Using virtual list of option display.\n * Will fallback to dom if use customize render.\n */\n\n\nvar OptionList = function OptionList(_, ref) {\n  var _useBaseProps = useBaseProps(),\n      prefixCls = _useBaseProps.prefixCls,\n      id = _useBaseProps.id,\n      open = _useBaseProps.open,\n      multiple = _useBaseProps.multiple,\n      mode = _useBaseProps.mode,\n      searchValue = _useBaseProps.searchValue,\n      toggleOpen = _useBaseProps.toggleOpen,\n      notFoundContent = _useBaseProps.notFoundContent,\n      onPopupScroll = _useBaseProps.onPopupScroll;\n\n  var _React$useContext = React.useContext(SelectContext),\n      flattenOptions = _React$useContext.flattenOptions,\n      onActiveValue = _React$useContext.onActiveValue,\n      defaultActiveFirstOption = _React$useContext.defaultActiveFirstOption,\n      onSelect = _React$useContext.onSelect,\n      menuItemSelectedIcon = _React$useContext.menuItemSelectedIcon,\n      rawValues = _React$useContext.rawValues,\n      fieldNames = _React$useContext.fieldNames,\n      virtual = _React$useContext.virtual,\n      listHeight = _React$useContext.listHeight,\n      listItemHeight = _React$useContext.listItemHeight;\n\n  var itemPrefixCls = \"\".concat(prefixCls, \"-item\");\n  var memoFlattenOptions = useMemo(function () {\n    return flattenOptions;\n  }, [open, flattenOptions], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  }); // =========================== List ===========================\n\n  var listRef = React.useRef(null);\n\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n\n  var scrollIntoView = function scrollIntoView(args) {\n    if (listRef.current) {\n      listRef.current.scrollTo(typeof args === 'number' ? {\n        index: args\n      } : args);\n    }\n  }; // ========================== Active ==========================\n\n\n  var getEnabledActiveIndex = function getEnabledActiveIndex(index) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var len = memoFlattenOptions.length;\n\n    for (var i = 0; i < len; i += 1) {\n      var current = (index + i * offset + len) % len;\n      var _memoFlattenOptions$c = memoFlattenOptions[current],\n          group = _memoFlattenOptions$c.group,\n          data = _memoFlattenOptions$c.data;\n\n      if (!group && !data.disabled) {\n        return current;\n      }\n    }\n\n    return -1;\n  };\n\n  var _React$useState = React.useState(function () {\n    return getEnabledActiveIndex(0);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeIndex = _React$useState2[0],\n      setActiveIndex = _React$useState2[1];\n\n  var setActive = function setActive(index) {\n    var fromKeyboard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    setActiveIndex(index);\n    var info = {\n      source: fromKeyboard ? 'keyboard' : 'mouse'\n    }; // Trigger active event\n\n    var flattenItem = memoFlattenOptions[index];\n\n    if (!flattenItem) {\n      onActiveValue(null, -1, info);\n      return;\n    }\n\n    onActiveValue(flattenItem.value, index, info);\n  }; // Auto active first item when list length or searchValue changed\n\n\n  useEffect(function () {\n    setActive(defaultActiveFirstOption !== false ? getEnabledActiveIndex(0) : -1);\n  }, [memoFlattenOptions.length, searchValue]); // https://github.com/ant-design/ant-design/issues/34975\n\n  var isSelected = React.useCallback(function (value) {\n    return rawValues.has(value) && mode !== 'combobox';\n  }, [mode, _toConsumableArray(rawValues).toString()]); // Auto scroll to item position in single mode\n\n  useEffect(function () {\n    /**\n     * React will skip `onChange` when component update.\n     * `setActive` function will call root accessibility state update which makes re-render.\n     * So we need to delay to let Input component trigger onChange first.\n     */\n    var timeoutId = setTimeout(function () {\n      if (!multiple && open && rawValues.size === 1) {\n        var value = Array.from(rawValues)[0];\n        var index = memoFlattenOptions.findIndex(function (_ref) {\n          var data = _ref.data;\n          return data.value === value;\n        });\n\n        if (index !== -1) {\n          setActive(index);\n          scrollIntoView(index);\n        }\n      }\n    }); // Force trigger scrollbar visible when open\n\n    if (open) {\n      var _listRef$current;\n\n      (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(undefined);\n    }\n\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, [open, searchValue]); // ========================== Values ==========================\n\n  var onSelectValue = function onSelectValue(value) {\n    if (value !== undefined) {\n      onSelect(value, {\n        selected: !rawValues.has(value)\n      });\n    } // Single mode should always close by select\n\n\n    if (!multiple) {\n      toggleOpen(false);\n    }\n  }; // ========================= Keyboard =========================\n\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      onKeyDown: function onKeyDown(event) {\n        var which = event.which,\n            ctrlKey = event.ctrlKey;\n\n        switch (which) {\n          // >>> Arrow keys & ctrl + n/p on Mac\n          case KeyCode.N:\n          case KeyCode.P:\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n            {\n              var offset = 0;\n\n              if (which === KeyCode.UP) {\n                offset = -1;\n              } else if (which === KeyCode.DOWN) {\n                offset = 1;\n              } else if (isPlatformMac() && ctrlKey) {\n                if (which === KeyCode.N) {\n                  offset = 1;\n                } else if (which === KeyCode.P) {\n                  offset = -1;\n                }\n              }\n\n              if (offset !== 0) {\n                var nextActiveIndex = getEnabledActiveIndex(activeIndex + offset, offset);\n                scrollIntoView(nextActiveIndex);\n                setActive(nextActiveIndex, true);\n              }\n\n              break;\n            }\n          // >>> Select\n\n          case KeyCode.ENTER:\n            {\n              // value\n              var item = memoFlattenOptions[activeIndex];\n\n              if (item && !item.data.disabled) {\n                onSelectValue(item.value);\n              } else {\n                onSelectValue(undefined);\n              }\n\n              if (open) {\n                event.preventDefault();\n              }\n\n              break;\n            }\n          // >>> Close\n\n          case KeyCode.ESC:\n            {\n              toggleOpen(false);\n\n              if (open) {\n                event.stopPropagation();\n              }\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {},\n      scrollTo: function scrollTo(index) {\n        scrollIntoView(index);\n      }\n    };\n  }); // ========================== Render ==========================\n\n  if (memoFlattenOptions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      id: \"\".concat(id, \"_list\"),\n      className: \"\".concat(itemPrefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n\n  var omitFieldNameList = Object.keys(fieldNames).map(function (key) {\n    return fieldNames[key];\n  });\n\n  var getLabel = function getLabel(item) {\n    return item.label;\n  };\n\n  var renderItem = function renderItem(index) {\n    var item = memoFlattenOptions[index];\n    if (!item) return null;\n    var itemData = item.data || {};\n    var value = itemData.value;\n    var group = item.group;\n    var attrs = pickAttrs(itemData, true);\n    var mergedLabel = getLabel(item);\n    return item ? /*#__PURE__*/React.createElement(\"div\", _extends({\n      \"aria-label\": typeof mergedLabel === 'string' && !group ? mergedLabel : null\n    }, attrs, {\n      key: index,\n      role: group ? 'presentation' : 'option',\n      id: \"\".concat(id, \"_list_\").concat(index),\n      \"aria-selected\": isSelected(value)\n    }), value) : null;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"listbox\",\n    id: \"\".concat(id, \"_list\"),\n    style: {\n      height: 0,\n      width: 0,\n      overflow: 'hidden'\n    }\n  }, renderItem(activeIndex - 1), renderItem(activeIndex), renderItem(activeIndex + 1)), /*#__PURE__*/React.createElement(List, {\n    itemKey: \"key\",\n    ref: listRef,\n    data: memoFlattenOptions,\n    height: listHeight,\n    itemHeight: listItemHeight,\n    fullHeight: false,\n    onMouseDown: onListMouseDown,\n    onScroll: onPopupScroll,\n    virtual: virtual\n  }, function (item, itemIndex) {\n    var _classNames;\n\n    var group = item.group,\n        groupOption = item.groupOption,\n        data = item.data,\n        label = item.label,\n        value = item.value;\n    var key = data.key; // Group\n\n    if (group) {\n      var _data$title;\n\n      var groupTitle = (_data$title = data.title) !== null && _data$title !== void 0 ? _data$title : isTitleType(label) ? label.toString() : undefined;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(itemPrefixCls, \"\".concat(itemPrefixCls, \"-group\")),\n        title: groupTitle\n      }, label !== undefined ? label : key);\n    }\n\n    var disabled = data.disabled,\n        title = data.title,\n        children = data.children,\n        style = data.style,\n        className = data.className,\n        otherProps = _objectWithoutProperties(data, _excluded);\n\n    var passedProps = omit(otherProps, omitFieldNameList); // Option\n\n    var selected = isSelected(value);\n    var optionPrefixCls = \"\".concat(itemPrefixCls, \"-option\");\n    var optionClassName = classNames(itemPrefixCls, optionPrefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(optionPrefixCls, \"-grouped\"), groupOption), _defineProperty(_classNames, \"\".concat(optionPrefixCls, \"-active\"), activeIndex === itemIndex && !disabled), _defineProperty(_classNames, \"\".concat(optionPrefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(optionPrefixCls, \"-selected\"), selected), _classNames));\n    var mergedLabel = getLabel(item);\n    var iconVisible = !menuItemSelectedIcon || typeof menuItemSelectedIcon === 'function' || selected; // https://github.com/ant-design/ant-design/issues/34145\n\n    var content = typeof mergedLabel === 'number' ? mergedLabel : mergedLabel || value; // https://github.com/ant-design/ant-design/issues/26717\n\n    var optionTitle = isTitleType(content) ? content.toString() : undefined;\n\n    if (title !== undefined) {\n      optionTitle = title;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, pickAttrs(passedProps), {\n      \"aria-selected\": selected,\n      className: optionClassName,\n      title: optionTitle,\n      onMouseMove: function onMouseMove() {\n        if (activeIndex === itemIndex || disabled) {\n          return;\n        }\n\n        setActive(itemIndex);\n      },\n      onClick: function onClick() {\n        if (!disabled) {\n          onSelectValue(value);\n        }\n      },\n      style: style\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(optionPrefixCls, \"-content\")\n    }, content), /*#__PURE__*/React.isValidElement(menuItemSelectedIcon) || selected, iconVisible && /*#__PURE__*/React.createElement(TransBtn, {\n      className: \"\".concat(itemPrefixCls, \"-option-state\"),\n      customizeIcon: menuItemSelectedIcon,\n      customizeIconProps: {\n        isSelected: selected\n      }\n    }, selected ? '✓' : null));\n  }));\n};\n\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nRefOptionList.displayName = 'OptionList';\nexport default RefOptionList;"],"names":["OptGroup","isSelectOptGroup","Option","isSelectOption","_excluded","isTitleType","content","OptionList","_","ref","_useBaseProps","useBaseProps","prefixCls","id","open","multiple","mode","searchValue","toggleOpen","notFoundContent","onPopupScroll","_React$useContext","React","SelectContext","flattenOptions","onActiveValue","defaultActiveFirstOption","onSelect","menuItemSelectedIcon","rawValues","fieldNames","virtual","listHeight","listItemHeight","itemPrefixCls","concat","memoFlattenOptions","useMemo","prev","next","listRef","onListMouseDown","event","preventDefault","scrollIntoView","args","current","scrollTo","index","getEnabledActiveIndex","offset","arguments","length","undefined","len","i","_memoFlattenOptions$c","group","data","disabled","_React$useState","_React$useState2","_slicedToArray","activeIndex","setActiveIndex","setActive","fromKeyboard","info","source","flattenItem","value","useEffect","isSelected","has","_toConsumableArray","toString","_listRef$current","timeoutId","setTimeout","size","Array","from","findIndex","_ref","clearTimeout","onSelectValue","selected","onKeyDown","which","ctrlKey","KeyCode","isPlatformMac","nextActiveIndex","item","stopPropagation","onKeyUp","role","className","onMouseDown","omitFieldNameList","Object","keys","map","key","getLabel","label","renderItem","itemData","attrs","pickAttrs","mergedLabel","_extends","style","height","width","overflow","List","itemKey","itemHeight","fullHeight","onScroll","itemIndex","_classNames","groupOption","_data$title","groupTitle","title","classNames","children","otherProps","_objectWithoutProperties","passedProps","omit","optionPrefixCls","optionClassName","_defineProperty","iconVisible","optionTitle","onMouseMove","onClick","TransBtn","customizeIcon","customizeIconProps","RefOptionList","displayName"],"sourceRoot":""}